strict digraph "compose( ,  )" {
	node [label="\N"];
	"21:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f3ba9bcebd0>",
		fillcolor=turquoise,
		label="21:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"22:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f3ba9e7d4d0>",
		fillcolor=springgreen,
		label="22:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"21:BL" -> "22:IF"	[cond="[]",
		lineno=None];
	"23:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f3ba9e7dc50>",
		fillcolor=firebrick,
		label="23:NS
q <= q << 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f3ba9e7dc50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_18:AL"	[def_var="['q']",
		label="Leaf_18:AL"];
	"23:NS" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"27:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f3ba9eea310>",
		fillcolor=firebrick,
		label="27:NS
q <= q >> 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f3ba9eea310>]",
		style=filled,
		typ=NonblockingSubstitution];
	"27:NS" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"18:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f3ba9e77090>",
		clk_sens=True,
		fillcolor=gold,
		label="18:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['load', 'ena', 'amount', 'data', 'q']"];
	"Leaf_18:AL" -> "18:AL";
	"28:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f3ba9ad8a10>",
		fillcolor=springgreen,
		label="28:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"29:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f3ba9ad8c10>",
		fillcolor=firebrick,
		label="29:NS
q <= q >> 8;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f3ba9ad8c10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"28:IF" -> "29:NS"	[cond="['amount']",
		label="(amount == 2'b11)",
		lineno=28];
	"19:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f3ba9e64890>",
		fillcolor=springgreen,
		label="19:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"19:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f3ba9e64790>",
		fillcolor=turquoise,
		label="19:BL
q <= data;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f3ba9e64210>]",
		style=filled,
		typ=Block];
	"19:IF" -> "19:BL"	[cond="['load']",
		label=load,
		lineno=19];
	"21:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f3ba9bce550>",
		fillcolor=springgreen,
		label="21:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"19:IF" -> "21:IF"	[cond="['load']",
		label="!(load)",
		lineno=19];
	"18:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f3ba9ef50d0>",
		fillcolor=turquoise,
		label="18:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"18:BL" -> "19:IF"	[cond="[]",
		lineno=None];
	"24:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f3ba9e67f50>",
		fillcolor=springgreen,
		label="24:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"26:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f3ba9eeaf90>",
		fillcolor=springgreen,
		label="26:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"24:IF" -> "26:IF"	[cond="['amount']",
		label="!((amount == 2'b01))",
		lineno=24];
	"25:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f3ba9e67290>",
		fillcolor=firebrick,
		label="25:NS
q <= q << 8;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f3ba9e67290>]",
		style=filled,
		typ=NonblockingSubstitution];
	"24:IF" -> "25:NS"	[cond="['amount']",
		label="(amount == 2'b01)",
		lineno=24];
	"26:IF" -> "27:NS"	[cond="['amount']",
		label="(amount == 2'b10)",
		lineno=26];
	"26:IF" -> "28:IF"	[cond="['amount']",
		label="!((amount == 2'b10))",
		lineno=26];
	"29:NS" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"18:AL" -> "18:BL"	[cond="[]",
		lineno=None];
	"22:IF" -> "23:NS"	[cond="['amount']",
		label="(amount == 2'b00)",
		lineno=22];
	"22:IF" -> "24:IF"	[cond="['amount']",
		label="!((amount == 2'b00))",
		lineno=22];
	"19:BL" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"21:IF" -> "21:BL"	[cond="['ena']",
		label=ena,
		lineno=21];
	"25:NS" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
}
