strict digraph "compose( ,  )" {
	node [label="\N"];
	"20:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f984f4771d0>",
		fillcolor=turquoise,
		label="20:BL
q <= data;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f984f463210>]",
		style=filled,
		typ=Block];
	"Leaf_18:AL"	[def_var="['q']",
		label="Leaf_18:AL"];
	"20:BL" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"18:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f984f463890>",
		fillcolor=turquoise,
		label="18:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"19:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f984f463790>",
		fillcolor=springgreen,
		label="19:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"18:BL" -> "19:IF"	[cond="[]",
		lineno=None];
	"23:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f984f1cee90>",
		fillcolor=springgreen,
		label="23:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"18:BL" -> "23:IF"	[cond="[]",
		lineno=None];
	"26:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f984f47d6d0>",
		fillcolor=firebrick,
		label="26:NS
q <= q << 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f984f47d6d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"26:NS" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"27:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f984f466ad0>",
		fillcolor=firebrick,
		label="27:NS
q <= q << 8;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f984f466ad0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"27:NS" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"27:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f984f47dd10>",
		fillcolor=lightcyan,
		label="27:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"27:CA" -> "27:NS"	[cond="[]",
		lineno=None];
	"18:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f984f477090>",
		clk_sens=True,
		fillcolor=gold,
		label="18:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['load', 'q', 'amount', 'data', 'ena']"];
	"Leaf_18:AL" -> "18:AL";
	"28:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f984f881610>",
		fillcolor=firebrick,
		label="28:NS
q <= q >> 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f984f881610>]",
		style=filled,
		typ=NonblockingSubstitution];
	"28:NS" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"24:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f984f1ce290>",
		fillcolor=turquoise,
		label="24:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"25:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f984f466550>",
		fillcolor=linen,
		label="25:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"24:BL" -> "25:CS"	[cond="[]",
		lineno=None];
	"19:IF" -> "20:BL"	[cond="['load']",
		label=load,
		lineno=19];
	"29:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f984f4e0650>",
		fillcolor=firebrick,
		label="29:NS
q <= q >> 8;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f984f4e0650>]",
		style=filled,
		typ=NonblockingSubstitution];
	"29:NS" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"18:AL" -> "18:BL"	[cond="[]",
		lineno=None];
	"23:IF" -> "24:BL"	[cond="['ena']",
		label=ena,
		lineno=23];
	"26:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f984f471550>",
		fillcolor=lightcyan,
		label="26:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"26:CA" -> "26:NS"	[cond="[]",
		lineno=None];
	"29:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f984f4e0fd0>",
		fillcolor=lightcyan,
		label="29:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"29:CA" -> "29:NS"	[cond="[]",
		lineno=None];
	"25:CS" -> "27:CA"	[cond="['amount']",
		label=amount,
		lineno=25];
	"25:CS" -> "26:CA"	[cond="['amount']",
		label=amount,
		lineno=25];
	"25:CS" -> "29:CA"	[cond="['amount']",
		label=amount,
		lineno=25];
	"28:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f984f466d10>",
		fillcolor=lightcyan,
		label="28:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"25:CS" -> "28:CA"	[cond="['amount']",
		label=amount,
		lineno=25];
	"28:CA" -> "28:NS"	[cond="[]",
		lineno=None];
}
