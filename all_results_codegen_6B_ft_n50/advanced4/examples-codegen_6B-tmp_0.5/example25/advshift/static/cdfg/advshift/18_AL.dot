strict digraph "" {
	node [label="\N"];
	"23:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f158bec6150>",
		fillcolor=springgreen,
		label="23:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"23:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f158bec62d0>",
		fillcolor=turquoise,
		label="23:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"23:IF" -> "23:BL"	[cond="['ena']",
		label=ena,
		lineno=23];
	"19:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f158bee9410>",
		fillcolor=turquoise,
		label="19:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"20:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f158bee9450>",
		fillcolor=springgreen,
		label="20:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"19:BL" -> "20:IF"	[cond="[]",
		lineno=None];
	"31:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f158bec6b50>",
		fillcolor=turquoise,
		label="31:BL
q <= { q[63], q[63:1] };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f158bec6b90>]",
		style=filled,
		typ=Block];
	"Leaf_18:AL"	[def_var="['q']",
		label="Leaf_18:AL"];
	"31:BL" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"20:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f158bee9490>",
		fillcolor=turquoise,
		label="20:BL
q <= data;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f158bee94d0>]",
		style=filled,
		typ=Block];
	"20:BL" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"25:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f158bec63d0>",
		fillcolor=lightcyan,
		label="25:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"25:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f158bec6450>",
		fillcolor=turquoise,
		label="25:BL
q <= { q[62:0], 1'b0 };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f158bec6490>]",
		style=filled,
		typ=Block];
	"25:CA" -> "25:BL"	[cond="[]",
		lineno=None];
	"31:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f158bec6ad0>",
		fillcolor=lightcyan,
		label="31:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"31:CA" -> "31:BL"	[cond="[]",
		lineno=None];
	"20:IF" -> "23:IF"	[cond="['load']",
		label="!(load)",
		lineno=20];
	"20:IF" -> "20:BL"	[cond="['load']",
		label=load,
		lineno=20];
	"34:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f158bec6f10>",
		fillcolor=lightcyan,
		label="34:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"34:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f158bec6f90>",
		fillcolor=turquoise,
		label="34:BL
q <= { q[0], q[63:8] };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f158bec6fd0>]",
		style=filled,
		typ=Block];
	"34:CA" -> "34:BL"	[cond="[]",
		lineno=None];
	"24:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f158bec6310>",
		fillcolor=linen,
		label="24:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"24:CS" -> "25:CA"	[cond="['amount']",
		label=amount,
		lineno=24];
	"24:CS" -> "31:CA"	[cond="['amount']",
		label=amount,
		lineno=24];
	"24:CS" -> "34:CA"	[cond="['amount']",
		label=amount,
		lineno=24];
	"28:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f158bec6710>",
		fillcolor=lightcyan,
		label="28:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"24:CS" -> "28:CA"	[cond="['amount']",
		label=amount,
		lineno=24];
	"34:BL" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"25:BL" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"18:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f158bee9710>",
		clk_sens=True,
		fillcolor=gold,
		label="18:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['load', 'ena', 'amount', 'data', 'q']"];
	"18:AL" -> "19:BL"	[cond="[]",
		lineno=None];
	"28:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f158bec6790>",
		fillcolor=turquoise,
		label="28:BL
q <= { q[55:0], 8'b0 };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f158bec67d0>]",
		style=filled,
		typ=Block];
	"28:CA" -> "28:BL"	[cond="[]",
		lineno=None];
	"23:BL" -> "24:CS"	[cond="[]",
		lineno=None];
	"28:BL" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
}
