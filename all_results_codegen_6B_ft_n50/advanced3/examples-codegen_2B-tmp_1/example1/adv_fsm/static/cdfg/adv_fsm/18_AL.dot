strict digraph "" {
	node [label="\N"];
	"24:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f813797a650>",
		fillcolor=lightcyan,
		label="24:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"24:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f813797a690>",
		fillcolor=firebrick,
		label="24:NS
next_state <= IDLE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f813797a690>]",
		style=filled,
		typ=NonblockingSubstitution];
	"24:CA" -> "24:NS"	[cond="[]",
		lineno=None];
	"22:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f813797a7d0>",
		fillcolor=springgreen,
		label="22:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"22:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f813797a810>",
		fillcolor=firebrick,
		label="22:NS
next_state <= IDLE;
next_state <= IDLE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f813797a810>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f813797a810>]",
		style=filled,
		typ=NonblockingSubstitution];
	"22:IF" -> "22:NS"	[cond="['x']",
		label="!(x)",
		lineno=22];
	"23:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f813797aad0>",
		fillcolor=firebrick,
		label="23:NS
next_state <= S1;
next_state <= S1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f813797aad0>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f813797aad0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_18:AL"	[def_var="['next_state']",
		label="Leaf_18:AL"];
	"23:NS" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"23:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f813797acd0>",
		fillcolor=springgreen,
		label="23:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"23:IF" -> "23:NS"	[cond="['reset', 'x']",
		label="!((reset | x))",
		lineno=23];
	"22:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f813797ac50>",
		fillcolor=lightcyan,
		label="22:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"22:CA" -> "22:IF"	[cond="[]",
		lineno=None];
	"21:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f813797af10>",
		fillcolor=lightcyan,
		label="21:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"21:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f813797af90>",
		fillcolor=springgreen,
		label="21:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"21:CA" -> "21:IF"	[cond="[]",
		lineno=None];
	"21:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f813797afd0>",
		fillcolor=firebrick,
		label="21:NS
next_state <= S10;
next_state <= S10;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f813797afd0>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f813797afd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"21:IF" -> "21:NS"	[cond="['x']",
		label="!(x)",
		lineno=21];
	"20:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f813797a150>",
		fillcolor=springgreen,
		label="20:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"20:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f813797a290>",
		fillcolor=firebrick,
		label="20:NS
next_state <= IDLE;
next_state <= IDLE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f813797a290>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f813797a290>]",
		style=filled,
		typ=NonblockingSubstitution];
	"20:IF" -> "20:NS"	[cond="['reset', 'x']",
		label="!((reset | x))",
		lineno=20];
	"22:NS" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"20:NS" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"20:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f8137486390>",
		fillcolor=lightcyan,
		label="20:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"20:CA" -> "20:IF"	[cond="[]",
		lineno=None];
	"18:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f8137486490>",
		clk_sens=True,
		fillcolor=gold,
		label="18:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'x', 'present_state']"];
	"19:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f81374865d0>",
		fillcolor=linen,
		label="19:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"18:AL" -> "19:CS"	[cond="[]",
		lineno=None];
	"24:NS" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"23:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f81374862d0>",
		fillcolor=lightcyan,
		label="23:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"23:CA" -> "23:IF"	[cond="[]",
		lineno=None];
	"19:CS" -> "24:CA"	[cond="['present_state']",
		label=present_state,
		lineno=19];
	"19:CS" -> "22:CA"	[cond="['present_state']",
		label=present_state,
		lineno=19];
	"19:CS" -> "21:CA"	[cond="['present_state']",
		label=present_state,
		lineno=19];
	"19:CS" -> "20:CA"	[cond="['present_state']",
		label=present_state,
		lineno=19];
	"19:CS" -> "23:CA"	[cond="['present_state']",
		label=present_state,
		lineno=19];
	"21:NS" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
}
