strict digraph "compose( ,  )" {
	node [label="\N"];
	"17:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7efde71e3890>",
		clk_sens=True,
		fillcolor=gold,
		label="17:AL",
		sens="['clk', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'next_state']"];
	"18:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7efde71f1450>",
		fillcolor=springgreen,
		label="18:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"17:AL" -> "18:IF"	[cond="[]",
		lineno=None];
	"24:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7efde71e6150>",
		fillcolor=lightcyan,
		label="24:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"25:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7efdea8a4190>",
		fillcolor=springgreen,
		label="25:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"24:CA" -> "25:IF"	[cond="[]",
		lineno=None];
	"32:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7efde7098dd0>",
		fillcolor=springgreen,
		label="32:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"32:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7efde7098610>",
		fillcolor=firebrick,
		label="32:NS
next_state <= S101;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7efde7098610>]",
		style=filled,
		typ=NonblockingSubstitution];
	"32:IF" -> "32:NS"	[cond="['x']",
		label=x,
		lineno=32];
	"34:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7efde7098d90>",
		fillcolor=firebrick,
		label="34:NS
next_state <= S1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7efde7098d90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"32:IF" -> "34:NS"	[cond="['x']",
		label="!(x)",
		lineno=32];
	"28:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7efde74aad90>",
		fillcolor=springgreen,
		label="28:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"28:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7efde7446150>",
		fillcolor=firebrick,
		label="28:NS
next_state <= S10;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7efde7446150>]",
		style=filled,
		typ=NonblockingSubstitution];
	"28:IF" -> "28:NS"	[cond="['x']",
		label=x,
		lineno=28];
	"30:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7efde70983d0>",
		fillcolor=firebrick,
		label="30:NS
next_state <= S1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7efde70983d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"28:IF" -> "30:NS"	[cond="['x']",
		label="!(x)",
		lineno=28];
	"19:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7efde718e4d0>",
		fillcolor=firebrick,
		label="19:NS
present_state <= IDLE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7efde718e4d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_17:AL"	[def_var="['present_state']",
		label="Leaf_17:AL"];
	"19:NS" -> "Leaf_17:AL"	[cond="[]",
		lineno=None];
	"26:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7efde74aa250>",
		fillcolor=firebrick,
		label="26:NS
next_state <= IDLE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7efde74aa250>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_22:AL"	[def_var="['next_state']",
		label="Leaf_22:AL"];
	"26:NS" -> "Leaf_22:AL"	[cond="[]",
		lineno=None];
	"36:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7efde7098910>",
		fillcolor=firebrick,
		label="36:NS
next_state <= IDLE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7efde7098910>]",
		style=filled,
		typ=NonblockingSubstitution];
	"36:NS" -> "Leaf_22:AL"	[cond="[]",
		lineno=None];
	"38:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7efde7098590>",
		fillcolor=firebrick,
		label="38:NS
next_state <= S10;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7efde7098590>]",
		style=filled,
		typ=NonblockingSubstitution];
	"38:NS" -> "Leaf_22:AL"	[cond="[]",
		lineno=None];
	"27:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7efdeb345d10>",
		fillcolor=lightcyan,
		label="27:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"27:CA" -> "28:IF"	[cond="[]",
		lineno=None];
	"32:NS" -> "Leaf_22:AL"	[cond="[]",
		lineno=None];
	"35:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7efde7098bd0>",
		fillcolor=lightcyan,
		label="35:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"36:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7efde7098f10>",
		fillcolor=springgreen,
		label="36:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"35:CA" -> "36:IF"	[cond="[]",
		lineno=None];
	"25:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7efde7841610>",
		fillcolor=firebrick,
		label="25:NS
next_state <= S1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7efde7841610>]",
		style=filled,
		typ=NonblockingSubstitution];
	"25:NS" -> "Leaf_22:AL"	[cond="[]",
		lineno=None];
	"41:AS"	[ast="<pyverilog.vparser.ast.Assign object at 0x7efde7098790>",
		def_var="['z']",
		fillcolor=deepskyblue,
		label="41:AS
z = present_state == S101;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['present_state']"];
	"Leaf_22:AL" -> "17:AL";
	"34:NS" -> "Leaf_22:AL"	[cond="[]",
		lineno=None];
	"22:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7efde71e6750>",
		clk_sens=False,
		fillcolor=gold,
		label="22:AL",
		sens="['present_state', 'x']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['x', 'present_state']"];
	"23:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7efde7098cd0>",
		fillcolor=linen,
		label="23:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"22:AL" -> "23:CS"	[cond="[]",
		lineno=None];
	"36:IF" -> "36:NS"	[cond="['x']",
		label=x,
		lineno=36];
	"36:IF" -> "38:NS"	[cond="['x']",
		label="!(x)",
		lineno=36];
	"31:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7efde7446550>",
		fillcolor=lightcyan,
		label="31:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"31:CA" -> "32:IF"	[cond="[]",
		lineno=None];
	"28:NS" -> "Leaf_22:AL"	[cond="[]",
		lineno=None];
	"25:IF" -> "26:NS"	[cond="['x']",
		label="!(x)",
		lineno=25];
	"25:IF" -> "25:NS"	[cond="['x']",
		label=x,
		lineno=25];
	"23:CS" -> "24:CA"	[cond="['present_state']",
		label=present_state,
		lineno=23];
	"23:CS" -> "27:CA"	[cond="['present_state']",
		label=present_state,
		lineno=23];
	"23:CS" -> "35:CA"	[cond="['present_state']",
		label=present_state,
		lineno=23];
	"23:CS" -> "31:CA"	[cond="['present_state']",
		label=present_state,
		lineno=23];
	"18:IF" -> "19:NS"	[cond="['reset']",
		label="(!reset)",
		lineno=18];
	"21:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7efde71f1050>",
		fillcolor=firebrick,
		label="21:NS
present_state <= next_state;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7efde71f1050>]",
		style=filled,
		typ=NonblockingSubstitution];
	"18:IF" -> "21:NS"	[cond="['reset']",
		label="!((!reset))",
		lineno=18];
	"30:NS" -> "Leaf_22:AL"	[cond="[]",
		lineno=None];
	"Leaf_17:AL" -> "41:AS";
	"Leaf_17:AL" -> "22:AL";
	"21:NS" -> "Leaf_17:AL"	[cond="[]",
		lineno=None];
}
