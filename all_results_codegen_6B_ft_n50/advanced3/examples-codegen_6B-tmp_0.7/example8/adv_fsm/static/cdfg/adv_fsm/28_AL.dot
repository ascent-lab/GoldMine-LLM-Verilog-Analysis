strict digraph "" {
	node [label="\N"];
	"30:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f0b8c1a6f10>",
		fillcolor=lightcyan,
		label="30:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"30:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0b8c1a6f90>",
		fillcolor=cadetblue,
		label="30:BS
next_state = (x)? S1 : IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0b8c1a6f90>]",
		style=filled,
		typ=BlockingSubstitution];
	"30:CA" -> "30:BS"	[cond="[]",
		lineno=None];
	"33:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f0b8c19c210>",
		fillcolor=lightcyan,
		label="33:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"33:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0b8c19c290>",
		fillcolor=cadetblue,
		label="33:BS
next_state = (x)? IDLE : S1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0b8c19c290>]",
		style=filled,
		typ=BlockingSubstitution];
	"33:CA" -> "33:BS"	[cond="[]",
		lineno=None];
	"31:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f0b8c19c4d0>",
		fillcolor=lightcyan,
		label="31:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"31:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0b8c19c550>",
		fillcolor=cadetblue,
		label="31:BS
next_state = (x)? S10 : IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0b8c19c550>]",
		style=filled,
		typ=BlockingSubstitution];
	"31:CA" -> "31:BS"	[cond="[]",
		lineno=None];
	"Leaf_28:AL"	[def_var="['next_state']",
		label="Leaf_28:AL"];
	"32:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0b8c19c790>",
		fillcolor=cadetblue,
		label="32:BS
next_state = (x)? S101 : IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0b8c19c790>]",
		style=filled,
		typ=BlockingSubstitution];
	"32:BS" -> "Leaf_28:AL"	[cond="[]",
		lineno=None];
	"32:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f0b8c19c9d0>",
		fillcolor=lightcyan,
		label="32:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"32:CA" -> "32:BS"	[cond="[]",
		lineno=None];
	"30:BS" -> "Leaf_28:AL"	[cond="[]",
		lineno=None];
	"34:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0b8c19ca90>",
		fillcolor=cadetblue,
		label="34:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0b8c19ca90>]",
		style=filled,
		typ=BlockingSubstitution];
	"34:BS" -> "Leaf_28:AL"	[cond="[]",
		lineno=None];
	"34:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f0b8c19cbd0>",
		fillcolor=lightcyan,
		label="34:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"34:CA" -> "34:BS"	[cond="[]",
		lineno=None];
	"29:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f0b8c19cc10>",
		fillcolor=linen,
		label="29:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"29:CS" -> "30:CA"	[cond="['present_state']",
		label=present_state,
		lineno=29];
	"29:CS" -> "33:CA"	[cond="['present_state']",
		label=present_state,
		lineno=29];
	"29:CS" -> "31:CA"	[cond="['present_state']",
		label=present_state,
		lineno=29];
	"29:CS" -> "32:CA"	[cond="['present_state']",
		label=present_state,
		lineno=29];
	"29:CS" -> "34:CA"	[cond="['present_state']",
		label=present_state,
		lineno=29];
	"28:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f0b8c19cd50>",
		clk_sens=False,
		fillcolor=gold,
		label="28:AL",
		sens="['x', 'IDLE', 'S1']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['x', 'IDLE', 'S1', 'present_state']"];
	"28:AL" -> "29:CS"	[cond="[]",
		lineno=None];
	"33:BS" -> "Leaf_28:AL"	[cond="[]",
		lineno=None];
	"31:BS" -> "Leaf_28:AL"	[cond="[]",
		lineno=None];
}
