strict digraph "compose( ,  )" {
	node [label="\N"];
	"30:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f0b8cc66350>",
		fillcolor=lightcyan,
		label="30:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"30:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0b8cce0fd0>",
		fillcolor=cadetblue,
		label="30:BS
next_state = (x)? S1 : IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0b8cce0fd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"30:CA" -> "30:BS"	[cond="[]",
		lineno=None];
	"23:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0b8cc71050>",
		fillcolor=firebrick,
		label="23:NS
present_state <= next_state;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0b8cc71050>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_18:AL"	[def_var="['present_state']",
		label="Leaf_18:AL"];
	"23:NS" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"28:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f0b8cc66d10>",
		clk_sens=False,
		fillcolor=gold,
		label="28:AL",
		sens="['x', 'IDLE', 'S1']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['x', 'IDLE', 'S1', 'present_state']"];
	"Leaf_18:AL" -> "28:AL";
	"26:AS"	[ast="<pyverilog.vparser.ast.Assign object at 0x7f0b8cc66850>",
		def_var="['z']",
		fillcolor=deepskyblue,
		label="26:AS
z = (present_state == S101)? 1 : 0;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['present_state']"];
	"Leaf_18:AL" -> "26:AS";
	"34:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0b8c8d8390>",
		fillcolor=cadetblue,
		label="34:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0b8c8d8390>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_28:AL"	[def_var="['next_state']",
		label="Leaf_28:AL"];
	"34:BS" -> "Leaf_28:AL"	[cond="[]",
		lineno=None];
	"31:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f0b8cce0d10>",
		fillcolor=lightcyan,
		label="31:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"31:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0b8cc86150>",
		fillcolor=cadetblue,
		label="31:BS
next_state = (x)? S10 : IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0b8cc86150>]",
		style=filled,
		typ=BlockingSubstitution];
	"31:CA" -> "31:BS"	[cond="[]",
		lineno=None];
	"18:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f0b8cc63890>",
		clk_sens=True,
		fillcolor=gold,
		label="18:AL",
		sens="['clk', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'next_state']"];
	"Leaf_28:AL" -> "18:AL";
	"32:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0b8c8d8350>",
		fillcolor=cadetblue,
		label="32:BS
next_state = (x)? S101 : IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0b8c8d8350>]",
		style=filled,
		typ=BlockingSubstitution];
	"32:BS" -> "Leaf_28:AL"	[cond="[]",
		lineno=None];
	"32:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f0b8c8d8a10>",
		fillcolor=lightcyan,
		label="32:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"32:CA" -> "32:BS"	[cond="[]",
		lineno=None];
	"30:BS" -> "Leaf_28:AL"	[cond="[]",
		lineno=None];
	"34:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f0b8c8d8fd0>",
		fillcolor=lightcyan,
		label="34:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"34:CA" -> "34:BS"	[cond="[]",
		lineno=None];
	"19:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f0b8cc63ed0>",
		fillcolor=turquoise,
		label="19:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"18:AL" -> "19:BL"	[cond="[]",
		lineno=None];
	"31:BS" -> "Leaf_28:AL"	[cond="[]",
		lineno=None];
	"20:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f0b8cc71450>",
		fillcolor=springgreen,
		label="20:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"19:BL" -> "20:IF"	[cond="[]",
		lineno=None];
	"29:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f0b8c8d8950>",
		fillcolor=linen,
		label="29:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"29:CS" -> "30:CA"	[cond="['present_state']",
		label=present_state,
		lineno=29];
	"29:CS" -> "31:CA"	[cond="['present_state']",
		label=present_state,
		lineno=29];
	"29:CS" -> "32:CA"	[cond="['present_state']",
		label=present_state,
		lineno=29];
	"29:CS" -> "34:CA"	[cond="['present_state']",
		label=present_state,
		lineno=29];
	"33:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f0b8c8d8bd0>",
		fillcolor=lightcyan,
		label="33:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"29:CS" -> "33:CA"	[cond="['present_state']",
		label=present_state,
		lineno=29];
	"33:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0b8c8d8890>",
		fillcolor=cadetblue,
		label="33:BS
next_state = (x)? IDLE : S1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f0b8c8d8890>]",
		style=filled,
		typ=BlockingSubstitution];
	"33:CA" -> "33:BS"	[cond="[]",
		lineno=None];
	"20:IF" -> "23:NS"	[cond="['reset']",
		label="!(reset)",
		lineno=20];
	"21:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0b8c9ce4d0>",
		fillcolor=firebrick,
		label="21:NS
present_state <= IDLE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0b8c9ce4d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"20:IF" -> "21:NS"	[cond="['reset']",
		label=reset,
		lineno=20];
	"28:AL" -> "29:CS"	[cond="[]",
		lineno=None];
	"33:BS" -> "Leaf_28:AL"	[cond="[]",
		lineno=None];
	"21:NS" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
}
