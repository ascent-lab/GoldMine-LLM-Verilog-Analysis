strict digraph "compose( ,  )" {
	node [label="\N"];
	"17:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f344e924e10>",
		clk_sens=True,
		fillcolor=gold,
		label="17:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'next_state']"];
	"18:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f344e924210>",
		fillcolor=turquoise,
		label="18:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"17:AL" -> "18:BL"	[cond="[]",
		lineno=None];
	"34:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f344e598d10>",
		fillcolor=cadetblue,
		label="34:BS
next_state = (x)? S1 : S101;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f344e598d10>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_27:AL"	[def_var="['next_state']",
		label="Leaf_27:AL"];
	"34:BS" -> "Leaf_27:AL"	[cond="[]",
		lineno=None];
	"31:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f344e9aa1d0>",
		fillcolor=lightcyan,
		label="31:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"32:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f344e9aad90>",
		fillcolor=cadetblue,
		label="32:BS
next_state = (x)? S10 : IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f344e9aad90>]",
		style=filled,
		typ=BlockingSubstitution];
	"31:CA" -> "32:BS"	[cond="[]",
		lineno=None];
	"19:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f344e932150>",
		fillcolor=springgreen,
		label="19:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"20:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f344e8cecd0>",
		fillcolor=firebrick,
		label="20:NS
present_state <= IDLE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f344e8cecd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"19:IF" -> "20:NS"	[cond="['reset']",
		label=reset,
		lineno=19];
	"22:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f344e932650>",
		fillcolor=firebrick,
		label="22:NS
present_state <= next_state;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f344e932650>]",
		style=filled,
		typ=NonblockingSubstitution];
	"19:IF" -> "22:NS"	[cond="['reset']",
		label="!(reset)",
		lineno=19];
	"38:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f344e598390>",
		fillcolor=cadetblue,
		label="38:BS
next_state = (x)? S1 : IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f344e598390>]",
		style=filled,
		typ=BlockingSubstitution];
	"38:BS" -> "Leaf_27:AL"	[cond="[]",
		lineno=None];
	"32:BS" -> "Leaf_27:AL"	[cond="[]",
		lineno=None];
	"18:BL" -> "19:IF"	[cond="[]",
		lineno=None];
	"Leaf_17:AL"	[def_var="['present_state']",
		label="Leaf_17:AL"];
	"20:NS" -> "Leaf_17:AL"	[cond="[]",
		lineno=None];
	"30:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f3452a85d10>",
		fillcolor=cadetblue,
		label="30:BS
next_state = (x)? S1 : IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f3452a85d10>]",
		style=filled,
		typ=BlockingSubstitution];
	"30:BS" -> "Leaf_27:AL"	[cond="[]",
		lineno=None];
	"27:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f344e927150>",
		clk_sens=False,
		fillcolor=gold,
		label="27:AL",
		sens="['x', 'IDLE', 'S101']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['x', 'IDLE', 'S101', 'present_state']"];
	"28:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f344e598290>",
		fillcolor=linen,
		label="28:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"27:AL" -> "28:CS"	[cond="[]",
		lineno=None];
	"28:CS" -> "31:CA"	[cond="['present_state']",
		label=present_state,
		lineno=28];
	"33:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f344e946550>",
		fillcolor=lightcyan,
		label="33:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"28:CS" -> "33:CA"	[cond="['present_state']",
		label=present_state,
		lineno=28];
	"35:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f344e598610>",
		fillcolor=lightcyan,
		label="35:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"28:CS" -> "35:CA"	[cond="['present_state']",
		label=present_state,
		lineno=28];
	"29:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f344e927950>",
		fillcolor=lightcyan,
		label="29:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"28:CS" -> "29:CA"	[cond="['present_state']",
		label=present_state,
		lineno=28];
	"37:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f344e598b50>",
		fillcolor=lightcyan,
		label="37:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"28:CS" -> "37:CA"	[cond="['present_state']",
		label=present_state,
		lineno=28];
	"36:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f344e598d90>",
		fillcolor=cadetblue,
		label="36:BS
next_state = (x)? S1 : IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f344e598d90>]",
		style=filled,
		typ=BlockingSubstitution];
	"36:BS" -> "Leaf_27:AL"	[cond="[]",
		lineno=None];
	"33:CA" -> "34:BS"	[cond="[]",
		lineno=None];
	"35:CA" -> "36:BS"	[cond="[]",
		lineno=None];
	"Leaf_27:AL" -> "17:AL";
	"22:NS" -> "Leaf_17:AL"	[cond="[]",
		lineno=None];
	"Leaf_17:AL" -> "27:AL";
	"25:AS"	[ast="<pyverilog.vparser.ast.Assign object at 0x7f344e927e90>",
		def_var="['z']",
		fillcolor=deepskyblue,
		label="25:AS
z = (present_state == S101)? 1 : 0;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['present_state']"];
	"Leaf_17:AL" -> "25:AS";
	"29:CA" -> "30:BS"	[cond="[]",
		lineno=None];
	"37:CA" -> "38:BS"	[cond="[]",
		lineno=None];
}
