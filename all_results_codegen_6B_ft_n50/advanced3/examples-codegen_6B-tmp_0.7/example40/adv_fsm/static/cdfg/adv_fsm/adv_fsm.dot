strict digraph "compose( ,  )" {
	node [label="\N"];
	"23:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f46e6db2650>",
		fillcolor=firebrick,
		label="23:NS
present_state <= next_state;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f46e6db2650>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_18:AL"	[def_var="['present_state']",
		label="Leaf_18:AL"];
	"23:NS" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"29:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f46e6da7290>",
		fillcolor=springgreen,
		label="29:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"29:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f46e6da7f50>",
		fillcolor=cadetblue,
		label="29:BS
next_state = S1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f46e6da7f50>]",
		style=filled,
		typ=BlockingSubstitution];
	"29:IF" -> "29:BS"	[cond="['x']",
		label=x,
		lineno=29];
	"30:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f46e85bf450>",
		fillcolor=cadetblue,
		label="30:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f46e85bf450>]",
		style=filled,
		typ=BlockingSubstitution];
	"29:IF" -> "30:BS"	[cond="['x']",
		label="!(x)",
		lineno=29];
	"34:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f46e6c584d0>",
		fillcolor=cadetblue,
		label="34:BS
next_state = S10;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f46e6c584d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_26:AL"	[def_var="['next_state']",
		label="Leaf_26:AL"];
	"34:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"32:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f46e6c58b10>",
		fillcolor=cadetblue,
		label="32:BS
next_state = S10;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f46e6c58b10>]",
		style=filled,
		typ=BlockingSubstitution];
	"32:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"31:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f46e706a150>",
		fillcolor=cadetblue,
		label="31:BS
next_state = S101;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f46e706a150>]",
		style=filled,
		typ=BlockingSubstitution];
	"31:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"35:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f46e6c58910>",
		fillcolor=springgreen,
		label="35:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"36:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f46e6c58650>",
		fillcolor=cadetblue,
		label="36:BS
next_state = S10;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f46e6c58650>]",
		style=filled,
		typ=BlockingSubstitution];
	"35:IF" -> "36:BS"	[cond="['x']",
		label="!(x)",
		lineno=35];
	"35:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f46e6c58f10>",
		fillcolor=cadetblue,
		label="35:BS
next_state = S1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f46e6c58f10>]",
		style=filled,
		typ=BlockingSubstitution];
	"35:IF" -> "35:BS"	[cond="['x']",
		label=x,
		lineno=35];
	"29:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"41:AS"	[ast="<pyverilog.vparser.ast.Assign object at 0x7f46e6c58690>",
		def_var="['z']",
		fillcolor=deepskyblue,
		label="41:AS
z = present_state == S101;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['present_state']"];
	"Leaf_18:AL" -> "41:AS";
	"26:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f46e6dbd4d0>",
		clk_sens=False,
		fillcolor=gold,
		label="26:AL",
		sens="['present_state']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['x', 'present_state']"];
	"Leaf_18:AL" -> "26:AL";
	"35:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f46e6c58610>",
		fillcolor=lightcyan,
		label="35:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"35:CA" -> "35:IF"	[cond="[]",
		lineno=None];
	"20:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f46e6db2150>",
		fillcolor=springgreen,
		label="20:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"20:IF" -> "23:NS"	[cond="['reset']",
		label="!(reset)",
		lineno=20];
	"21:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f46e6d4ecd0>",
		fillcolor=firebrick,
		label="21:NS
present_state <= IDLE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f46e6d4ecd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"20:IF" -> "21:NS"	[cond="['reset']",
		label=reset,
		lineno=20];
	"33:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f46e6c58c10>",
		fillcolor=cadetblue,
		label="33:BS
next_state = S1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f46e6c58c10>]",
		style=filled,
		typ=BlockingSubstitution];
	"33:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"37:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f46e6c589d0>",
		fillcolor=lightcyan,
		label="37:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"37:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f46e6c58790>",
		fillcolor=cadetblue,
		label="37:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f46e6c58790>]",
		style=filled,
		typ=BlockingSubstitution];
	"37:CA" -> "37:BS"	[cond="[]",
		lineno=None];
	"31:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f46eaf05d10>",
		fillcolor=lightcyan,
		label="31:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"31:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f46e706a310>",
		fillcolor=springgreen,
		label="31:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"31:CA" -> "31:IF"	[cond="[]",
		lineno=None];
	"33:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f46e6c58dd0>",
		fillcolor=springgreen,
		label="33:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"33:IF" -> "34:BS"	[cond="['x']",
		label="!(x)",
		lineno=33];
	"33:IF" -> "33:BS"	[cond="['x']",
		label=x,
		lineno=33];
	"27:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f46e6dbdc50>",
		fillcolor=turquoise,
		label="27:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"28:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f46e6c58550>",
		fillcolor=linen,
		label="28:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"27:BL" -> "28:CS"	[cond="[]",
		lineno=None];
	"19:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f46e6da4210>",
		fillcolor=turquoise,
		label="19:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"19:BL" -> "20:IF"	[cond="[]",
		lineno=None];
	"30:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"18:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f46e6da4e10>",
		clk_sens=True,
		fillcolor=gold,
		label="18:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'next_state']"];
	"18:AL" -> "19:BL"	[cond="[]",
		lineno=None];
	"37:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"36:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"26:AL" -> "27:BL"	[cond="[]",
		lineno=None];
	"Leaf_26:AL" -> "18:AL";
	"33:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f46e6dc6150>",
		fillcolor=lightcyan,
		label="33:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"33:CA" -> "33:IF"	[cond="[]",
		lineno=None];
	"31:IF" -> "32:BS"	[cond="['x']",
		label="!(x)",
		lineno=31];
	"31:IF" -> "31:BS"	[cond="['x']",
		label=x,
		lineno=31];
	"28:CS" -> "35:CA"	[cond="['present_state']",
		label=present_state,
		lineno=28];
	"28:CS" -> "37:CA"	[cond="['present_state']",
		label=present_state,
		lineno=28];
	"28:CS" -> "31:CA"	[cond="['present_state']",
		label=present_state,
		lineno=28];
	"28:CS" -> "33:CA"	[cond="['present_state']",
		label=present_state,
		lineno=28];
	"29:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f46e6da7650>",
		fillcolor=lightcyan,
		label="29:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"28:CS" -> "29:CA"	[cond="['present_state']",
		label=present_state,
		lineno=28];
	"29:CA" -> "29:IF"	[cond="[]",
		lineno=None];
	"35:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"21:NS" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
}
