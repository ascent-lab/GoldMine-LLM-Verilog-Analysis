strict digraph "" {
	node [label="\N"];
	"17:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f18fdedf450>",
		clk_sens=False,
		fillcolor=gold,
		label="17:AL",
		sens="['present_state', 'x']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['x', 'present_state']"];
	"18:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f18fd7a4490>",
		fillcolor=turquoise,
		label="18:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"17:AL" -> "18:BL"	[cond="[]",
		lineno=None];
	"24:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f18fd7b4390>",
		fillcolor=lightcyan,
		label="24:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"24:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f18fd7b4410>",
		fillcolor=springgreen,
		label="24:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"24:CA" -> "24:IF"	[cond="[]",
		lineno=None];
	"19:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f18fd7a44d0>",
		fillcolor=linen,
		label="19:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"18:BL" -> "19:CS"	[cond="[]",
		lineno=None];
	"25:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f18fd7b4450>",
		fillcolor=cadetblue,
		label="25:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f18fd7b4450>]",
		style=filled,
		typ=BlockingSubstitution];
	"24:IF" -> "25:BS"	[cond="['x']",
		label="!(x)",
		lineno=24];
	"24:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f18fd7b4590>",
		fillcolor=cadetblue,
		label="24:BS
next_state = S101;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f18fd7b4590>]",
		style=filled,
		typ=BlockingSubstitution];
	"24:IF" -> "24:BS"	[cond="['x']",
		label=x,
		lineno=24];
	"22:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f18fd7b4210>",
		fillcolor=cadetblue,
		label="22:BS
next_state = S10;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f18fd7b4210>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_17:AL"	[def_var="['next_state']",
		label="Leaf_17:AL"];
	"22:BS" -> "Leaf_17:AL"	[cond="[]",
		lineno=None];
	"20:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f18fd7a4e50>",
		fillcolor=cadetblue,
		label="20:BS
next_state = S1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f18fd7a4e50>]",
		style=filled,
		typ=BlockingSubstitution];
	"20:BS" -> "Leaf_17:AL"	[cond="[]",
		lineno=None];
	"21:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f18fd7a4c90>",
		fillcolor=cadetblue,
		label="21:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f18fd7a4c90>]",
		style=filled,
		typ=BlockingSubstitution];
	"21:BS" -> "Leaf_17:AL"	[cond="[]",
		lineno=None];
	"28:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f18fd7b4ad0>",
		fillcolor=cadetblue,
		label="28:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f18fd7b4ad0>]",
		style=filled,
		typ=BlockingSubstitution];
	"28:BS" -> "Leaf_17:AL"	[cond="[]",
		lineno=None];
	"23:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f18fd7b40d0>",
		fillcolor=cadetblue,
		label="23:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f18fd7b40d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"23:BS" -> "Leaf_17:AL"	[cond="[]",
		lineno=None];
	"25:BS" -> "Leaf_17:AL"	[cond="[]",
		lineno=None];
	"20:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f18fd7a4c10>",
		fillcolor=springgreen,
		label="20:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"20:IF" -> "20:BS"	[cond="['x']",
		label=x,
		lineno=20];
	"20:IF" -> "21:BS"	[cond="['x']",
		label="!(x)",
		lineno=20];
	"26:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f18fd7b4910>",
		fillcolor=cadetblue,
		label="26:BS
next_state = S1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f18fd7b4910>]",
		style=filled,
		typ=BlockingSubstitution];
	"26:BS" -> "Leaf_17:AL"	[cond="[]",
		lineno=None];
	"22:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f18fd7a4fd0>",
		fillcolor=lightcyan,
		label="22:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"22:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f18fd7b4090>",
		fillcolor=springgreen,
		label="22:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"22:CA" -> "22:IF"	[cond="[]",
		lineno=None];
	"27:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f18fd7b47d0>",
		fillcolor=cadetblue,
		label="27:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f18fd7b47d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"27:BS" -> "Leaf_17:AL"	[cond="[]",
		lineno=None];
	"24:BS" -> "Leaf_17:AL"	[cond="[]",
		lineno=None];
	"20:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f18fd7a4b90>",
		fillcolor=lightcyan,
		label="20:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"20:CA" -> "20:IF"	[cond="[]",
		lineno=None];
	"26:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f18fd7b4790>",
		fillcolor=springgreen,
		label="26:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"26:IF" -> "26:BS"	[cond="['x']",
		label=x,
		lineno=26];
	"26:IF" -> "27:BS"	[cond="['x']",
		label="!(x)",
		lineno=26];
	"22:IF" -> "22:BS"	[cond="['x']",
		label=x,
		lineno=22];
	"22:IF" -> "23:BS"	[cond="['x']",
		label="!(x)",
		lineno=22];
	"26:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f18fd7b4710>",
		fillcolor=lightcyan,
		label="26:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"26:CA" -> "26:IF"	[cond="[]",
		lineno=None];
	"19:CS" -> "24:CA"	[cond="['present_state']",
		label=present_state,
		lineno=19];
	"19:CS" -> "22:CA"	[cond="['present_state']",
		label=present_state,
		lineno=19];
	"19:CS" -> "20:CA"	[cond="['present_state']",
		label=present_state,
		lineno=19];
	"19:CS" -> "26:CA"	[cond="['present_state']",
		label=present_state,
		lineno=19];
	"28:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f18fd7b4a90>",
		fillcolor=lightcyan,
		label="28:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"19:CS" -> "28:CA"	[cond="['present_state']",
		label=present_state,
		lineno=19];
	"28:CA" -> "28:BS"	[cond="[]",
		lineno=None];
}
