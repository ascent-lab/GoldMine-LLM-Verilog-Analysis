strict digraph "" {
	node [label="\N"];
	"42:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f4907fe4450>",
		fillcolor=cadetblue,
		label="42:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f4907fe4450>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_26:AL"	[def_var="['next_state']",
		label="Leaf_26:AL"];
	"42:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"37:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f4907fe48d0>",
		fillcolor=cadetblue,
		label="37:BS
next_state = S101;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f4907fe48d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"37:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"29:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f4907aea2d0>",
		fillcolor=cadetblue,
		label="29:BS
next_state = S1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f4907aea2d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"29:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"26:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f4907fe4e50>",
		clk_sens=False,
		fillcolor=gold,
		label="26:AL",
		sens="['present_state']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['x', 'present_state']"];
	"26:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f4907fe4f90>",
		fillcolor=turquoise,
		label="26:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"26:AL" -> "26:BL"	[cond="[]",
		lineno=None];
	"36:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f4907aea5d0>",
		fillcolor=springgreen,
		label="36:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"36:IF" -> "37:BS"	[cond="['x']",
		label="(x == 1)",
		lineno=36];
	"39:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f4907aea610>",
		fillcolor=cadetblue,
		label="39:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f4907aea610>]",
		style=filled,
		typ=BlockingSubstitution];
	"36:IF" -> "39:BS"	[cond="['x']",
		label="!((x == 1))",
		lineno=36];
	"28:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f4907aea150>",
		fillcolor=springgreen,
		label="28:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"28:IF" -> "29:BS"	[cond="['x']",
		label="(x == 1)",
		lineno=28];
	"31:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f4907aea190>",
		fillcolor=cadetblue,
		label="31:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f4907aea190>]",
		style=filled,
		typ=BlockingSubstitution];
	"28:IF" -> "31:BS"	[cond="['x']",
		label="!((x == 1))",
		lineno=28];
	"41:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f4907aea890>",
		fillcolor=cadetblue,
		label="41:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f4907aea890>]",
		style=filled,
		typ=BlockingSubstitution];
	"41:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"32:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f4907fe4a10>",
		fillcolor=springgreen,
		label="32:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"33:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f4907fe4c10>",
		fillcolor=cadetblue,
		label="33:BS
next_state = S10;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f4907fe4c10>]",
		style=filled,
		typ=BlockingSubstitution];
	"32:IF" -> "33:BS"	[cond="['x']",
		label="(x == 0)",
		lineno=32];
	"35:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f4907fe4a90>",
		fillcolor=cadetblue,
		label="35:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f4907fe4a90>]",
		style=filled,
		typ=BlockingSubstitution];
	"32:IF" -> "35:BS"	[cond="['x']",
		label="!((x == 0))",
		lineno=32];
	"27:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f4907fe4fd0>",
		fillcolor=linen,
		label="27:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"26:BL" -> "27:CS"	[cond="[]",
		lineno=None];
	"40:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f4907aea810>",
		fillcolor=lightcyan,
		label="40:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"27:CS" -> "40:CA"	[cond="['present_state']",
		label=present_state,
		lineno=27];
	"28:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f4907aea0d0>",
		fillcolor=lightcyan,
		label="28:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"27:CS" -> "28:CA"	[cond="['present_state']",
		label=present_state,
		lineno=27];
	"32:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f4907aea4d0>",
		fillcolor=lightcyan,
		label="32:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"27:CS" -> "32:CA"	[cond="['present_state']",
		label=present_state,
		lineno=27];
	"36:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f4907aea550>",
		fillcolor=lightcyan,
		label="36:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"27:CS" -> "36:CA"	[cond="['present_state']",
		label=present_state,
		lineno=27];
	"42:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f4907aea9d0>",
		fillcolor=lightcyan,
		label="42:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"27:CS" -> "42:CA"	[cond="['present_state']",
		label=present_state,
		lineno=27];
	"40:CA" -> "41:BS"	[cond="[]",
		lineno=None];
	"28:CA" -> "28:IF"	[cond="[]",
		lineno=None];
	"32:CA" -> "32:IF"	[cond="[]",
		lineno=None];
	"39:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"36:CA" -> "36:IF"	[cond="[]",
		lineno=None];
	"31:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"33:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"42:CA" -> "42:BS"	[cond="[]",
		lineno=None];
	"35:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
}
