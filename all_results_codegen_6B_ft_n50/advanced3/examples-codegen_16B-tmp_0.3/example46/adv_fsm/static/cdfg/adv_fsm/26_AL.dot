strict digraph "" {
	node [label="\N"];
	"42:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f3366de1450>",
		fillcolor=springgreen,
		label="42:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"45:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f3366de15d0>",
		fillcolor=cadetblue,
		label="45:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f3366de15d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"42:IF" -> "45:BS"	[cond="['x']",
		label="!(x)",
		lineno=42];
	"43:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f3366de1790>",
		fillcolor=cadetblue,
		label="43:BS
next_state = S101;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f3366de1790>]",
		style=filled,
		typ=BlockingSubstitution];
	"42:IF" -> "43:BS"	[cond="['x']",
		label=x,
		lineno=42];
	"47:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f3366de1910>",
		fillcolor=lightcyan,
		label="47:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"47:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f3366de1990>",
		fillcolor=turquoise,
		label="47:BL
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f3366de19d0>]",
		style=filled,
		typ=Block];
	"47:CA" -> "47:BL"	[cond="[]",
		lineno=None];
	"Leaf_26:AL"	[def_var="['next_state']",
		label="Leaf_26:AL"];
	"45:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"41:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f3366de1b50>",
		fillcolor=lightcyan,
		label="41:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"41:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f3366de1bd0>",
		fillcolor=turquoise,
		label="41:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"41:CA" -> "41:BL"	[cond="[]",
		lineno=None];
	"31:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f3366de1c90>",
		fillcolor=cadetblue,
		label="31:BS
next_state = S1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f3366de1c90>]",
		style=filled,
		typ=BlockingSubstitution];
	"31:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"30:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f3366de1dd0>",
		fillcolor=springgreen,
		label="30:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"30:IF" -> "31:BS"	[cond="['x']",
		label=x,
		lineno=30];
	"33:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f3366de1e10>",
		fillcolor=cadetblue,
		label="33:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f3366de1e10>]",
		style=filled,
		typ=BlockingSubstitution];
	"30:IF" -> "33:BS"	[cond="['x']",
		label="!(x)",
		lineno=30];
	"43:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"35:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f3366de1f90>",
		fillcolor=lightcyan,
		label="35:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"35:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f33668ea050>",
		fillcolor=turquoise,
		label="35:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"35:CA" -> "35:BL"	[cond="[]",
		lineno=None];
	"50:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f33668ea450>",
		fillcolor=lightcyan,
		label="50:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"50:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f33668ea490>",
		fillcolor=cadetblue,
		label="50:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f33668ea490>]",
		style=filled,
		typ=BlockingSubstitution];
	"50:CA" -> "50:BS"	[cond="[]",
		lineno=None];
	"33:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"36:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f33668ea090>",
		fillcolor=springgreen,
		label="36:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"37:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f33668ea250>",
		fillcolor=cadetblue,
		label="37:BS
next_state = S10;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f33668ea250>]",
		style=filled,
		typ=BlockingSubstitution];
	"36:IF" -> "37:BS"	[cond="['x']",
		label="(~x)",
		lineno=36];
	"39:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f33668ea0d0>",
		fillcolor=cadetblue,
		label="39:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f33668ea0d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"36:IF" -> "39:BS"	[cond="['x']",
		label="!((~x))",
		lineno=36];
	"47:BL" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"27:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f33668ea650>",
		fillcolor=turquoise,
		label="27:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"28:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f33668ea690>",
		fillcolor=linen,
		label="28:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"27:BL" -> "28:CS"	[cond="[]",
		lineno=None];
	"41:BL" -> "42:IF"	[cond="[]",
		lineno=None];
	"37:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"35:BL" -> "36:IF"	[cond="[]",
		lineno=None];
	"50:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"26:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f33668ea890>",
		clk_sens=False,
		fillcolor=gold,
		label="26:AL",
		sens="['present_state', 'x']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['x', 'present_state']"];
	"26:AL" -> "27:BL"	[cond="[]",
		lineno=None];
	"29:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f33668ea5d0>",
		fillcolor=turquoise,
		label="29:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"29:BL" -> "30:IF"	[cond="[]",
		lineno=None];
	"28:CS" -> "47:CA"	[cond="['present_state']",
		label=present_state,
		lineno=28];
	"28:CS" -> "41:CA"	[cond="['present_state']",
		label=present_state,
		lineno=28];
	"28:CS" -> "35:CA"	[cond="['present_state']",
		label=present_state,
		lineno=28];
	"28:CS" -> "50:CA"	[cond="['present_state']",
		label=present_state,
		lineno=28];
	"29:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f33668ea790>",
		fillcolor=lightcyan,
		label="29:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"28:CS" -> "29:CA"	[cond="['present_state']",
		label=present_state,
		lineno=28];
	"39:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"29:CA" -> "29:BL"	[cond="[]",
		lineno=None];
}
