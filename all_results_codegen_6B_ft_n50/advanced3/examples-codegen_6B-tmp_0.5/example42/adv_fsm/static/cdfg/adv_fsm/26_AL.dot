strict digraph "" {
	node [label="\N"];
	"37:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fb842cb1250>",
		fillcolor=cadetblue,
		label="37:BS
next_state = S1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fb842cb1250>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_26:AL"	[def_var="['next_state']",
		label="Leaf_26:AL"];
	"37:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"28:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fb842cb1690>",
		fillcolor=cadetblue,
		label="28:BS
next_state = S1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fb842cb1690>]",
		style=filled,
		typ=BlockingSubstitution];
	"28:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"29:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fb842cb17d0>",
		fillcolor=cadetblue,
		label="29:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fb842cb17d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"29:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"26:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7fb842cb1950>",
		clk_sens=False,
		fillcolor=gold,
		label="26:AL",
		sens="[]",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['x', 'present_state']"];
	"27:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7fb842cb1a10>",
		fillcolor=linen,
		label="27:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"26:AL" -> "27:CS"	[cond="[]",
		lineno=None];
	"28:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fb842cb1ad0>",
		fillcolor=lightcyan,
		label="28:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"28:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7fb842cb1b50>",
		fillcolor=springgreen,
		label="28:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"28:CA" -> "28:IF"	[cond="[]",
		lineno=None];
	"37:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7fb84255f410>",
		fillcolor=springgreen,
		label="37:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"37:IF" -> "37:BS"	[cond="['x']",
		label=x,
		lineno=37];
	"38:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fb84255f450>",
		fillcolor=cadetblue,
		label="38:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fb84255f450>]",
		style=filled,
		typ=BlockingSubstitution];
	"37:IF" -> "38:BS"	[cond="['x']",
		label="!(x)",
		lineno=37];
	"34:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fb84255f210>",
		fillcolor=cadetblue,
		label="34:BS
next_state = S101;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fb84255f210>]",
		style=filled,
		typ=BlockingSubstitution];
	"34:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"31:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fb842cb1c50>",
		fillcolor=lightcyan,
		label="31:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"31:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7fb842cb1cd0>",
		fillcolor=springgreen,
		label="31:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"31:CA" -> "31:IF"	[cond="[]",
		lineno=None];
	"38:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"27:CS" -> "28:CA"	[cond="['present_state']",
		label=present_state,
		lineno=27];
	"27:CS" -> "31:CA"	[cond="['present_state']",
		label=present_state,
		lineno=27];
	"34:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fb842cb1fd0>",
		fillcolor=lightcyan,
		label="34:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"27:CS" -> "34:CA"	[cond="['present_state']",
		label=present_state,
		lineno=27];
	"40:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fb84255f5d0>",
		fillcolor=lightcyan,
		label="40:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"27:CS" -> "40:CA"	[cond="['present_state']",
		label=present_state,
		lineno=27];
	"37:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fb84255f390>",
		fillcolor=lightcyan,
		label="37:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"27:CS" -> "37:CA"	[cond="['present_state']",
		label=present_state,
		lineno=27];
	"32:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fb842cb1d10>",
		fillcolor=cadetblue,
		label="32:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fb842cb1d10>]",
		style=filled,
		typ=BlockingSubstitution];
	"32:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"28:IF" -> "28:BS"	[cond="['x']",
		label=x,
		lineno=28];
	"28:IF" -> "29:BS"	[cond="['x']",
		label="!(x)",
		lineno=28];
	"40:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fb84255f610>",
		fillcolor=cadetblue,
		label="40:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fb84255f610>]",
		style=filled,
		typ=BlockingSubstitution];
	"40:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"31:IF" -> "32:BS"	[cond="['x']",
		label="!(x)",
		lineno=31];
	"31:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fb842cb1e50>",
		fillcolor=cadetblue,
		label="31:BS
next_state = S10;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fb842cb1e50>]",
		style=filled,
		typ=BlockingSubstitution];
	"31:IF" -> "31:BS"	[cond="['x']",
		label=x,
		lineno=31];
	"34:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7fb84255f090>",
		fillcolor=springgreen,
		label="34:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"34:CA" -> "34:IF"	[cond="[]",
		lineno=None];
	"34:IF" -> "34:BS"	[cond="['x']",
		label=x,
		lineno=34];
	"35:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fb84255f0d0>",
		fillcolor=cadetblue,
		label="35:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fb84255f0d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"34:IF" -> "35:BS"	[cond="['x']",
		label="!(x)",
		lineno=34];
	"31:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"40:CA" -> "40:BS"	[cond="[]",
		lineno=None];
	"37:CA" -> "37:IF"	[cond="[]",
		lineno=None];
	"35:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
}
