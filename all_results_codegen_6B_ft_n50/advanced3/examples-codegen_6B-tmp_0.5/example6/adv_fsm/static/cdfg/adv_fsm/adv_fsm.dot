strict digraph "compose( ,  )" {
	node [label="\N"];
	"30:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fbe6dbe0e50>",
		fillcolor=lightcyan,
		label="30:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"30:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbe6d7d8610>",
		fillcolor=springgreen,
		label="30:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"30:CA" -> "30:IF"	[cond="[]",
		lineno=None];
	"23:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbe6db71650>",
		fillcolor=firebrick,
		label="23:NS
present_state <= next_state;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbe6db71650>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_18:AL"	[def_var="['present_state']",
		label="Leaf_18:AL"];
	"23:NS" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"29:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbe6db86150>",
		fillcolor=springgreen,
		label="29:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"29:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbe6d7d8b10>",
		fillcolor=cadetblue,
		label="29:BS
next_state = IDLE;
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbe6d7d8b10>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbe6d7d8b10>]",
		style=filled,
		typ=BlockingSubstitution];
	"29:IF" -> "29:BS"	[cond="['x']",
		label="!(x)",
		lineno=29];
	"28:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbe6df81610>",
		fillcolor=springgreen,
		label="28:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"28:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbe6dbe0fd0>",
		fillcolor=cadetblue,
		label="28:BS
next_state = IDLE;
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbe6dbe0fd0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbe6dbe0fd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"28:IF" -> "28:BS"	[cond="['x']",
		label="!(x)",
		lineno=28];
	"27:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7fbe6d7d8550>",
		fillcolor=linen,
		label="27:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"27:CS" -> "30:CA"	[cond="['present_state']",
		label=present_state,
		lineno=27];
	"31:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fbe6d7d8dd0>",
		fillcolor=lightcyan,
		label="31:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"27:CS" -> "31:CA"	[cond="['present_state']",
		label=present_state,
		lineno=27];
	"32:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fbe6d7d8910>",
		fillcolor=lightcyan,
		label="32:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"27:CS" -> "32:CA"	[cond="['present_state']",
		label=present_state,
		lineno=27];
	"29:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fbe6db66550>",
		fillcolor=lightcyan,
		label="29:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"27:CS" -> "29:CA"	[cond="['present_state']",
		label=present_state,
		lineno=27];
	"28:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fbe6db66e90>",
		fillcolor=lightcyan,
		label="28:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"27:CS" -> "28:CA"	[cond="['present_state']",
		label=present_state,
		lineno=27];
	"32:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbe6d7d8790>",
		fillcolor=cadetblue,
		label="32:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbe6d7d8790>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_26:AL"	[def_var="['next_state']",
		label="Leaf_26:AL"];
	"32:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"31:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbe6d7d8650>",
		fillcolor=cadetblue,
		label="31:BS
next_state = IDLE;
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbe6d7d8650>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbe6d7d8650>]",
		style=filled,
		typ=BlockingSubstitution];
	"31:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"30:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbe6d7d84d0>",
		fillcolor=cadetblue,
		label="30:BS
next_state = IDLE;
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbe6d7d84d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7fbe6d7d84d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"30:IF" -> "30:BS"	[cond="['x']",
		label="!(x)",
		lineno=30];
	"28:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"29:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"35:AS"	[ast="<pyverilog.vparser.ast.Assign object at 0x7fbe6d7d86d0>",
		def_var="['z']",
		fillcolor=deepskyblue,
		label="35:AS
z = present_state == S101;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['present_state']"];
	"Leaf_18:AL" -> "35:AS";
	"26:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7fbe6db7dd10>",
		clk_sens=False,
		fillcolor=gold,
		label="26:AL",
		sens="['present_state', 'x']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['x', 'present_state']"];
	"Leaf_18:AL" -> "26:AL";
	"20:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbe6db71150>",
		fillcolor=springgreen,
		label="20:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"20:IF" -> "23:NS"	[cond="['reset']",
		label="!(reset)",
		lineno=20];
	"21:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbe6db0ecd0>",
		fillcolor=firebrick,
		label="21:NS
present_state <= IDLE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbe6db0ecd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"20:IF" -> "21:NS"	[cond="['reset']",
		label=reset,
		lineno=20];
	"31:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbe6d7d89d0>",
		fillcolor=springgreen,
		label="31:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"31:CA" -> "31:IF"	[cond="[]",
		lineno=None];
	"32:CA" -> "32:BS"	[cond="[]",
		lineno=None];
	"19:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fbe6db63210>",
		fillcolor=turquoise,
		label="19:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"19:BL" -> "20:IF"	[cond="[]",
		lineno=None];
	"30:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"18:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7fbe6db63e10>",
		clk_sens=True,
		fillcolor=gold,
		label="18:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'next_state']"];
	"18:AL" -> "19:BL"	[cond="[]",
		lineno=None];
	"26:AL" -> "27:CS"	[cond="[]",
		lineno=None];
	"Leaf_26:AL" -> "18:AL";
	"31:IF" -> "31:BS"	[cond="['x']",
		label="!(x)",
		lineno=31];
	"29:CA" -> "29:IF"	[cond="[]",
		lineno=None];
	"28:CA" -> "28:IF"	[cond="[]",
		lineno=None];
	"21:NS" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
}
