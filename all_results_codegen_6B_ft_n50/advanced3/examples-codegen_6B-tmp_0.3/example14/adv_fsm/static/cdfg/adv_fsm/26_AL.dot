strict digraph "" {
	node [label="\N"];
	"32:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7efd5f1fb410>",
		fillcolor=springgreen,
		label="32:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"32:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7efd5f1fb650>",
		fillcolor=cadetblue,
		label="32:BS
next_state = IDLE;
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7efd5f1fb650>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7efd5f1fb650>]",
		style=filled,
		typ=BlockingSubstitution];
	"32:IF" -> "32:BS"	[cond="['x']",
		label="!(x)",
		lineno=32];
	"30:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7efd5f1fb990>",
		fillcolor=lightcyan,
		label="30:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"30:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7efd5f1fba10>",
		fillcolor=springgreen,
		label="30:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"30:CA" -> "30:IF"	[cond="[]",
		lineno=None];
	"Leaf_26:AL"	[def_var="['next_state']",
		label="Leaf_26:AL"];
	"29:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7efd5f1fbd10>",
		fillcolor=springgreen,
		label="29:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"29:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7efd5f1fbd50>",
		fillcolor=cadetblue,
		label="29:BS
next_state = IDLE;
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7efd5f1fbd50>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7efd5f1fbd50>]",
		style=filled,
		typ=BlockingSubstitution];
	"29:IF" -> "29:BS"	[cond="['x']",
		label="!(x)",
		lineno=29];
	"33:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7efd5ece4050>",
		fillcolor=lightcyan,
		label="33:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"33:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7efd5ece4090>",
		fillcolor=cadetblue,
		label="33:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7efd5ece4090>]",
		style=filled,
		typ=BlockingSubstitution];
	"33:CA" -> "33:BS"	[cond="[]",
		lineno=None];
	"31:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7efd5ece41d0>",
		fillcolor=lightcyan,
		label="31:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"31:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7efd5ece4250>",
		fillcolor=springgreen,
		label="31:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"31:CA" -> "31:IF"	[cond="[]",
		lineno=None];
	"27:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7efd5ece4790>",
		fillcolor=turquoise,
		label="27:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"28:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7efd5ece45d0>",
		fillcolor=linen,
		label="28:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"27:BL" -> "28:CS"	[cond="[]",
		lineno=None];
	"31:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7efd5ece4290>",
		fillcolor=cadetblue,
		label="31:BS
next_state = IDLE;
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7efd5ece4290>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7efd5ece4290>]",
		style=filled,
		typ=BlockingSubstitution];
	"31:IF" -> "31:BS"	[cond="['x']",
		label="!(x)",
		lineno=31];
	"28:CS" -> "30:CA"	[cond="['present_state']",
		label=present_state,
		lineno=28];
	"28:CS" -> "33:CA"	[cond="['present_state']",
		label=present_state,
		lineno=28];
	"28:CS" -> "31:CA"	[cond="['present_state']",
		label=present_state,
		lineno=28];
	"32:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7efd5ece4550>",
		fillcolor=lightcyan,
		label="32:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"28:CS" -> "32:CA"	[cond="['present_state']",
		label=present_state,
		lineno=28];
	"29:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7efd5ece46d0>",
		fillcolor=lightcyan,
		label="29:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"28:CS" -> "29:CA"	[cond="['present_state']",
		label=present_state,
		lineno=28];
	"32:CA" -> "32:IF"	[cond="[]",
		lineno=None];
	"29:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"30:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7efd5f1fba50>",
		fillcolor=cadetblue,
		label="30:BS
next_state = IDLE;
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7efd5f1fba50>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7efd5f1fba50>]",
		style=filled,
		typ=BlockingSubstitution];
	"30:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"29:CA" -> "29:IF"	[cond="[]",
		lineno=None];
	"26:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7efd5ece4810>",
		clk_sens=False,
		fillcolor=gold,
		label="26:AL",
		sens="['present_state', 'x']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['x', 'present_state']"];
	"26:AL" -> "27:BL"	[cond="[]",
		lineno=None];
	"31:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"32:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"33:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"30:IF" -> "30:BS"	[cond="['x']",
		label="!(x)",
		lineno=30];
}
