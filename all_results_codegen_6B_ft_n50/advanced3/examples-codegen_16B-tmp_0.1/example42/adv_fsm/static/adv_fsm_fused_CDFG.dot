strict digraph "compose( ,  )" {
	node [label="\N"];
	"23:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd23b331650>",
		fillcolor=firebrick,
		label="23:NS
present_state <= next_state;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd23b331650>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_18:AL"	[def_var="['present_state']",
		label="Leaf_18:AL"];
	"23:NS" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"59:AS"	[ast="<pyverilog.vparser.ast.Assign object at 0x7fd23af98b90>",
		def_var="['z']",
		fillcolor=deepskyblue,
		label="59:AS
z = present_state == S101;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['present_state']"];
	"Leaf_18:AL" -> "59:AS";
	"26:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7fd23b326650>",
		clk_sens=False,
		fillcolor=gold,
		label="26:AL",
		sens="['present_state', 'x']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['x', 'present_state']"];
	"Leaf_18:AL" -> "26:AL";
	"34:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd23b3a07d0>",
		fillcolor=cadetblue,
		label="34:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd23b3a07d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_26:AL"	[def_var="['next_state']",
		label="Leaf_26:AL"];
	"34:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"32:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd23b741610>",
		fillcolor=cadetblue,
		label="32:BS
next_state = S1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd23b741610>]",
		style=filled,
		typ=BlockingSubstitution];
	"32:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"48:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd23af98950>",
		fillcolor=cadetblue,
		label="48:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd23af98950>]",
		style=filled,
		typ=BlockingSubstitution];
	"48:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"38:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd23b346550>",
		fillcolor=springgreen,
		label="38:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"41:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd23af98d10>",
		fillcolor=cadetblue,
		label="41:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd23af98d10>]",
		style=filled,
		typ=BlockingSubstitution];
	"38:IF" -> "41:BS"	[cond="['x']",
		label="!((~x))",
		lineno=38];
	"39:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd23cba8ad0>",
		fillcolor=cadetblue,
		label="39:BS
next_state = S10;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd23cba8ad0>]",
		style=filled,
		typ=BlockingSubstitution];
	"38:IF" -> "39:BS"	[cond="['x']",
		label="(~x)",
		lineno=38];
	"19:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fd23b323210>",
		fillcolor=turquoise,
		label="19:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"20:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd23b331150>",
		fillcolor=springgreen,
		label="20:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"19:BL" -> "20:IF"	[cond="[]",
		lineno=None];
	"43:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fd23af98cd0>",
		fillcolor=lightcyan,
		label="43:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"44:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fd23af98310>",
		fillcolor=turquoise,
		label="44:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"43:CA" -> "44:BL"	[cond="[]",
		lineno=None];
	"20:IF" -> "23:NS"	[cond="['reset']",
		label="!(reset)",
		lineno=20];
	"21:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd23b2cecd0>",
		fillcolor=firebrick,
		label="21:NS
present_state <= IDLE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd23b2cecd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"20:IF" -> "21:NS"	[cond="['reset']",
		label=reset,
		lineno=20];
	"50:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fd23af98fd0>",
		fillcolor=lightcyan,
		label="50:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"51:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fd23af98a90>",
		fillcolor=turquoise,
		label="51:BL
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd23af98ad0>]",
		style=filled,
		typ=Block];
	"50:CA" -> "51:BL"	[cond="[]",
		lineno=None];
	"55:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd23af98710>",
		fillcolor=cadetblue,
		label="55:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd23af98710>]",
		style=filled,
		typ=BlockingSubstitution];
	"55:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"45:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd23af984d0>",
		fillcolor=springgreen,
		label="45:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"44:BL" -> "45:IF"	[cond="[]",
		lineno=None];
	"41:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"30:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fd23b326150>",
		fillcolor=turquoise,
		label="30:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"31:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd23b326550>",
		fillcolor=springgreen,
		label="31:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"30:BL" -> "31:IF"	[cond="[]",
		lineno=None];
	"27:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fd23b326e90>",
		fillcolor=turquoise,
		label="27:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"28:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7fd23af98550>",
		fillcolor=linen,
		label="28:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"27:BL" -> "28:CS"	[cond="[]",
		lineno=None];
	"18:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7fd23b323e10>",
		clk_sens=True,
		fillcolor=gold,
		label="18:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'next_state']"];
	"18:AL" -> "19:BL"	[cond="[]",
		lineno=None];
	"51:BL" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"45:IF" -> "48:BS"	[cond="['x']",
		label="!(x)",
		lineno=45];
	"46:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd23af98990>",
		fillcolor=cadetblue,
		label="46:BS
next_state = S101;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd23af98990>]",
		style=filled,
		typ=BlockingSubstitution];
	"45:IF" -> "46:BS"	[cond="['x']",
		label=x,
		lineno=45];
	"26:AL" -> "27:BL"	[cond="[]",
		lineno=None];
	"Leaf_26:AL" -> "18:AL";
	"36:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fd23b3a0950>",
		fillcolor=lightcyan,
		label="36:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"37:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fd23b3a0f90>",
		fillcolor=turquoise,
		label="37:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"36:CA" -> "37:BL"	[cond="[]",
		lineno=None];
	"54:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fd23af98650>",
		fillcolor=lightcyan,
		label="54:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"54:CA" -> "55:BS"	[cond="[]",
		lineno=None];
	"31:IF" -> "34:BS"	[cond="['x']",
		label="!(x)",
		lineno=31];
	"31:IF" -> "32:BS"	[cond="['x']",
		label=x,
		lineno=31];
	"28:CS" -> "43:CA"	[cond="['present_state']",
		label=present_state,
		lineno=28];
	"28:CS" -> "50:CA"	[cond="['present_state']",
		label=present_state,
		lineno=28];
	"28:CS" -> "36:CA"	[cond="['present_state']",
		label=present_state,
		lineno=28];
	"28:CS" -> "54:CA"	[cond="['present_state']",
		label=present_state,
		lineno=28];
	"29:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fd23b326ad0>",
		fillcolor=lightcyan,
		label="29:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"28:CS" -> "29:CA"	[cond="['present_state']",
		label=present_state,
		lineno=28];
	"39:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"29:CA" -> "30:BL"	[cond="[]",
		lineno=None];
	"37:BL" -> "38:IF"	[cond="[]",
		lineno=None];
	"46:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"21:NS" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
}
