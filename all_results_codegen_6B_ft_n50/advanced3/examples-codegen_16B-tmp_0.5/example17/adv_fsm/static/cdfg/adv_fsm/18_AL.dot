strict digraph "" {
	node [label="\N"];
	"28:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f9426cfc550>",
		fillcolor=cadetblue,
		label="28:BS
next_state = S10;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f9426cfc550>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_18:AL"	[def_var="['next_state']",
		label="Leaf_18:AL"];
	"28:BS" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"26:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f942848a450>",
		fillcolor=lightcyan,
		label="26:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"26:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f942848a4d0>",
		fillcolor=turquoise,
		label="26:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"26:CA" -> "26:BL"	[cond="[]",
		lineno=None];
	"27:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f942848a510>",
		fillcolor=springgreen,
		label="27:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"27:IF" -> "28:BS"	[cond="['x']",
		label="(!x)",
		lineno=27];
	"30:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f942848a590>",
		fillcolor=cadetblue,
		label="30:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f942848a590>]",
		style=filled,
		typ=BlockingSubstitution];
	"27:IF" -> "30:BS"	[cond="['x']",
		label="!((!x))",
		lineno=27];
	"34:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f942848ab10>",
		fillcolor=cadetblue,
		label="34:BS
next_state = S101;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f942848ab10>]",
		style=filled,
		typ=BlockingSubstitution];
	"34:BS" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"20:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f942848a790>",
		fillcolor=turquoise,
		label="20:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"21:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f942848a7d0>",
		fillcolor=springgreen,
		label="21:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"20:BL" -> "21:IF"	[cond="[]",
		lineno=None];
	"33:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f942848ac50>",
		fillcolor=springgreen,
		label="33:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"33:IF" -> "34:BS"	[cond="['x']",
		label=x,
		lineno=33];
	"36:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f942848ac90>",
		fillcolor=cadetblue,
		label="36:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f942848ac90>]",
		style=filled,
		typ=BlockingSubstitution];
	"33:IF" -> "36:BS"	[cond="['x']",
		label="!(x)",
		lineno=33];
	"26:BL" -> "27:IF"	[cond="[]",
		lineno=None];
	"24:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f942848a810>",
		fillcolor=cadetblue,
		label="24:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f942848a810>]",
		style=filled,
		typ=BlockingSubstitution];
	"21:IF" -> "24:BS"	[cond="['x']",
		label="!(x)",
		lineno=21];
	"22:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f942848a950>",
		fillcolor=cadetblue,
		label="22:BS
next_state = S1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f942848a950>]",
		style=filled,
		typ=BlockingSubstitution];
	"21:IF" -> "22:BS"	[cond="['x']",
		label=x,
		lineno=21];
	"32:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f942848afd0>",
		fillcolor=turquoise,
		label="32:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"32:BL" -> "33:IF"	[cond="[]",
		lineno=None];
	"38:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f942848af50>",
		fillcolor=turquoise,
		label="38:BL
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f942848ae10>]",
		style=filled,
		typ=Block];
	"38:BL" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"36:BS" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"24:BS" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"20:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f942848c150>",
		fillcolor=lightcyan,
		label="20:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"20:CA" -> "20:BL"	[cond="[]",
		lineno=None];
	"22:BS" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"18:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f942848c250>",
		clk_sens=False,
		fillcolor=gold,
		label="18:AL",
		sens="['present_state', 'x']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['x', 'present_state']"];
	"19:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f942848c410>",
		fillcolor=linen,
		label="19:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"18:AL" -> "19:CS"	[cond="[]",
		lineno=None];
	"19:CS" -> "26:CA"	[cond="['present_state']",
		label=present_state,
		lineno=19];
	"19:CS" -> "20:CA"	[cond="['present_state']",
		label=present_state,
		lineno=19];
	"38:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f942848c4d0>",
		fillcolor=lightcyan,
		label="38:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"19:CS" -> "38:CA"	[cond="['present_state']",
		label=present_state,
		lineno=19];
	"32:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f942848c090>",
		fillcolor=lightcyan,
		label="32:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"19:CS" -> "32:CA"	[cond="['present_state']",
		label=present_state,
		lineno=19];
	"38:CA" -> "38:BL"	[cond="[]",
		lineno=None];
	"32:CA" -> "32:BL"	[cond="[]",
		lineno=None];
	"30:BS" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
}
