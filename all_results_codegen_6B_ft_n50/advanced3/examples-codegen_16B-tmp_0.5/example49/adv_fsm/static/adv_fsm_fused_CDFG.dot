strict digraph "compose( ,  )" {
	node [label="\N"];
	"30:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7efcfbdfdc50>",
		fillcolor=lightcyan,
		label="30:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"30:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7efcfbde6090>",
		fillcolor=springgreen,
		label="30:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"30:CA" -> "30:IF"	[cond="[]",
		lineno=None];
	"47:AS"	[ast="<pyverilog.vparser.ast.Assign object at 0x7efcfbc98750>",
		def_var="['z']",
		fillcolor=deepskyblue,
		label="47:AS
z = (present_state == S101)? 1 : 0;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['present_state']"];
	"20:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7efcfbde3ed0>",
		fillcolor=turquoise,
		label="20:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"21:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7efcfbdf1450>",
		fillcolor=springgreen,
		label="21:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"20:BL" -> "21:IF"	[cond="[]",
		lineno=None];
	"24:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7efcfbdf1050>",
		fillcolor=firebrick,
		label="24:NS
present_state <= next_state;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7efcfbdf1050>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_19:AL"	[def_var="['present_state']",
		label="Leaf_19:AL"];
	"24:NS" -> "Leaf_19:AL"	[cond="[]",
		lineno=None];
	"27:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7efcfbdfd4d0>",
		clk_sens=False,
		fillcolor=gold,
		label="27:AL",
		sens="[]",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['x', 'present_state']"];
	"28:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7efcfbde6650>",
		fillcolor=turquoise,
		label="28:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"27:AL" -> "28:BL"	[cond="[]",
		lineno=None];
	"31:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7efcfbde6f50>",
		fillcolor=cadetblue,
		label="31:BS
next_state = S1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7efcfbde6f50>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_27:AL"	[def_var="['next_state']",
		label="Leaf_27:AL"];
	"31:BS" -> "Leaf_27:AL"	[cond="[]",
		lineno=None];
	"30:IF" -> "31:BS"	[cond="['x']",
		label=x,
		lineno=30];
	"33:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7efcfd5ff450>",
		fillcolor=cadetblue,
		label="33:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7efcfd5ff450>]",
		style=filled,
		typ=BlockingSubstitution];
	"30:IF" -> "33:BS"	[cond="['x']",
		label="!(x)",
		lineno=30];
	"42:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7efcfbc98b50>",
		fillcolor=cadetblue,
		label="42:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7efcfbc98b50>]",
		style=filled,
		typ=BlockingSubstitution];
	"42:BS" -> "Leaf_27:AL"	[cond="[]",
		lineno=None];
	"43:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7efcfbc98390>",
		fillcolor=cadetblue,
		label="43:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7efcfbc98390>]",
		style=filled,
		typ=BlockingSubstitution];
	"43:BS" -> "Leaf_27:AL"	[cond="[]",
		lineno=None];
	"21:IF" -> "24:NS"	[cond="['reset']",
		label="!(reset)",
		lineno=21];
	"22:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7efcfbd8e4d0>",
		fillcolor=firebrick,
		label="22:NS
present_state <= IDLE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7efcfbd8e4d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"21:IF" -> "22:NS"	[cond="['reset']",
		label=reset,
		lineno=21];
	"22:NS" -> "Leaf_19:AL"	[cond="[]",
		lineno=None];
	"Leaf_19:AL" -> "47:AS";
	"Leaf_19:AL" -> "27:AL";
	"33:BS" -> "Leaf_27:AL"	[cond="[]",
		lineno=None];
	"29:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7efcfbc98950>",
		fillcolor=linen,
		label="29:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"28:BL" -> "29:CS"	[cond="[]",
		lineno=None];
	"38:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7efcfbc98310>",
		fillcolor=springgreen,
		label="38:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"41:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7efcfbc984d0>",
		fillcolor=cadetblue,
		label="41:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7efcfbc984d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"38:IF" -> "41:BS"	[cond="['x']",
		label="!(x)",
		lineno=38];
	"39:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7efcfbc98c10>",
		fillcolor=cadetblue,
		label="39:BS
next_state = S101;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7efcfbc98c10>]",
		style=filled,
		typ=BlockingSubstitution];
	"38:IF" -> "39:BS"	[cond="['x']",
		label=x,
		lineno=38];
	"41:BS" -> "Leaf_27:AL"	[cond="[]",
		lineno=None];
	"34:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7efcfbde6550>",
		fillcolor=lightcyan,
		label="34:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"34:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7efcfc0aaf90>",
		fillcolor=springgreen,
		label="34:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"34:CA" -> "34:IF"	[cond="[]",
		lineno=None];
	"38:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7efcfc046150>",
		fillcolor=lightcyan,
		label="38:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"38:CA" -> "38:IF"	[cond="[]",
		lineno=None];
	"37:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7efcfbc98b10>",
		fillcolor=cadetblue,
		label="37:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7efcfbc98b10>]",
		style=filled,
		typ=BlockingSubstitution];
	"37:BS" -> "Leaf_27:AL"	[cond="[]",
		lineno=None];
	"29:CS" -> "30:CA"	[cond="['present_state']",
		label=present_state,
		lineno=29];
	"29:CS" -> "34:CA"	[cond="['present_state']",
		label=present_state,
		lineno=29];
	"29:CS" -> "38:CA"	[cond="['present_state']",
		label=present_state,
		lineno=29];
	"43:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7efcfbc98fd0>",
		fillcolor=lightcyan,
		label="43:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"29:CS" -> "43:CA"	[cond="['present_state']",
		label=present_state,
		lineno=29];
	"42:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7efcfbc98a50>",
		fillcolor=lightcyan,
		label="42:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"29:CS" -> "42:CA"	[cond="['present_state']",
		label=present_state,
		lineno=29];
	"19:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7efcfbde3890>",
		clk_sens=True,
		fillcolor=gold,
		label="19:AL",
		sens="['clk', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'next_state']"];
	"19:AL" -> "20:BL"	[cond="[]",
		lineno=None];
	"Leaf_27:AL" -> "19:AL";
	"39:BS" -> "Leaf_27:AL"	[cond="[]",
		lineno=None];
	"43:CA" -> "43:BS"	[cond="[]",
		lineno=None];
	"34:IF" -> "37:BS"	[cond="['x']",
		label="!((!x))",
		lineno=34];
	"35:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7efcfc0aa310>",
		fillcolor=cadetblue,
		label="35:BS
next_state = S10;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7efcfc0aa310>]",
		style=filled,
		typ=BlockingSubstitution];
	"34:IF" -> "35:BS"	[cond="['x']",
		label="(!x)",
		lineno=34];
	"42:CA" -> "42:BS"	[cond="[]",
		lineno=None];
	"35:BS" -> "Leaf_27:AL"	[cond="[]",
		lineno=None];
}
