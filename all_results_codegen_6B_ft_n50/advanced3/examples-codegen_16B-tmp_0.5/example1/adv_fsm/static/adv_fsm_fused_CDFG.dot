strict digraph "compose( ,  )" {
	node [label="\N"];
	"17:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7fe2daea3ed0>",
		clk_sens=False,
		fillcolor=gold,
		label="17:AL",
		sens="['present_state', 'x']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['x', 'present_state']"];
	"18:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7fe2daf2a310>",
		fillcolor=linen,
		label="18:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"17:AL" -> "18:CS"	[cond="[]",
		lineno=None];
	"31:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe2dab18450>",
		fillcolor=firebrick,
		label="31:NS
present_state <= next_state;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe2dab18450>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_29:AL"	[def_var="['present_state']",
		label="Leaf_29:AL"];
	"31:NS" -> "Leaf_29:AL"	[cond="[]",
		lineno=None];
	"22:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe2db2c1610>",
		fillcolor=cadetblue,
		label="22:BS
next_state = S10;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe2db2c1610>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_17:AL"	[def_var="['next_state']",
		label="Leaf_17:AL"];
	"22:BS" -> "Leaf_17:AL"	[cond="[]",
		lineno=None];
	"20:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe2daebdd10>",
		fillcolor=cadetblue,
		label="20:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe2daebdd10>]",
		style=filled,
		typ=BlockingSubstitution];
	"20:BS" -> "Leaf_17:AL"	[cond="[]",
		lineno=None];
	"21:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe2daea6d10>",
		fillcolor=cadetblue,
		label="21:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe2daea6d10>]",
		style=filled,
		typ=BlockingSubstitution];
	"21:BS" -> "Leaf_17:AL"	[cond="[]",
		lineno=None];
	"27:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fe2dab18310>",
		fillcolor=lightcyan,
		label="27:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"27:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe2dab18990>",
		fillcolor=cadetblue,
		label="27:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe2dab18990>]",
		style=filled,
		typ=BlockingSubstitution];
	"27:CA" -> "27:BS"	[cond="[]",
		lineno=None];
	"30:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe2dab18ad0>",
		fillcolor=springgreen,
		label="30:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"30:IF" -> "31:NS"	[cond="['reset']",
		label="!(reset)",
		lineno=30];
	"30:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe2dab189d0>",
		fillcolor=firebrick,
		label="30:NS
present_state <= IDLE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe2dab189d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"30:IF" -> "30:NS"	[cond="['reset']",
		label=reset,
		lineno=30];
	"Leaf_29:AL" -> "17:AL";
	"32:AS"	[ast="<pyverilog.vparser.ast.Assign object at 0x7fe2dab186d0>",
		def_var="['z']",
		fillcolor=deepskyblue,
		label="32:AS
z = present_state == S101;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['present_state']"];
	"Leaf_29:AL" -> "32:AS";
	"23:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe2daf2a250>",
		fillcolor=cadetblue,
		label="23:BS
next_state = S101;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe2daf2a250>]",
		style=filled,
		typ=BlockingSubstitution];
	"23:BS" -> "Leaf_17:AL"	[cond="[]",
		lineno=None];
	"25:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe2dab18d10>",
		fillcolor=cadetblue,
		label="25:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe2dab18d10>]",
		style=filled,
		typ=BlockingSubstitution];
	"25:BS" -> "Leaf_17:AL"	[cond="[]",
		lineno=None];
	"21:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe2daea6350>",
		fillcolor=springgreen,
		label="21:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"21:IF" -> "22:BS"	[cond="['x']",
		label="!((~x))",
		lineno=21];
	"21:IF" -> "21:BS"	[cond="['x']",
		label="(~x)",
		lineno=21];
	"26:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe2dab18810>",
		fillcolor=cadetblue,
		label="26:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe2dab18810>]",
		style=filled,
		typ=BlockingSubstitution];
	"26:BS" -> "Leaf_17:AL"	[cond="[]",
		lineno=None];
	"19:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe2daeb1250>",
		fillcolor=cadetblue,
		label="19:BS
next_state = S1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe2daeb1250>]",
		style=filled,
		typ=BlockingSubstitution];
	"19:BS" -> "Leaf_17:AL"	[cond="[]",
		lineno=None];
	"18:CS" -> "27:CA"	[cond="['present_state']",
		label=present_state,
		lineno=18];
	"21:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fe2daebd6d0>",
		fillcolor=lightcyan,
		label="21:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"18:CS" -> "21:CA"	[cond="['present_state']",
		label=present_state,
		lineno=18];
	"19:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fe2dae4ee90>",
		fillcolor=lightcyan,
		label="19:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"18:CS" -> "19:CA"	[cond="['present_state']",
		label=present_state,
		lineno=18];
	"25:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fe2daf2ad10>",
		fillcolor=lightcyan,
		label="25:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"18:CS" -> "25:CA"	[cond="['present_state']",
		label=present_state,
		lineno=18];
	"23:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fe2daea6750>",
		fillcolor=lightcyan,
		label="23:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"18:CS" -> "23:CA"	[cond="['present_state']",
		label=present_state,
		lineno=18];
	"19:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe2daeb1050>",
		fillcolor=springgreen,
		label="19:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"19:IF" -> "20:BS"	[cond="['x']",
		label="!(x)",
		lineno=19];
	"19:IF" -> "19:BS"	[cond="['x']",
		label=x,
		lineno=19];
	"27:BS" -> "Leaf_17:AL"	[cond="[]",
		lineno=None];
	"21:CA" -> "21:IF"	[cond="[]",
		lineno=None];
	"25:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe2dab18350>",
		fillcolor=springgreen,
		label="25:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"25:IF" -> "25:BS"	[cond="['x']",
		label="(~x)",
		lineno=25];
	"25:IF" -> "26:BS"	[cond="['x']",
		label="!((~x))",
		lineno=25];
	"24:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe2daec6150>",
		fillcolor=cadetblue,
		label="24:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe2daec6150>]",
		style=filled,
		typ=BlockingSubstitution];
	"24:BS" -> "Leaf_17:AL"	[cond="[]",
		lineno=None];
	"23:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe2daf2a110>",
		fillcolor=springgreen,
		label="23:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"23:IF" -> "23:BS"	[cond="['x']",
		label=x,
		lineno=23];
	"23:IF" -> "24:BS"	[cond="['x']",
		label="!(x)",
		lineno=23];
	"29:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7fe2dab18d50>",
		clk_sens=True,
		fillcolor=gold,
		label="29:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'next_state']"];
	"29:AL" -> "30:IF"	[cond="[]",
		lineno=None];
	"19:CA" -> "19:IF"	[cond="[]",
		lineno=None];
	"25:CA" -> "25:IF"	[cond="[]",
		lineno=None];
	"23:CA" -> "23:IF"	[cond="[]",
		lineno=None];
	"30:NS" -> "Leaf_29:AL"	[cond="[]",
		lineno=None];
	"Leaf_17:AL" -> "29:AL";
}
