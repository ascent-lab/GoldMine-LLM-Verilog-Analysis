strict digraph "compose( ,  )" {
	node [label="\N"];
	"33:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fa58d0c1610>",
		fillcolor=turquoise,
		label="33:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"34:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7fa58cd20650>",
		fillcolor=springgreen,
		label="34:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"33:BL" -> "34:IF"	[cond="[]",
		lineno=None];
	"21:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fa58cc4ecd0>",
		fillcolor=turquoise,
		label="21:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"22:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7fa58ccb1650>",
		fillcolor=springgreen,
		label="22:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"21:BL" -> "22:IF"	[cond="[]",
		lineno=None];
	"Leaf_18:AL"	[def_var="['next_state']",
		label="Leaf_18:AL"];
	"50:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7fa58c918950>",
		clk_sens=True,
		fillcolor=gold,
		label="50:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'next_state']"];
	"Leaf_18:AL" -> "50:AL";
	"28:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7fa58cca6d10>",
		fillcolor=springgreen,
		label="28:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"31:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fa590bc5d10>",
		fillcolor=cadetblue,
		label="31:BS
next_state = S10;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fa590bc5d10>]",
		style=filled,
		typ=BlockingSubstitution];
	"28:IF" -> "31:BS"	[cond="['x']",
		label="!((!x))",
		lineno=28];
	"29:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fa58cca6350>",
		fillcolor=cadetblue,
		label="29:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fa58cca6350>]",
		style=filled,
		typ=BlockingSubstitution];
	"28:IF" -> "29:BS"	[cond="['x']",
		label="(!x)",
		lineno=28];
	"55:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fa58c918710>",
		fillcolor=firebrick,
		label="55:NS
present_state <= next_state;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fa58c918710>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_50:AL"	[def_var="['present_state']",
		label="Leaf_50:AL"];
	"55:NS" -> "Leaf_50:AL"	[cond="[]",
		lineno=None];
	"58:AS"	[ast="<pyverilog.vparser.ast.Assign object at 0x7fa58c918f90>",
		def_var="['z']",
		fillcolor=deepskyblue,
		label="58:AS
z = (present_state == S101)? 1 : 0;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['present_state']"];
	"31:BS" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"27:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fa58ccbd6d0>",
		fillcolor=lightcyan,
		label="27:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"27:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fa58cca6e90>",
		fillcolor=turquoise,
		label="27:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"27:CA" -> "27:BL"	[cond="[]",
		lineno=None];
	"23:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fa58ccb1250>",
		fillcolor=cadetblue,
		label="23:BS
next_state = S1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fa58ccb1250>]",
		style=filled,
		typ=BlockingSubstitution];
	"23:BS" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"29:BS" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"51:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fa58c918fd0>",
		fillcolor=turquoise,
		label="51:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"50:AL" -> "51:BL"	[cond="[]",
		lineno=None];
	"25:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fa58ccbdd10>",
		fillcolor=cadetblue,
		label="25:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fa58ccbdd10>]",
		style=filled,
		typ=BlockingSubstitution];
	"25:BS" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"39:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fa58c918a10>",
		fillcolor=lightcyan,
		label="39:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"39:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fa58c918d10>",
		fillcolor=turquoise,
		label="39:BL
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fa58c918350>]",
		style=filled,
		typ=Block];
	"39:CA" -> "39:BL"	[cond="[]",
		lineno=None];
	"43:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fa58c9184d0>",
		fillcolor=turquoise,
		label="43:BL
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fa58c918990>]",
		style=filled,
		typ=Block];
	"43:BL" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"20:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7fa58c918dd0>",
		fillcolor=linen,
		label="20:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"20:CS" -> "27:CA"	[cond="['present_state']",
		label=present_state,
		lineno=20];
	"20:CS" -> "39:CA"	[cond="['present_state']",
		label=present_state,
		lineno=20];
	"21:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fa58cca3e10>",
		fillcolor=lightcyan,
		label="21:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"20:CS" -> "21:CA"	[cond="['present_state']",
		label=present_state,
		lineno=20];
	"33:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fa58cca6850>",
		fillcolor=lightcyan,
		label="33:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"20:CS" -> "33:CA"	[cond="['present_state']",
		label=present_state,
		lineno=20];
	"43:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fa58c918310>",
		fillcolor=lightcyan,
		label="43:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"20:CS" -> "43:CA"	[cond="['present_state']",
		label=present_state,
		lineno=20];
	"53:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fa58c918650>",
		fillcolor=firebrick,
		label="53:NS
present_state <= IDLE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fa58c918650>]",
		style=filled,
		typ=NonblockingSubstitution];
	"53:NS" -> "Leaf_50:AL"	[cond="[]",
		lineno=None];
	"21:CA" -> "21:BL"	[cond="[]",
		lineno=None];
	"27:BL" -> "28:IF"	[cond="[]",
		lineno=None];
	"19:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fa58cca3210>",
		fillcolor=turquoise,
		label="19:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"19:BL" -> "20:CS"	[cond="[]",
		lineno=None];
	"52:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7fa58c918450>",
		fillcolor=springgreen,
		label="52:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"52:IF" -> "55:NS"	[cond="['reset']",
		label="!(reset)",
		lineno=52];
	"52:IF" -> "53:NS"	[cond="['reset']",
		label=reset,
		lineno=52];
	"18:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7fa58cca3610>",
		clk_sens=False,
		fillcolor=gold,
		label="18:AL",
		sens="['present_state']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['x', 'present_state']"];
	"18:AL" -> "19:BL"	[cond="[]",
		lineno=None];
	"37:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fa58e5a8ad0>",
		fillcolor=cadetblue,
		label="37:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fa58e5a8ad0>]",
		style=filled,
		typ=BlockingSubstitution];
	"37:BS" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"22:IF" -> "23:BS"	[cond="['x']",
		label=x,
		lineno=22];
	"22:IF" -> "25:BS"	[cond="['x']",
		label="!(x)",
		lineno=22];
	"33:CA" -> "33:BL"	[cond="[]",
		lineno=None];
	"39:BL" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"Leaf_50:AL" -> "58:AS";
	"Leaf_50:AL" -> "18:AL";
	"43:CA" -> "43:BL"	[cond="[]",
		lineno=None];
	"34:IF" -> "37:BS"	[cond="['x']",
		label="!(x)",
		lineno=34];
	"35:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fa58cd20a50>",
		fillcolor=cadetblue,
		label="35:BS
next_state = S101;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fa58cd20a50>]",
		style=filled,
		typ=BlockingSubstitution];
	"34:IF" -> "35:BS"	[cond="['x']",
		label=x,
		lineno=34];
	"35:BS" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"51:BL" -> "52:IF"	[cond="[]",
		lineno=None];
}
