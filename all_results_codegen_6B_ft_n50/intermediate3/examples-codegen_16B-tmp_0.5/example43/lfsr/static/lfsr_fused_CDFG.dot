strict digraph "compose( ,  )" {
	node [label="\N"];
	"18:AS"	[ast="<pyverilog.vparser.ast.Assign object at 0x7f7f513bf450>",
		def_var="['r_next']",
		fillcolor=deepskyblue,
		label="18:AS
r_next[2] = r_reg[1] ^ r_reg[2] ^ feedback_value;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['r_reg', 'r_reg', 'feedback_value']"];
	"21:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f7f4f7989d0>",
		clk_sens=True,
		fillcolor=gold,
		label="21:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'r_next']"];
	"18:AS" -> "21:AL";
	"Leaf_21:AL"	[def_var="['r_reg']",
		label="Leaf_21:AL"];
	"Leaf_21:AL" -> "18:AS";
	"15:AS"	[ast="<pyverilog.vparser.ast.Assign object at 0x7f7f4fb243d0>",
		def_var="['r_next']",
		fillcolor=deepskyblue,
		label="15:AS
r_next[0] = ~r_reg[0];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['r_reg']"];
	"Leaf_21:AL" -> "15:AS";
	"17:AS"	[ast="<pyverilog.vparser.ast.Assign object at 0x7f7f4fb27650>",
		def_var="['r_next']",
		fillcolor=deepskyblue,
		label="17:AS
r_next[1] = r_reg[0] ^ r_reg[1] ^ feedback_value;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['r_reg', 'r_reg', 'feedback_value']"];
	"Leaf_21:AL" -> "17:AS";
	"28:AS"	[ast="<pyverilog.vparser.ast.Assign object at 0x7f7f4f7982d0>",
		def_var="['q']",
		fillcolor=deepskyblue,
		label="28:AS
q = r_reg;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['r_reg']"];
	"Leaf_21:AL" -> "28:AS";
	"16:AS"	[ast="<pyverilog.vparser.ast.Assign object at 0x7f7f4face4d0>",
		def_var="['feedback_value']",
		fillcolor=deepskyblue,
		label="16:AS
feedback_value = r_reg[2] ^ r_reg[4];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['r_reg', 'r_reg']"];
	"Leaf_21:AL" -> "16:AS";
	"20:AS"	[ast="<pyverilog.vparser.ast.Assign object at 0x7f7f4f798d90>",
		def_var="['r_next']",
		fillcolor=deepskyblue,
		label="20:AS
r_next[4] = r_reg[3] ^ r_reg[4] ^ feedback_value;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['r_reg', 'r_reg', 'feedback_value']"];
	"Leaf_21:AL" -> "20:AS";
	"19:AS"	[ast="<pyverilog.vparser.ast.Assign object at 0x7f7f4f798b10>",
		def_var="['r_next']",
		fillcolor=deepskyblue,
		label="19:AS
r_next[3] = r_reg[2] ^ r_reg[3] ^ feedback_value;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['r_reg', 'r_reg', 'feedback_value']"];
	"Leaf_21:AL" -> "19:AS";
	"22:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f7f4f798a90>",
		fillcolor=turquoise,
		label="22:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"23:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7f4f798550>",
		fillcolor=springgreen,
		label="23:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"22:BL" -> "23:IF"	[cond="[]",
		lineno=None];
	"21:AL" -> "22:BL"	[cond="[]",
		lineno=None];
	"26:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7f4f7986d0>",
		fillcolor=firebrick,
		label="26:NS
r_reg <= r_next;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7f4f7986d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"26:NS" -> "Leaf_21:AL"	[cond="[]",
		lineno=None];
	"24:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7f4f798450>",
		fillcolor=firebrick,
		label="24:NS
r_reg <= 5'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f7f4f798450>]",
		style=filled,
		typ=NonblockingSubstitution];
	"24:NS" -> "Leaf_21:AL"	[cond="[]",
		lineno=None];
	"15:AS" -> "21:AL";
	"17:AS" -> "21:AL";
	"23:IF" -> "26:NS"	[cond="['reset']",
		label="!(reset)",
		lineno=23];
	"23:IF" -> "24:NS"	[cond="['reset']",
		label=reset,
		lineno=23];
	"16:AS" -> "18:AS";
	"16:AS" -> "17:AS";
	"16:AS" -> "20:AS";
	"16:AS" -> "19:AS";
	"20:AS" -> "21:AL";
	"19:AS" -> "21:AL";
}
