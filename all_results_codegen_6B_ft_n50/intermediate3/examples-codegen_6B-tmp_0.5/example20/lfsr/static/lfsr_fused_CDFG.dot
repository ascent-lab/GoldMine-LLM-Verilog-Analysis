strict digraph "compose( ,  )" {
	node [label="\N"];
	"17:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1ed28a3610>",
		fillcolor=springgreen,
		label="17:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"18:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1ed28a3210>",
		fillcolor=firebrick,
		label="18:NS
r_reg <= 5'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1ed28a3210>]",
		style=filled,
		typ=NonblockingSubstitution];
	"17:IF" -> "18:NS"	[cond="['reset']",
		label=reset,
		lineno=17];
	"20:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1ed284ecd0>",
		fillcolor=firebrick,
		label="20:NS
r_reg <= r_next;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f1ed284ecd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"17:IF" -> "20:NS"	[cond="['reset']",
		label="!(reset)",
		lineno=17];
	"Leaf_16:AL"	[def_var="['r_reg']",
		label="Leaf_16:AL"];
	"23:AS"	[ast="<pyverilog.vparser.ast.Assign object at 0x7f1ed28a6f50>",
		def_var="['q']",
		fillcolor=deepskyblue,
		label="23:AS
q = r_reg;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['r_reg']"];
	"Leaf_16:AL" -> "23:AS";
	"21:AS"	[ast="<pyverilog.vparser.ast.Assign object at 0x7f1ed28bd6d0>",
		def_var="['feedback_value']",
		fillcolor=deepskyblue,
		label="21:AS
feedback_value = r_reg[2] ^ r_reg[4];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['r_reg', 'r_reg']"];
	"Leaf_16:AL" -> "21:AS";
	"22:AS"	[ast="<pyverilog.vparser.ast.Assign object at 0x7f1ed28a6150>",
		def_var="['r_next']",
		fillcolor=deepskyblue,
		label="22:AS
r_next = { r_reg[3:0], feedback_value };",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['r_reg', 'feedback_value']"];
	"Leaf_16:AL" -> "22:AS";
	"18:NS" -> "Leaf_16:AL"	[cond="[]",
		lineno=None];
	"21:AS" -> "22:AS";
	"16:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f1ed28a3790>",
		clk_sens=True,
		fillcolor=gold,
		label="16:AL",
		sens="['clk', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'r_next']"];
	"16:AL" -> "17:IF"	[cond="[]",
		lineno=None];
	"20:NS" -> "Leaf_16:AL"	[cond="[]",
		lineno=None];
	"22:AS" -> "16:AL";
}
