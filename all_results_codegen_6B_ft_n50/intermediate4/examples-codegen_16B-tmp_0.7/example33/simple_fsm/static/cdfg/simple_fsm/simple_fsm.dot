strict digraph "compose( ,  )" {
	node [label="\N"];
	"27:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7fc775ae7090>",
		fillcolor=springgreen,
		label="27:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"28:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fc775ae7f50>",
		fillcolor=cadetblue,
		label="28:BS
next_state = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fc775ae7f50>]",
		style=filled,
		typ=BlockingSubstitution];
	"27:IF" -> "28:BS"	[cond="['in']",
		label=in,
		lineno=27];
	"30:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fc77737f450>",
		fillcolor=cadetblue,
		label="30:BS
next_state = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fc77737f450>]",
		style=filled,
		typ=BlockingSubstitution];
	"27:IF" -> "30:BS"	[cond="['in']",
		label="!(in)",
		lineno=27];
	"20:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fc775a8ecd0>",
		fillcolor=turquoise,
		label="20:BL
present_state <= next_state;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fc775a8ebd0>]",
		style=filled,
		typ=Block];
	"Leaf_13:AL"	[def_var="['present_state']",
		label="Leaf_13:AL"];
	"20:BL" -> "Leaf_13:AL"	[cond="[]",
		lineno=None];
	"Leaf_24:AL"	[def_var="['next_state']",
		label="Leaf_24:AL"];
	"13:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7fc775a96810>",
		clk_sens=True,
		fillcolor=gold,
		label="13:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'next_state']"];
	"Leaf_24:AL" -> "13:AL";
	"27:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fc775afd6d0>",
		fillcolor=lightcyan,
		label="27:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"27:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fc775ae7850>",
		fillcolor=turquoise,
		label="27:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"27:CA" -> "27:BL"	[cond="[]",
		lineno=None];
	"28:BS" -> "Leaf_24:AL"	[cond="[]",
		lineno=None];
	"14:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fc775a96750>",
		fillcolor=turquoise,
		label="14:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"13:AL" -> "14:BL"	[cond="[]",
		lineno=None];
	"25:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fc775afdc50>",
		fillcolor=turquoise,
		label="25:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"26:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7fc779c45d10>",
		fillcolor=linen,
		label="26:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"25:BL" -> "26:CS"	[cond="[]",
		lineno=None];
	"39:AS"	[ast="<pyverilog.vparser.ast.Assign object at 0x7fc775758cd0>",
		def_var="['out']",
		fillcolor=deepskyblue,
		label="39:AS
out = present_state;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['present_state']"];
	"33:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fc775b06510>",
		fillcolor=cadetblue,
		label="33:BS
next_state = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fc775b06510>]",
		style=filled,
		typ=BlockingSubstitution];
	"33:BS" -> "Leaf_24:AL"	[cond="[]",
		lineno=None];
	"15:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7fc775ae4e10>",
		fillcolor=springgreen,
		label="15:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"14:BL" -> "15:IF"	[cond="[]",
		lineno=None];
	"Leaf_13:AL" -> "39:AS";
	"24:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7fc775afd4d0>",
		clk_sens=False,
		fillcolor=gold,
		label="24:AL",
		sens="['present_state', 'in']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['present_state', 'in']"];
	"Leaf_13:AL" -> "24:AL";
	"30:BS" -> "Leaf_24:AL"	[cond="[]",
		lineno=None];
	"32:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fc775b6ad90>",
		fillcolor=lightcyan,
		label="32:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"32:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fc775b6a1d0>",
		fillcolor=turquoise,
		label="32:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"32:CA" -> "32:BL"	[cond="[]",
		lineno=None];
	"32:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7fc775b06150>",
		fillcolor=springgreen,
		label="32:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"32:BL" -> "32:IF"	[cond="[]",
		lineno=None];
	"32:IF" -> "33:BS"	[cond="['in']",
		label=in,
		lineno=32];
	"35:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fc775758c90>",
		fillcolor=cadetblue,
		label="35:BS
next_state = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fc775758c90>]",
		style=filled,
		typ=BlockingSubstitution];
	"32:IF" -> "35:BS"	[cond="['in']",
		label="!(in)",
		lineno=32];
	"27:BL" -> "27:IF"	[cond="[]",
		lineno=None];
	"15:IF" -> "20:BL"	[cond="['reset']",
		label="!(reset)",
		lineno=15];
	"16:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fc775ae4790>",
		fillcolor=turquoise,
		label="16:BL
present_state <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fc775ae4610>]",
		style=filled,
		typ=Block];
	"15:IF" -> "16:BL"	[cond="['reset']",
		label=reset,
		lineno=15];
	"26:CS" -> "27:CA"	[cond="['present_state']",
		label=present_state,
		lineno=26];
	"26:CS" -> "32:CA"	[cond="['present_state']",
		label=present_state,
		lineno=26];
	"16:BL" -> "Leaf_13:AL"	[cond="[]",
		lineno=None];
	"24:AL" -> "25:BL"	[cond="[]",
		lineno=None];
	"35:BS" -> "Leaf_24:AL"	[cond="[]",
		lineno=None];
}
