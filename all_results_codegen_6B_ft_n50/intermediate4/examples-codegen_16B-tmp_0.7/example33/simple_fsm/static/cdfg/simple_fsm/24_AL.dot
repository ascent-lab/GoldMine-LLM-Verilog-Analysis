strict digraph "" {
	node [label="\N"];
	"28:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fc77528b0d0>",
		fillcolor=cadetblue,
		label="28:BS
next_state = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fc77528b0d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_24:AL"	[def_var="['next_state']",
		label="Leaf_24:AL"];
	"28:BS" -> "Leaf_24:AL"	[cond="[]",
		lineno=None];
	"32:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fc77528b910>",
		fillcolor=turquoise,
		label="32:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"32:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7fc77528b710>",
		fillcolor=springgreen,
		label="32:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"32:BL" -> "32:IF"	[cond="[]",
		lineno=None];
	"27:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7fc77528b390>",
		fillcolor=springgreen,
		label="27:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"27:IF" -> "28:BS"	[cond="['in']",
		label=in,
		lineno=27];
	"30:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fc77528b410>",
		fillcolor=cadetblue,
		label="30:BS
next_state = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fc77528b410>]",
		style=filled,
		typ=BlockingSubstitution];
	"27:IF" -> "30:BS"	[cond="['in']",
		label="!(in)",
		lineno=27];
	"27:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fc77528ba50>",
		fillcolor=lightcyan,
		label="27:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"27:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fc77528b8d0>",
		fillcolor=turquoise,
		label="27:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"27:CA" -> "27:BL"	[cond="[]",
		lineno=None];
	"33:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fc77528b5d0>",
		fillcolor=cadetblue,
		label="33:BS
next_state = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fc77528b5d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"32:IF" -> "33:BS"	[cond="['in']",
		label=in,
		lineno=32];
	"35:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fc77528b750>",
		fillcolor=cadetblue,
		label="35:BS
next_state = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fc77528b750>]",
		style=filled,
		typ=BlockingSubstitution];
	"32:IF" -> "35:BS"	[cond="['in']",
		label="!(in)",
		lineno=32];
	"32:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fc77528bb10>",
		fillcolor=lightcyan,
		label="32:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"32:CA" -> "32:BL"	[cond="[]",
		lineno=None];
	"26:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7fc77528b950>",
		fillcolor=linen,
		label="26:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"26:CS" -> "27:CA"	[cond="['present_state']",
		label=present_state,
		lineno=26];
	"26:CS" -> "32:CA"	[cond="['present_state']",
		label=present_state,
		lineno=26];
	"27:BL" -> "27:IF"	[cond="[]",
		lineno=None];
	"30:BS" -> "Leaf_24:AL"	[cond="[]",
		lineno=None];
	"24:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7fc77528bc10>",
		clk_sens=False,
		fillcolor=gold,
		label="24:AL",
		sens="['present_state', 'in']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['present_state', 'in']"];
	"25:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fc77528bdd0>",
		fillcolor=turquoise,
		label="25:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"24:AL" -> "25:BL"	[cond="[]",
		lineno=None];
	"25:BL" -> "26:CS"	[cond="[]",
		lineno=None];
	"33:BS" -> "Leaf_24:AL"	[cond="[]",
		lineno=None];
	"35:BS" -> "Leaf_24:AL"	[cond="[]",
		lineno=None];
}
