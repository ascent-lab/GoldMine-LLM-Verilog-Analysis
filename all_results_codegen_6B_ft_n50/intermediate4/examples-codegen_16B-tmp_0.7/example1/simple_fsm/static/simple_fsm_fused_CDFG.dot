strict digraph "compose( ,  )" {
	node [label="\N"];
	"30:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fe3554ea110>",
		fillcolor=lightcyan,
		label="30:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"31:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fe3554ea1d0>",
		fillcolor=turquoise,
		label="31:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"30:CA" -> "31:BL"	[cond="[]",
		lineno=None];
	"32:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe356d68ad0>",
		fillcolor=springgreen,
		label="32:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"31:BL" -> "32:IF"	[cond="[]",
		lineno=None];
	"20:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fe35547dc50>",
		fillcolor=turquoise,
		label="20:BL
next_state = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe35547d610>]",
		style=filled,
		typ=Block];
	"22:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7fe3554ea250>",
		fillcolor=linen,
		label="22:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"20:BL" -> "22:CS"	[cond="[]",
		lineno=None];
	"28:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe3554ea390>",
		fillcolor=cadetblue,
		label="28:BS
next_state = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe3554ea390>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_19:AL"	[def_var="['next_state']",
		label="Leaf_19:AL"];
	"28:BS" -> "Leaf_19:AL"	[cond="[]",
		lineno=None];
	"26:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe355881610>",
		fillcolor=cadetblue,
		label="26:BS
next_state = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe355881610>]",
		style=filled,
		typ=BlockingSubstitution];
	"26:BS" -> "Leaf_19:AL"	[cond="[]",
		lineno=None];
	"12:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7fe355463110>",
		clk_sens=True,
		fillcolor=gold,
		label="12:AL",
		sens="['clk', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'next_state']"];
	"Leaf_19:AL" -> "12:AL";
	"39:AS"	[ast="<pyverilog.vparser.ast.Assign object at 0x7fe3550d8d90>",
		def_var="['out']",
		fillcolor=deepskyblue,
		label="39:AS
out = ((present_state == 1'b0) && (in == 1'b1))? 1'b1 : 1'b0;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['present_state', 'in']"];
	"33:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe3550d8b10>",
		fillcolor=cadetblue,
		label="33:BS
next_state = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe3550d8b10>]",
		style=filled,
		typ=BlockingSubstitution];
	"33:BS" -> "Leaf_19:AL"	[cond="[]",
		lineno=None];
	"24:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fe355466950>",
		fillcolor=turquoise,
		label="24:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"25:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe355466550>",
		fillcolor=springgreen,
		label="25:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"24:BL" -> "25:IF"	[cond="[]",
		lineno=None];
	"25:IF" -> "28:BS"	[cond="['in']",
		label="!(in)",
		lineno=25];
	"25:IF" -> "26:BS"	[cond="['in']",
		label=in,
		lineno=25];
	"15:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe355463210>",
		fillcolor=firebrick,
		label="15:NS
present_state <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe355463210>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_12:AL"	[def_var="['present_state']",
		label="Leaf_12:AL"];
	"15:NS" -> "Leaf_12:AL"	[cond="[]",
		lineno=None];
	"22:CS" -> "30:CA"	[cond="['present_state']",
		label=present_state,
		lineno=22];
	"23:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fe355466ad0>",
		fillcolor=lightcyan,
		label="23:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"22:CS" -> "23:CA"	[cond="['present_state']",
		label=present_state,
		lineno=22];
	"13:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fe3551d6bd0>",
		fillcolor=turquoise,
		label="13:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"12:AL" -> "13:BL"	[cond="[]",
		lineno=None];
	"Leaf_12:AL" -> "39:AS";
	"19:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7fe355471050>",
		clk_sens=False,
		fillcolor=gold,
		label="19:AL",
		sens="['in', 'present_state']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['present_state', 'in']"];
	"Leaf_12:AL" -> "19:AL";
	"32:IF" -> "33:BS"	[cond="['in']",
		label=in,
		lineno=32];
	"35:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe3550d8350>",
		fillcolor=cadetblue,
		label="35:BS
next_state = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe3550d8350>]",
		style=filled,
		typ=BlockingSubstitution];
	"32:IF" -> "35:BS"	[cond="['in']",
		label="!(in)",
		lineno=32];
	"14:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe3551cee90>",
		fillcolor=springgreen,
		label="14:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"13:BL" -> "14:IF"	[cond="[]",
		lineno=None];
	"19:AL" -> "20:BL"	[cond="[]",
		lineno=None];
	"14:IF" -> "15:NS"	[cond="['reset']",
		label=reset,
		lineno=14];
	"17:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe3551cebd0>",
		fillcolor=firebrick,
		label="17:NS
present_state <= next_state;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe3551cebd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"14:IF" -> "17:NS"	[cond="['reset']",
		label="!(reset)",
		lineno=14];
	"23:CA" -> "24:BL"	[cond="[]",
		lineno=None];
	"17:NS" -> "Leaf_12:AL"	[cond="[]",
		lineno=None];
	"35:BS" -> "Leaf_19:AL"	[cond="[]",
		lineno=None];
}
