strict digraph "compose( ,  )" {
	node [label="\N"];
	"15:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f8c97463210>",
		clk_sens=False,
		fillcolor=gold,
		label="15:AL",
		sens="['in']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['present_state', 'in']"];
	"16:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f8c97463ed0>",
		fillcolor=turquoise,
		label="16:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"15:AL" -> "16:BL"	[cond="[]",
		lineno=None];
	"31:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f8c974e0890>",
		fillcolor=turquoise,
		label="31:BL
present_state <= next_state;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8c974e0e50>]",
		style=filled,
		typ=Block];
	"Leaf_24:AL"	[def_var="['present_state']",
		label="Leaf_24:AL"];
	"31:BL" -> "Leaf_24:AL"	[cond="[]",
		lineno=None];
	"18:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8c97471550>",
		fillcolor=cadetblue,
		label="18:BS
next_state = in;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8c97471550>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_15:AL"	[def_var="['next_state']",
		label="Leaf_15:AL"];
	"18:BS" -> "Leaf_15:AL"	[cond="[]",
		lineno=None];
	"Leaf_24:AL" -> "15:AL";
	"13:AS"	[ast="<pyverilog.vparser.ast.Assign object at 0x7f8c97463790>",
		def_var="['out']",
		fillcolor=deepskyblue,
		label="13:AS
out = (present_state == 1)? 1 : 0;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['present_state']"];
	"Leaf_24:AL" -> "13:AS";
	"18:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f8c971ce290>",
		fillcolor=lightcyan,
		label="18:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"18:CA" -> "18:BS"	[cond="[]",
		lineno=None];
	"20:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f8c97466e90>",
		fillcolor=lightcyan,
		label="20:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"20:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8c97466ad0>",
		fillcolor=cadetblue,
		label="20:BS
next_state = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8c97466ad0>]",
		style=filled,
		typ=BlockingSubstitution];
	"20:CA" -> "20:BS"	[cond="[]",
		lineno=None];
	"26:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8c974e0950>",
		fillcolor=springgreen,
		label="26:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"26:IF" -> "31:BL"	[cond="['reset']",
		label="!(reset)",
		lineno=26];
	"27:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f8c9759ee50>",
		fillcolor=turquoise,
		label="27:BL
present_state <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8c974e0fd0>]",
		style=filled,
		typ=Block];
	"26:IF" -> "27:BL"	[cond="['reset']",
		label=reset,
		lineno=26];
	"20:BS" -> "Leaf_15:AL"	[cond="[]",
		lineno=None];
	"24:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f8c97466090>",
		clk_sens=True,
		fillcolor=gold,
		label="24:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'next_state']"];
	"Leaf_15:AL" -> "24:AL";
	"19:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f8c97471050>",
		fillcolor=lightcyan,
		label="19:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"19:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8c9747dc50>",
		fillcolor=cadetblue,
		label="19:BS
next_state = in;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f8c9747dc50>]",
		style=filled,
		typ=BlockingSubstitution];
	"19:CA" -> "19:BS"	[cond="[]",
		lineno=None];
	"27:BL" -> "Leaf_24:AL"	[cond="[]",
		lineno=None];
	"25:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f8c97466f50>",
		fillcolor=turquoise,
		label="25:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"24:AL" -> "25:BL"	[cond="[]",
		lineno=None];
	"25:BL" -> "26:IF"	[cond="[]",
		lineno=None];
	"19:BS" -> "Leaf_15:AL"	[cond="[]",
		lineno=None];
	"17:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f8c9747d4d0>",
		fillcolor=linen,
		label="17:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"16:BL" -> "17:CS"	[cond="[]",
		lineno=None];
	"17:CS" -> "18:CA"	[cond="['present_state']",
		label=present_state,
		lineno=17];
	"17:CS" -> "20:CA"	[cond="['present_state']",
		label=present_state,
		lineno=17];
	"17:CS" -> "19:CA"	[cond="['present_state']",
		label=present_state,
		lineno=17];
}
