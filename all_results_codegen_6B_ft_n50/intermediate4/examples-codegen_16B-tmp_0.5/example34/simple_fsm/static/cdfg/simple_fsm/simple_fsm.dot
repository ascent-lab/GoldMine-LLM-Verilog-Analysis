strict digraph "compose( ,  )" {
	node [label="\N"];
	"26:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbdf493f450>",
		fillcolor=firebrick,
		label="26:NS
next_state <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbdf493f450>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_20:AL"	[def_var="['next_state']",
		label="Leaf_20:AL"];
	"26:NS" -> "Leaf_20:AL"	[cond="[]",
		lineno=None];
	"20:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fbdf30bd610>",
		fillcolor=turquoise,
		label="20:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"21:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7fbdf6fc5d10>",
		fillcolor=linen,
		label="21:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"20:BL" -> "21:CS"	[cond="[]",
		lineno=None];
	"22:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fbdf30a6650>",
		fillcolor=turquoise,
		label="22:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"23:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbdf30a6090>",
		fillcolor=springgreen,
		label="23:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"22:BL" -> "23:IF"	[cond="[]",
		lineno=None];
	"12:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fbdf30a3110>",
		fillcolor=turquoise,
		label="12:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"13:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbdf30a3210>",
		fillcolor=springgreen,
		label="13:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"12:BL" -> "13:IF"	[cond="[]",
		lineno=None];
	"13:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fbdf30a34d0>",
		fillcolor=turquoise,
		label="13:BL
present_state <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbdf30a3890>]",
		style=filled,
		typ=Block];
	"13:IF" -> "13:BL"	[cond="['reset']",
		label=reset,
		lineno=13];
	"16:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fbdf304e550>",
		fillcolor=turquoise,
		label="16:BL
present_state <= next_state;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbdf30b1150>]",
		style=filled,
		typ=Block];
	"13:IF" -> "16:BL"	[cond="['reset']",
		label="!(reset)",
		lineno=13];
	"32:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbdf2d18d10>",
		fillcolor=firebrick,
		label="32:NS
next_state <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbdf2d18d10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"32:NS" -> "Leaf_20:AL"	[cond="[]",
		lineno=None];
	"29:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7fbdf30c6550>",
		fillcolor=springgreen,
		label="29:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"29:IF" -> "32:NS"	[cond="['in']",
		label="!((in == 1'b1))",
		lineno=29];
	"30:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbdf49a8ad0>",
		fillcolor=firebrick,
		label="30:NS
next_state <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbdf49a8ad0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"29:IF" -> "30:NS"	[cond="['in']",
		label="(in == 1'b1)",
		lineno=29];
	"36:AS"	[ast="<pyverilog.vparser.ast.Assign object at 0x7fbdf2d18bd0>",
		def_var="['out']",
		fillcolor=deepskyblue,
		label="36:AS
out = (present_state == 1'b1)? 1'b1 : 1'b0;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['present_state']"];
	"28:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fbdf312a390>",
		fillcolor=turquoise,
		label="28:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"28:BL" -> "29:IF"	[cond="[]",
		lineno=None];
	"20:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7fbdf30b1390>",
		clk_sens=False,
		fillcolor=gold,
		label="20:AL",
		sens="[]",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['present_state', 'in']"];
	"20:AL" -> "20:BL"	[cond="[]",
		lineno=None];
	"22:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fbdf30b1050>",
		fillcolor=lightcyan,
		label="22:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"22:CA" -> "22:BL"	[cond="[]",
		lineno=None];
	"12:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7fbdf3056bd0>",
		clk_sens=True,
		fillcolor=gold,
		label="12:AL",
		sens="['clk', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'next_state']"];
	"12:AL" -> "12:BL"	[cond="[]",
		lineno=None];
	"24:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbdf30a6f50>",
		fillcolor=firebrick,
		label="24:NS
next_state <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fbdf30a6f50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"24:NS" -> "Leaf_20:AL"	[cond="[]",
		lineno=None];
	"21:CS" -> "22:CA"	[cond="['present_state']",
		label=present_state,
		lineno=21];
	"28:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fbdf312ad90>",
		fillcolor=lightcyan,
		label="28:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"21:CS" -> "28:CA"	[cond="['present_state']",
		label=present_state,
		lineno=21];
	"Leaf_12:AL"	[def_var="['present_state']",
		label="Leaf_12:AL"];
	"Leaf_12:AL" -> "36:AS";
	"Leaf_12:AL" -> "20:AL";
	"23:IF" -> "26:NS"	[cond="['in']",
		label="!((in == 1'b1))",
		lineno=23];
	"23:IF" -> "24:NS"	[cond="['in']",
		label="(in == 1'b1)",
		lineno=23];
	"13:BL" -> "Leaf_12:AL"	[cond="[]",
		lineno=None];
	"30:NS" -> "Leaf_20:AL"	[cond="[]",
		lineno=None];
	"Leaf_20:AL" -> "12:AL";
	"28:CA" -> "28:BL"	[cond="[]",
		lineno=None];
	"16:BL" -> "Leaf_12:AL"	[cond="[]",
		lineno=None];
}
