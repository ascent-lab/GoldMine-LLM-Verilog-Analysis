strict digraph "compose( ,  )" {
	node [label="\N"];
	"21:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fad782e6850>",
		fillcolor=turquoise,
		label="21:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"22:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7fad78360650>",
		fillcolor=linen,
		label="22:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"21:BL" -> "22:CS"	[cond="[]",
		lineno=None];
	"27:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7fad77f583d0>",
		fillcolor=springgreen,
		label="27:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"28:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fad77f58c90>",
		fillcolor=firebrick,
		label="28:NS
next_state <= S1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fad77f58c90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"27:IF" -> "28:NS"	[cond="['in']",
		label="(in == 1)",
		lineno=27];
	"30:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fad77f58dd0>",
		fillcolor=firebrick,
		label="30:NS
next_state <= S0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fad77f58dd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"27:IF" -> "30:NS"	[cond="['in']",
		label="!((in == 1))",
		lineno=27];
	"31:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fad77f58a50>",
		fillcolor=firebrick,
		label="31:NS
next_state <= S0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fad77f58a50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_20:AL"	[def_var="['next_state']",
		label="Leaf_20:AL"];
	"31:NS" -> "Leaf_20:AL"	[cond="[]",
		lineno=None];
	"26:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fad78360d10>",
		fillcolor=firebrick,
		label="26:NS
next_state <= S1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fad78360d10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"26:NS" -> "Leaf_20:AL"	[cond="[]",
		lineno=None];
	"27:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fad78360f90>",
		fillcolor=lightcyan,
		label="27:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"27:CA" -> "27:IF"	[cond="[]",
		lineno=None];
	"15:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7fad782f1550>",
		fillcolor=springgreen,
		label="15:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"18:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fad782f1250>",
		fillcolor=firebrick,
		label="18:NS
present_state <= next_state;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fad782f1250>]",
		style=filled,
		typ=NonblockingSubstitution];
	"15:IF" -> "18:NS"	[cond="['reset']",
		label="!((reset == 1'b1))",
		lineno=15];
	"16:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fad7828ebd0>",
		fillcolor=firebrick,
		label="16:NS
present_state <= S0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fad7828ebd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"15:IF" -> "16:NS"	[cond="['reset']",
		label="(reset == 1'b1)",
		lineno=15];
	"13:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7fad782e34d0>",
		clk_sens=True,
		fillcolor=gold,
		label="13:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'next_state']"];
	"14:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fad782e3610>",
		fillcolor=turquoise,
		label="14:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"13:AL" -> "14:BL"	[cond="[]",
		lineno=None];
	"Leaf_13:AL"	[def_var="['present_state']",
		label="Leaf_13:AL"];
	"18:NS" -> "Leaf_13:AL"	[cond="[]",
		lineno=None];
	"34:AS"	[ast="<pyverilog.vparser.ast.Assign object at 0x7fad77f58d50>",
		def_var="['out']",
		fillcolor=deepskyblue,
		label="34:AS
out = present_state == S0;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['present_state']"];
	"20:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7fad782e6750>",
		clk_sens=False,
		fillcolor=gold,
		label="20:AL",
		sens="['present_state', 'in']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['present_state', 'in']"];
	"20:AL" -> "21:BL"	[cond="[]",
		lineno=None];
	"14:BL" -> "15:IF"	[cond="[]",
		lineno=None];
	"16:NS" -> "Leaf_13:AL"	[cond="[]",
		lineno=None];
	"31:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fad77f58d10>",
		fillcolor=lightcyan,
		label="31:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"31:CA" -> "31:NS"	[cond="[]",
		lineno=None];
	"28:NS" -> "Leaf_20:AL"	[cond="[]",
		lineno=None];
	"Leaf_13:AL" -> "34:AS";
	"Leaf_13:AL" -> "20:AL";
	"22:CS" -> "27:CA"	[cond="['present_state']",
		label=present_state,
		lineno=22];
	"22:CS" -> "31:CA"	[cond="['present_state']",
		label=present_state,
		lineno=22];
	"23:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fad782e6650>",
		fillcolor=lightcyan,
		label="23:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"22:CS" -> "23:CA"	[cond="['present_state']",
		label=present_state,
		lineno=22];
	"24:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fad7865ee50>",
		fillcolor=firebrick,
		label="24:NS
next_state <= S0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fad7865ee50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"24:NS" -> "Leaf_20:AL"	[cond="[]",
		lineno=None];
	"23:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7fad79b7f450>",
		fillcolor=springgreen,
		label="23:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"23:IF" -> "26:NS"	[cond="['in']",
		label="!((in == 1))",
		lineno=23];
	"23:IF" -> "24:NS"	[cond="['in']",
		label="(in == 1)",
		lineno=23];
	"23:CA" -> "23:IF"	[cond="[]",
		lineno=None];
	"30:NS" -> "Leaf_20:AL"	[cond="[]",
		lineno=None];
	"Leaf_20:AL" -> "13:AL";
}
