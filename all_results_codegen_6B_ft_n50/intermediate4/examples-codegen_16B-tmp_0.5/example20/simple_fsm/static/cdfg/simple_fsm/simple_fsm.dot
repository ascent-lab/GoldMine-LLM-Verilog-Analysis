strict digraph "compose( ,  )" {
	node [label="\N"];
	"44:AS"	[ast="<pyverilog.vparser.ast.Assign object at 0x7f55fced8390>",
		def_var="['out']",
		fillcolor=deepskyblue,
		label="44:AS
out = (present_state == 0)? 1 : 0;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['present_state']"];
	"21:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f55fd27d4d0>",
		fillcolor=turquoise,
		label="21:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"22:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f55fd2ead90>",
		fillcolor=linen,
		label="22:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"21:BL" -> "22:CS"	[cond="[]",
		lineno=None];
	"31:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f55fd2ead10>",
		fillcolor=turquoise,
		label="31:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"32:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f55fced8cd0>",
		fillcolor=springgreen,
		label="32:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"31:BL" -> "32:IF"	[cond="[]",
		lineno=None];
	"39:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f55fced8bd0>",
		fillcolor=turquoise,
		label="39:BL
next_state <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f55fced8890>]",
		style=filled,
		typ=Block];
	"Leaf_21:AL"	[def_var="['next_state']",
		label="Leaf_21:AL"];
	"39:BL" -> "Leaf_21:AL"	[cond="[]",
		lineno=None];
	"32:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f55fced8a10>",
		fillcolor=turquoise,
		label="32:BL
next_state <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f55fced83d0>]",
		style=filled,
		typ=Block];
	"32:BL" -> "Leaf_21:AL"	[cond="[]",
		lineno=None];
	"24:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f55fd266150>",
		fillcolor=springgreen,
		label="24:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"27:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f55fd2eae90>",
		fillcolor=turquoise,
		label="27:BL
next_state <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f55fd2ea250>]",
		style=filled,
		typ=Block];
	"24:IF" -> "27:BL"	[cond="['in']",
		label="!(in)",
		lineno=24];
	"24:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f55fd266f50>",
		fillcolor=turquoise,
		label="24:BL
next_state <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f55fd266290>]",
		style=filled,
		typ=Block];
	"24:IF" -> "24:BL"	[cond="['in']",
		label=in,
		lineno=24];
	"39:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f55fced8a50>",
		fillcolor=lightcyan,
		label="39:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"39:CA" -> "39:BL"	[cond="[]",
		lineno=None];
	"13:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f55fcfd6910>",
		clk_sens=True,
		fillcolor=gold,
		label="13:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'next_state']"];
	"13:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f55fcfd6750>",
		fillcolor=turquoise,
		label="13:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"13:AL" -> "13:BL"	[cond="[]",
		lineno=None];
	"27:BL" -> "Leaf_21:AL"	[cond="[]",
		lineno=None];
	"23:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f55fd266750>",
		fillcolor=turquoise,
		label="23:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"23:BL" -> "24:IF"	[cond="[]",
		lineno=None];
	"24:BL" -> "Leaf_21:AL"	[cond="[]",
		lineno=None];
	"14:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f55fd263790>",
		fillcolor=turquoise,
		label="14:BL
present_state <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f55fd263610>]",
		style=filled,
		typ=Block];
	"Leaf_13:AL"	[def_var="['present_state']",
		label="Leaf_13:AL"];
	"14:BL" -> "Leaf_13:AL"	[cond="[]",
		lineno=None];
	"Leaf_21:AL" -> "13:AL";
	"17:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f55fcfcecd0>",
		fillcolor=turquoise,
		label="17:BL
present_state <= next_state;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f55fcfcebd0>]",
		style=filled,
		typ=Block];
	"17:BL" -> "Leaf_13:AL"	[cond="[]",
		lineno=None];
	"31:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f55fd2ea1d0>",
		fillcolor=lightcyan,
		label="31:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"31:CA" -> "31:BL"	[cond="[]",
		lineno=None];
	"21:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f55fd27d610>",
		clk_sens=False,
		fillcolor=gold,
		label="21:AL",
		sens="['in', 'present_state']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['present_state', 'in']"];
	"21:AL" -> "21:BL"	[cond="[]",
		lineno=None];
	"Leaf_13:AL" -> "44:AS";
	"Leaf_13:AL" -> "21:AL";
	"22:CS" -> "39:CA"	[cond="['present_state']",
		label=present_state,
		lineno=22];
	"22:CS" -> "31:CA"	[cond="['present_state']",
		label=present_state,
		lineno=22];
	"23:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f55fd27d6d0>",
		fillcolor=lightcyan,
		label="23:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"22:CS" -> "23:CA"	[cond="['present_state']",
		label=present_state,
		lineno=22];
	"35:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f55fced8dd0>",
		fillcolor=turquoise,
		label="35:BL
next_state <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f55fced8610>]",
		style=filled,
		typ=Block];
	"35:BL" -> "Leaf_21:AL"	[cond="[]",
		lineno=None];
	"32:IF" -> "32:BL"	[cond="['in']",
		label=in,
		lineno=32];
	"32:IF" -> "35:BL"	[cond="['in']",
		label="!(in)",
		lineno=32];
	"14:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f55fd263890>",
		fillcolor=springgreen,
		label="14:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"13:BL" -> "14:IF"	[cond="[]",
		lineno=None];
	"14:IF" -> "14:BL"	[cond="['reset']",
		label=reset,
		lineno=14];
	"14:IF" -> "17:BL"	[cond="['reset']",
		label="!(reset)",
		lineno=14];
	"23:CA" -> "23:BL"	[cond="[]",
		lineno=None];
}
