strict digraph "" {
	node [label="\N"];
	"35:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f55fcee8b10>",
		fillcolor=turquoise,
		label="35:BL
next_state <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f55fcee84d0>]",
		style=filled,
		typ=Block];
	"Leaf_21:AL"	[def_var="['next_state']",
		label="Leaf_21:AL"];
	"35:BL" -> "Leaf_21:AL"	[cond="[]",
		lineno=None];
	"39:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f55fc7b85d0>",
		fillcolor=lightcyan,
		label="39:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"39:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f55fc7b8610>",
		fillcolor=turquoise,
		label="39:BL
next_state <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f55fc7b8650>]",
		style=filled,
		typ=Block];
	"39:CA" -> "39:BL"	[cond="[]",
		lineno=None];
	"21:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f55fc7b8790>",
		fillcolor=turquoise,
		label="21:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"22:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f55fc7b87d0>",
		fillcolor=linen,
		label="22:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"21:BL" -> "22:CS"	[cond="[]",
		lineno=None];
	"31:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f55fcee8890>",
		fillcolor=turquoise,
		label="31:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"32:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f55fcee83d0>",
		fillcolor=springgreen,
		label="32:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"31:BL" -> "32:IF"	[cond="[]",
		lineno=None];
	"31:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f55fcee8810>",
		fillcolor=lightcyan,
		label="31:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"31:CA" -> "31:BL"	[cond="[]",
		lineno=None];
	"21:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f55fc7b8e50>",
		clk_sens=False,
		fillcolor=gold,
		label="21:AL",
		sens="['in', 'present_state']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['present_state', 'in']"];
	"21:AL" -> "21:BL"	[cond="[]",
		lineno=None];
	"39:BL" -> "Leaf_21:AL"	[cond="[]",
		lineno=None];
	"32:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f55fc7b8590>",
		fillcolor=turquoise,
		label="32:BL
next_state <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f55fc7b8110>]",
		style=filled,
		typ=Block];
	"32:BL" -> "Leaf_21:AL"	[cond="[]",
		lineno=None];
	"27:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f55fc7b8a10>",
		fillcolor=turquoise,
		label="27:BL
next_state <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f55fc7b8a50>]",
		style=filled,
		typ=Block];
	"27:BL" -> "Leaf_21:AL"	[cond="[]",
		lineno=None];
	"24:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f55fc7b8990>",
		fillcolor=springgreen,
		label="24:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"24:IF" -> "27:BL"	[cond="['in']",
		label="!(in)",
		lineno=24];
	"24:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f55fc7b8bd0>",
		fillcolor=turquoise,
		label="24:BL
next_state <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f55fc7b8c10>]",
		style=filled,
		typ=Block];
	"24:IF" -> "24:BL"	[cond="['in']",
		label=in,
		lineno=24];
	"22:CS" -> "39:CA"	[cond="['present_state']",
		label=present_state,
		lineno=22];
	"22:CS" -> "31:CA"	[cond="['present_state']",
		label=present_state,
		lineno=22];
	"23:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f55fc7b88d0>",
		fillcolor=lightcyan,
		label="23:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"22:CS" -> "23:CA"	[cond="['present_state']",
		label=present_state,
		lineno=22];
	"23:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f55fc7b8950>",
		fillcolor=turquoise,
		label="23:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"23:CA" -> "23:BL"	[cond="[]",
		lineno=None];
	"24:BL" -> "Leaf_21:AL"	[cond="[]",
		lineno=None];
	"32:IF" -> "35:BL"	[cond="['in']",
		label="!(in)",
		lineno=32];
	"32:IF" -> "32:BL"	[cond="['in']",
		label=in,
		lineno=32];
	"23:BL" -> "24:IF"	[cond="[]",
		lineno=None];
}
