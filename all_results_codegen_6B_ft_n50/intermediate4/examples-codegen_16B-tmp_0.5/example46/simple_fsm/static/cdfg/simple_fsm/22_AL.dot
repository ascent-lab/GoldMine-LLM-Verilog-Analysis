strict digraph "" {
	node [label="\N"];
	"22:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f73e00b0250>",
		clk_sens=False,
		fillcolor=gold,
		label="22:AL",
		sens="['present_state', 'in']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['present_state', 'in']"];
	"23:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f73e00b0410>",
		fillcolor=turquoise,
		label="23:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"22:AL" -> "23:BL"	[cond="[]",
		lineno=None];
	"31:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f73e00b0990>",
		fillcolor=lightcyan,
		label="31:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"31:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f73e00b0a10>",
		fillcolor=turquoise,
		label="31:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"31:CA" -> "31:BL"	[cond="[]",
		lineno=None];
	"32:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f73e00b0a50>",
		fillcolor=springgreen,
		label="32:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"31:BL" -> "32:IF"	[cond="[]",
		lineno=None];
	"25:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f73e00b0510>",
		fillcolor=lightcyan,
		label="25:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"25:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f73e00b0590>",
		fillcolor=turquoise,
		label="25:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"25:CA" -> "25:BL"	[cond="[]",
		lineno=None];
	"33:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f73e00b0c10>",
		fillcolor=cadetblue,
		label="33:BS
next_state = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f73e00b0c10>]",
		style=filled,
		typ=BlockingSubstitution];
	"32:IF" -> "33:BS"	[cond="['in']",
		label=in,
		lineno=32];
	"35:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f73e00b0a90>",
		fillcolor=cadetblue,
		label="35:BS
next_state = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f73e00b0a90>]",
		style=filled,
		typ=BlockingSubstitution];
	"32:IF" -> "35:BS"	[cond="['in']",
		label="!(in)",
		lineno=32];
	"27:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f73e00b0810>",
		fillcolor=cadetblue,
		label="27:BS
next_state = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f73e00b0810>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_22:AL"	[def_var="['next_state']",
		label="Leaf_22:AL"];
	"27:BS" -> "Leaf_22:AL"	[cond="[]",
		lineno=None];
	"24:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f73e00b0450>",
		fillcolor=linen,
		label="24:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"24:CS" -> "31:CA"	[cond="['present_state']",
		label=present_state,
		lineno=24];
	"24:CS" -> "25:CA"	[cond="['present_state']",
		label=present_state,
		lineno=24];
	"23:BL" -> "24:CS"	[cond="[]",
		lineno=None];
	"26:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f73e00b05d0>",
		fillcolor=springgreen,
		label="26:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"26:IF" -> "27:BS"	[cond="['in']",
		label=in,
		lineno=26];
	"29:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f73e00b0650>",
		fillcolor=cadetblue,
		label="29:BS
next_state = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f73e00b0650>]",
		style=filled,
		typ=BlockingSubstitution];
	"26:IF" -> "29:BS"	[cond="['in']",
		label="!(in)",
		lineno=26];
	"25:BL" -> "26:IF"	[cond="[]",
		lineno=None];
	"33:BS" -> "Leaf_22:AL"	[cond="[]",
		lineno=None];
	"29:BS" -> "Leaf_22:AL"	[cond="[]",
		lineno=None];
	"35:BS" -> "Leaf_22:AL"	[cond="[]",
		lineno=None];
}
