strict digraph "" {
	node [label="\N"];
	"28:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f4cb64d7410>",
		fillcolor=cadetblue,
		label="28:BS
next_state = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f4cb64d7410>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_20:AL"	[def_var="['next_state']",
		label="Leaf_20:AL"];
	"28:BS" -> "Leaf_20:AL"	[cond="[]",
		lineno=None];
	"20:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f4cb64d77d0>",
		clk_sens=False,
		fillcolor=gold,
		label="20:AL",
		sens="['present_state', 'in']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['present_state', 'in']"];
	"21:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f4cb64d7990>",
		fillcolor=turquoise,
		label="21:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"20:AL" -> "21:BL"	[cond="[]",
		lineno=None];
	"24:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f4cb64d7b10>",
		fillcolor=turquoise,
		label="24:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"25:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f4cb64d7b50>",
		fillcolor=springgreen,
		label="25:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"24:BL" -> "25:IF"	[cond="[]",
		lineno=None];
	"30:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f4cb64d7d90>",
		fillcolor=lightcyan,
		label="30:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"31:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f4cb64d7e10>",
		fillcolor=turquoise,
		label="31:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"30:CA" -> "31:BL"	[cond="[]",
		lineno=None];
	"32:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f4cb64d7e50>",
		fillcolor=springgreen,
		label="32:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"31:BL" -> "32:IF"	[cond="[]",
		lineno=None];
	"33:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f4cb69eb190>",
		fillcolor=cadetblue,
		label="33:BS
next_state = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f4cb69eb190>]",
		style=filled,
		typ=BlockingSubstitution];
	"32:IF" -> "33:BS"	[cond="['in']",
		label=in,
		lineno=32];
	"35:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f4cb64d7e90>",
		fillcolor=cadetblue,
		label="35:BS
next_state = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f4cb64d7e90>]",
		style=filled,
		typ=BlockingSubstitution];
	"32:IF" -> "35:BS"	[cond="['in']",
		label="!(in)",
		lineno=32];
	"38:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f4cb64d7ed0>",
		fillcolor=cadetblue,
		label="38:BS
next_state = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f4cb64d7ed0>]",
		style=filled,
		typ=BlockingSubstitution];
	"38:BS" -> "Leaf_20:AL"	[cond="[]",
		lineno=None];
	"23:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f4cb64d7a90>",
		fillcolor=lightcyan,
		label="23:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"23:CA" -> "24:BL"	[cond="[]",
		lineno=None];
	"26:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f4cb64d7c10>",
		fillcolor=cadetblue,
		label="26:BS
next_state = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f4cb64d7c10>]",
		style=filled,
		typ=BlockingSubstitution];
	"26:BS" -> "Leaf_20:AL"	[cond="[]",
		lineno=None];
	"25:IF" -> "28:BS"	[cond="['in']",
		label="!(in)",
		lineno=25];
	"25:IF" -> "26:BS"	[cond="['in']",
		label=in,
		lineno=25];
	"22:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f4cb64d79d0>",
		fillcolor=linen,
		label="22:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"22:CS" -> "30:CA"	[cond="['present_state']",
		label=present_state,
		lineno=22];
	"22:CS" -> "23:CA"	[cond="['present_state']",
		label=present_state,
		lineno=22];
	"37:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f4cb4d39110>",
		fillcolor=lightcyan,
		label="37:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"22:CS" -> "37:CA"	[cond="['present_state']",
		label=present_state,
		lineno=22];
	"21:BL" -> "22:CS"	[cond="[]",
		lineno=None];
	"33:BS" -> "Leaf_20:AL"	[cond="[]",
		lineno=None];
	"37:CA" -> "38:BS"	[cond="[]",
		lineno=None];
	"35:BS" -> "Leaf_20:AL"	[cond="[]",
		lineno=None];
}
