strict digraph "compose( ,  )" {
	node [label="\N"];
	"21:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f0c8a8fdd10>",
		fillcolor=turquoise,
		label="21:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"22:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f0c8a960f90>",
		fillcolor=linen,
		label="22:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"21:BL" -> "22:CS"	[cond="[]",
		lineno=None];
	"31:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0c8a558b10>",
		fillcolor=firebrick,
		label="31:NS
next_state <= state1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0c8a558b10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_20:AL"	[def_var="['next_state']",
		label="Leaf_20:AL"];
	"31:NS" -> "Leaf_20:AL"	[cond="[]",
		lineno=None];
	"33:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0c8a558350>",
		fillcolor=firebrick,
		label="33:NS
next_state <= state0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0c8a558350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"33:NS" -> "Leaf_20:AL"	[cond="[]",
		lineno=None];
	"24:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f0c8a8e6550>",
		fillcolor=springgreen,
		label="24:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"25:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0c8ad01610>",
		fillcolor=firebrick,
		label="25:NS
next_state <= state0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0c8ad01610>]",
		style=filled,
		typ=NonblockingSubstitution];
	"24:IF" -> "25:NS"	[cond="['in']",
		label=in,
		lineno=24];
	"27:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0c8a9607d0>",
		fillcolor=firebrick,
		label="27:NS
next_state <= state1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0c8a9607d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"24:IF" -> "27:NS"	[cond="['in']",
		label="!(in)",
		lineno=24];
	"30:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f0c8c1e8ad0>",
		fillcolor=springgreen,
		label="30:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"30:IF" -> "31:NS"	[cond="['in']",
		label=in,
		lineno=30];
	"30:IF" -> "33:NS"	[cond="['in']",
		label="!(in)",
		lineno=30];
	"23:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f0c8a8e6750>",
		fillcolor=lightcyan,
		label="23:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"23:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f0c8a8e6ad0>",
		fillcolor=turquoise,
		label="23:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"23:CA" -> "23:BL"	[cond="[]",
		lineno=None];
	"13:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f0c8a8e34d0>",
		clk_sens=True,
		fillcolor=gold,
		label="13:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'next_state']"];
	"14:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f0c8a8e3610>",
		fillcolor=turquoise,
		label="14:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"13:AL" -> "14:BL"	[cond="[]",
		lineno=None];
	"37:AS"	[ast="<pyverilog.vparser.ast.Assign object at 0x7f0c8a558610>",
		def_var="['out']",
		fillcolor=deepskyblue,
		label="37:AS
out = present_state == state1;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['present_state']"];
	"18:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0c8a8f1390>",
		fillcolor=firebrick,
		label="18:NS
present_state <= next_state;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0c8a8f1390>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_13:AL"	[def_var="['present_state']",
		label="Leaf_13:AL"];
	"18:NS" -> "Leaf_13:AL"	[cond="[]",
		lineno=None];
	"25:NS" -> "Leaf_20:AL"	[cond="[]",
		lineno=None];
	"29:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f0c8a960d10>",
		fillcolor=turquoise,
		label="29:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"29:BL" -> "30:IF"	[cond="[]",
		lineno=None];
	"23:BL" -> "24:IF"	[cond="[]",
		lineno=None];
	"20:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f0c8a8e6650>",
		clk_sens=False,
		fillcolor=gold,
		label="20:AL",
		sens="['in', 'present_state']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['present_state', 'in']"];
	"20:AL" -> "21:BL"	[cond="[]",
		lineno=None];
	"15:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f0c8a88e4d0>",
		fillcolor=springgreen,
		label="15:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"14:BL" -> "15:IF"	[cond="[]",
		lineno=None];
	"16:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0c8a88e550>",
		fillcolor=firebrick,
		label="16:NS
present_state <= state0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f0c8a88e550>]",
		style=filled,
		typ=NonblockingSubstitution];
	"16:NS" -> "Leaf_13:AL"	[cond="[]",
		lineno=None];
	"Leaf_13:AL" -> "37:AS";
	"Leaf_13:AL" -> "20:AL";
	"22:CS" -> "23:CA"	[cond="['present_state']",
		label=present_state,
		lineno=22];
	"29:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f0c8a960450>",
		fillcolor=lightcyan,
		label="29:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"22:CS" -> "29:CA"	[cond="['present_state']",
		label=present_state,
		lineno=22];
	"27:NS" -> "Leaf_20:AL"	[cond="[]",
		lineno=None];
	"15:IF" -> "18:NS"	[cond="['reset']",
		label="!(reset)",
		lineno=15];
	"15:IF" -> "16:NS"	[cond="['reset']",
		label=reset,
		lineno=15];
	"Leaf_20:AL" -> "13:AL";
	"29:CA" -> "29:BL"	[cond="[]",
		lineno=None];
}
