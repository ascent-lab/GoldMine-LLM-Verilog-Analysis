strict digraph "compose( ,  )" {
	node [label="\N"];
	"9:AS"	[ast="<pyverilog.vparser.ast.Assign object at 0x7f5977923890>",
		def_var="['out']",
		fillcolor=deepskyblue,
		label="9:AS
out[1] = (sel)? b[1] : a[1];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['sel', 'b', 'a']"];
	"12:AS"	[ast="<pyverilog.vparser.ast.Assign object at 0x7f59779a0f90>",
		def_var="['out']",
		fillcolor=deepskyblue,
		label="12:AS
out[4] = (sel)? b[4] : a[4];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['sel', 'b', 'a']"];
	"11:AS"	[ast="<pyverilog.vparser.ast.Assign object at 0x7f5977926d10>",
		def_var="['out']",
		fillcolor=deepskyblue,
		label="11:AS
out[3] = (sel)? b[3] : a[3];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['sel', 'b', 'a']"];
	"8:AS"	[ast="<pyverilog.vparser.ast.Assign object at 0x7f5977937090>",
		def_var="['out']",
		fillcolor=deepskyblue,
		label="8:AS
out[0] = (sel)? b[0] : a[0];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['sel', 'b', 'a']"];
	"10:AS"	[ast="<pyverilog.vparser.ast.Assign object at 0x7f597793d6d0>",
		def_var="['out']",
		fillcolor=deepskyblue,
		label="10:AS
out[2] = (sel)? b[2] : a[2];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['sel', 'b', 'a']"];
}
