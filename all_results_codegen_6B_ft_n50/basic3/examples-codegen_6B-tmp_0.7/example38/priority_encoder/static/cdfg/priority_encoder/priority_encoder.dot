strict digraph "compose( ,  )" {
	node [label="\N"];
	"7:AS"	[ast="<pyverilog.vparser.ast.Assign object at 0x7ffb255b53d0>",
		def_var="['a']",
		fillcolor=deepskyblue,
		label="7:AS
a = 2'b00;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="[]"];
	"16:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ffb25526490>",
		fillcolor=cadetblue,
		label="16:BS
pos = 2'bxx;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ffb25526490>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_10:AL"	[def_var="['pos']",
		label="Leaf_10:AL"];
	"16:BS" -> "Leaf_10:AL"	[cond="[]",
		lineno=None];
	"12:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ffb25523250>",
		fillcolor=cadetblue,
		label="12:BS
pos = 2'b00;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ffb25523250>]",
		style=filled,
		typ=BlockingSubstitution];
	"12:BS" -> "Leaf_10:AL"	[cond="[]",
		lineno=None];
	"14:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7ffb25531590>",
		fillcolor=lightcyan,
		label="14:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"14:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ffb25531290>",
		fillcolor=cadetblue,
		label="14:BS
pos = 2'b10;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ffb25531290>]",
		style=filled,
		typ=BlockingSubstitution];
	"14:CA" -> "14:BS"	[cond="[]",
		lineno=None];
	"11:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7ffb2553dd50>",
		fillcolor=linen,
		label="11:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"11:CS" -> "14:CA"	[cond="['in']",
		label=in,
		lineno=11];
	"15:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7ffb2553d650>",
		fillcolor=lightcyan,
		label="15:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"11:CS" -> "15:CA"	[cond="['in']",
		label=in,
		lineno=11];
	"12:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7ffb255237d0>",
		fillcolor=lightcyan,
		label="12:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"11:CS" -> "12:CA"	[cond="['in']",
		label=in,
		lineno=11];
	"13:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7ffb254ceed0>",
		fillcolor=lightcyan,
		label="13:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"11:CS" -> "13:CA"	[cond="['in']",
		label=in,
		lineno=11];
	"16:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7ffb25526890>",
		fillcolor=lightcyan,
		label="16:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"11:CS" -> "16:CA"	[cond="['in']",
		label=in,
		lineno=11];
	"15:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ffb25526690>",
		fillcolor=cadetblue,
		label="15:BS
pos = 2'b11;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ffb25526690>]",
		style=filled,
		typ=BlockingSubstitution];
	"15:CA" -> "15:BS"	[cond="[]",
		lineno=None];
	"15:BS" -> "Leaf_10:AL"	[cond="[]",
		lineno=None];
	"14:BS" -> "Leaf_10:AL"	[cond="[]",
		lineno=None];
	"12:CA" -> "12:BS"	[cond="[]",
		lineno=None];
	"10:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7ffb254d6850>",
		clk_sens=False,
		fillcolor=gold,
		label="10:AL",
		sens="[]",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['in']"];
	"10:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7ffb25523150>",
		fillcolor=turquoise,
		label="10:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"10:AL" -> "10:BL"	[cond="[]",
		lineno=None];
	"13:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ffb254cec10>",
		fillcolor=cadetblue,
		label="13:BS
pos = 2'b01;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ffb254cec10>]",
		style=filled,
		typ=BlockingSubstitution];
	"13:CA" -> "13:BS"	[cond="[]",
		lineno=None];
	"13:BS" -> "Leaf_10:AL"	[cond="[]",
		lineno=None];
	"16:CA" -> "16:BS"	[cond="[]",
		lineno=None];
	"8:AS"	[ast="<pyverilog.vparser.ast.Assign object at 0x7ffb25537210>",
		def_var="['b']",
		fillcolor=deepskyblue,
		label="8:AS
b = 2'b01;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="[]"];
	"10:BL" -> "11:CS"	[cond="[]",
		lineno=None];
}
