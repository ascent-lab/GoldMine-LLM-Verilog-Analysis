strict digraph "compose( ,  )" {
	node [label="\N"];
	"12:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd89748ec10>",
		fillcolor=cadetblue,
		label="12:BS
pos = 2'b10;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd89748ec10>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_6:AL"	[def_var="['pos']",
		label="Leaf_6:AL"];
	"12:BS" -> "Leaf_6:AL"	[cond="[]",
		lineno=None];
	"14:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fd8974fd650>",
		fillcolor=lightcyan,
		label="14:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"14:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd8974e6690>",
		fillcolor=cadetblue,
		label="14:BS
pos = 2'b00;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd8974e6690>]",
		style=filled,
		typ=BlockingSubstitution];
	"14:CA" -> "14:BS"	[cond="[]",
		lineno=None];
	"18:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fd8974e6790>",
		fillcolor=turquoise,
		label="18:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"19:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7fd897506590>",
		fillcolor=linen,
		label="19:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"18:BL" -> "19:CS"	[cond="[]",
		lineno=None];
	"6:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7fd897575110>",
		clk_sens=False,
		fillcolor=gold,
		label="6:AL",
		sens="[]",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['in']"];
	"7:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fd897575e50>",
		fillcolor=turquoise,
		label="7:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"6:AL" -> "7:BL"	[cond="[]",
		lineno=None];
	"11:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd8974e3250>",
		fillcolor=cadetblue,
		label="11:BS
pos = 2'b01;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd8974e3250>]",
		style=filled,
		typ=BlockingSubstitution];
	"11:BS" -> "Leaf_6:AL"	[cond="[]",
		lineno=None];
	"22:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd897158c50>",
		fillcolor=cadetblue,
		label="22:BS
pos = 2'b01;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd897158c50>]",
		style=filled,
		typ=BlockingSubstitution];
	"22:BS" -> "Leaf_6:AL"	[cond="[]",
		lineno=None];
	"20:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd898d7d490>",
		fillcolor=cadetblue,
		label="20:BS
pos = 2'b10;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd898d7d490>]",
		style=filled,
		typ=BlockingSubstitution];
	"20:BS" -> "Leaf_6:AL"	[cond="[]",
		lineno=None];
	"21:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd897560690>",
		fillcolor=cadetblue,
		label="21:BS
pos = 2'b00;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd897560690>]",
		style=filled,
		typ=BlockingSubstitution];
	"21:BS" -> "Leaf_6:AL"	[cond="[]",
		lineno=None];
	"9:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fd897483690>",
		fillcolor=turquoise,
		label="9:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"10:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7fd8974f1690>",
		fillcolor=linen,
		label="10:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"9:BL" -> "10:CS"	[cond="[]",
		lineno=None];
	"23:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd8971588d0>",
		fillcolor=cadetblue,
		label="23:BS
pos = 2'b00;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd8971588d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"23:BS" -> "Leaf_6:AL"	[cond="[]",
		lineno=None];
	"13:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fd8974f1590>",
		fillcolor=lightcyan,
		label="13:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"13:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd8974f1290>",
		fillcolor=cadetblue,
		label="13:BS
pos = 2'b11;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd8974f1290>]",
		style=filled,
		typ=BlockingSubstitution];
	"13:CA" -> "13:BS"	[cond="[]",
		lineno=None];
	"10:CS" -> "14:CA"	[cond="['in']",
		label="in[1:0]",
		lineno=10];
	"10:CS" -> "13:CA"	[cond="['in']",
		label="in[1:0]",
		lineno=10];
	"11:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fd8974e3410>",
		fillcolor=lightcyan,
		label="11:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"10:CS" -> "11:CA"	[cond="['in']",
		label="in[1:0]",
		lineno=10];
	"12:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fd89748eed0>",
		fillcolor=lightcyan,
		label="12:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"10:CS" -> "12:CA"	[cond="['in']",
		label="in[1:0]",
		lineno=10];
	"11:CA" -> "11:BS"	[cond="[]",
		lineno=None];
	"22:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fd897560d50>",
		fillcolor=lightcyan,
		label="22:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"22:CA" -> "22:BS"	[cond="[]",
		lineno=None];
	"21:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fd8975609d0>",
		fillcolor=lightcyan,
		label="21:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"21:CA" -> "21:BS"	[cond="[]",
		lineno=None];
	"8:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd8974e6ed0>",
		fillcolor=springgreen,
		label="8:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"7:BL" -> "8:IF"	[cond="[]",
		lineno=None];
	"14:BS" -> "Leaf_6:AL"	[cond="[]",
		lineno=None];
	"12:CA" -> "12:BS"	[cond="[]",
		lineno=None];
	"20:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fd8974e62d0>",
		fillcolor=lightcyan,
		label="20:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"20:CA" -> "20:BS"	[cond="[]",
		lineno=None];
	"19:CS" -> "22:CA"	[cond="['in']",
		label="in[1:0]",
		lineno=19];
	"19:CS" -> "21:CA"	[cond="['in']",
		label="in[1:0]",
		lineno=19];
	"19:CS" -> "20:CA"	[cond="['in']",
		label="in[1:0]",
		lineno=19];
	"23:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fd897158b90>",
		fillcolor=lightcyan,
		label="23:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"19:CS" -> "23:CA"	[cond="['in']",
		label="in[1:0]",
		lineno=19];
	"23:CA" -> "23:BS"	[cond="[]",
		lineno=None];
	"13:BS" -> "Leaf_6:AL"	[cond="[]",
		lineno=None];
	"8:IF" -> "18:BL"	[cond="['in']",
		label="!(in[2])",
		lineno=8];
	"8:IF" -> "9:BL"	[cond="['in']",
		label="in[2]",
		lineno=8];
}
