strict digraph "compose( ,  )" {
	node [label="\N"];
	"24:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f960bae6650>",
		fillcolor=lightcyan,
		label="24:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"24:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f960fc45d10>",
		fillcolor=springgreen,
		label="24:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"24:CA" -> "24:IF"	[cond="[]",
		lineno=None];
	"30:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f960b758390>",
		fillcolor=lightcyan,
		label="30:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"30:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f960b758490>",
		fillcolor=cadetblue,
		label="30:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f960b758490>]",
		style=filled,
		typ=BlockingSubstitution];
	"30:CA" -> "30:BS"	[cond="[]",
		lineno=None];
	"27:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f960b758bd0>",
		fillcolor=springgreen,
		label="27:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"27:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f960b758d90>",
		fillcolor=cadetblue,
		label="27:BS
next_state = SB;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f960b758d90>]",
		style=filled,
		typ=BlockingSubstitution];
	"27:IF" -> "27:BS"	[cond="['a', 'b']",
		label="(a | b)",
		lineno=27];
	"29:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f960b758450>",
		fillcolor=springgreen,
		label="29:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"29:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f960b758710>",
		fillcolor=cadetblue,
		label="29:BS
next_state = SB;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f960b758710>]",
		style=filled,
		typ=BlockingSubstitution];
	"29:IF" -> "29:BS"	[cond="['a', 'b']",
		label="(a | b)",
		lineno=29];
	"28:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f960b758f10>",
		fillcolor=springgreen,
		label="28:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"28:IF" -> "29:IF"	[cond="['a', 'b']",
		label="!((a & b))",
		lineno=28];
	"28:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f960b758910>",
		fillcolor=cadetblue,
		label="28:BS
next_state = SAB;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f960b758910>]",
		style=filled,
		typ=BlockingSubstitution];
	"28:IF" -> "28:BS"	[cond="['a', 'b']",
		label="(a & b)",
		lineno=28];
	"22:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f960bae6850>",
		fillcolor=turquoise,
		label="22:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"23:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f960b7586d0>",
		fillcolor=linen,
		label="23:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"22:BL" -> "23:CS"	[cond="[]",
		lineno=None];
	"25:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f960bb60650>",
		fillcolor=springgreen,
		label="25:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"24:IF" -> "25:IF"	[cond="['a', 'b']",
		label="!((a & b))",
		lineno=24];
	"24:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f960d37f450>",
		fillcolor=cadetblue,
		label="24:BS
next_state = SA;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f960d37f450>]",
		style=filled,
		typ=BlockingSubstitution];
	"24:IF" -> "24:BS"	[cond="['a', 'b']",
		label="(a & b)",
		lineno=24];
	"Leaf_22:AL"	[def_var="['next_state']",
		label="Leaf_22:AL"];
	"28:BS" -> "Leaf_22:AL"	[cond="[]",
		lineno=None];
	"17:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f960ba8ebd0>",
		fillcolor=springgreen,
		label="17:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"18:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f960ba8e4d0>",
		fillcolor=firebrick,
		label="18:NS
cur_state <= IDLE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f960ba8e4d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"17:IF" -> "18:NS"	[cond="['reset']",
		label=reset,
		lineno=17];
	"20:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f960baf1250>",
		fillcolor=firebrick,
		label="20:NS
cur_state <= next_state;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f960baf1250>]",
		style=filled,
		typ=NonblockingSubstitution];
	"17:IF" -> "20:NS"	[cond="['reset']",
		label="!(reset)",
		lineno=17];
	"29:BS" -> "Leaf_22:AL"	[cond="[]",
		lineno=None];
	"25:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f960bb06150>",
		fillcolor=cadetblue,
		label="25:BS
next_state = SB;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f960bb06150>]",
		style=filled,
		typ=BlockingSubstitution];
	"25:BS" -> "Leaf_22:AL"	[cond="[]",
		lineno=None];
	"Leaf_16:AL"	[def_var="['cur_state']",
		label="Leaf_16:AL"];
	"18:NS" -> "Leaf_16:AL"	[cond="[]",
		lineno=None];
	"26:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f960b758cd0>",
		fillcolor=cadetblue,
		label="26:BS
next_state = SAB;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f960b758cd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"26:BS" -> "Leaf_22:AL"	[cond="[]",
		lineno=None];
	"16:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f960bae3890>",
		clk_sens=True,
		fillcolor=gold,
		label="16:AL",
		sens="['clk', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'next_state']"];
	"16:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f960bae3ed0>",
		fillcolor=turquoise,
		label="16:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"16:AL" -> "16:BL"	[cond="[]",
		lineno=None];
	"22:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f960bae6e90>",
		clk_sens=False,
		fillcolor=gold,
		label="22:AL",
		sens="['cur_state', 'a', 'b']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['a', 'cur_state', 'b']"];
	"Leaf_16:AL" -> "22:AL";
	"33:AS"	[ast="<pyverilog.vparser.ast.Assign object at 0x7f960b758b90>",
		def_var="['z']",
		fillcolor=deepskyblue,
		label="33:AS
z = cur_state == SAB;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['cur_state']"];
	"Leaf_16:AL" -> "33:AS";
	"Leaf_22:AL" -> "16:AL";
	"22:AL" -> "22:BL"	[cond="[]",
		lineno=None];
	"27:BS" -> "Leaf_22:AL"	[cond="[]",
		lineno=None];
	"25:IF" -> "25:BS"	[cond="['a', 'b']",
		label="(a | b)",
		lineno=25];
	"24:BS" -> "Leaf_22:AL"	[cond="[]",
		lineno=None];
	"30:BS" -> "Leaf_22:AL"	[cond="[]",
		lineno=None];
	"26:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f960b758c90>",
		fillcolor=springgreen,
		label="26:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"26:IF" -> "27:IF"	[cond="['a', 'b']",
		label="!((a & b))",
		lineno=26];
	"26:IF" -> "26:BS"	[cond="['a', 'b']",
		label="(a & b)",
		lineno=26];
	"23:CS" -> "24:CA"	[cond="['cur_state']",
		label=cur_state,
		lineno=23];
	"23:CS" -> "30:CA"	[cond="['cur_state']",
		label=cur_state,
		lineno=23];
	"26:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f960be5ee50>",
		fillcolor=lightcyan,
		label="26:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"23:CS" -> "26:CA"	[cond="['cur_state']",
		label=cur_state,
		lineno=23];
	"28:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f960b758d50>",
		fillcolor=lightcyan,
		label="28:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"23:CS" -> "28:CA"	[cond="['cur_state']",
		label=cur_state,
		lineno=23];
	"26:CA" -> "26:IF"	[cond="[]",
		lineno=None];
	"20:NS" -> "Leaf_16:AL"	[cond="[]",
		lineno=None];
	"28:CA" -> "28:IF"	[cond="[]",
		lineno=None];
	"16:BL" -> "17:IF"	[cond="[]",
		lineno=None];
}
