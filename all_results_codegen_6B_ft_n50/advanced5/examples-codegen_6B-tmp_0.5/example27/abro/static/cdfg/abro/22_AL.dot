strict digraph "" {
	node [label="\N"];
	"22:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f960b76e450>",
		clk_sens=False,
		fillcolor=gold,
		label="22:AL",
		sens="['cur_state', 'a', 'b']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['a', 'cur_state', 'b']"];
	"22:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f960b76e950>",
		fillcolor=turquoise,
		label="22:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"22:AL" -> "22:BL"	[cond="[]",
		lineno=None];
	"24:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f960b76ea50>",
		fillcolor=lightcyan,
		label="24:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"24:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f960b76ead0>",
		fillcolor=springgreen,
		label="24:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"24:CA" -> "24:IF"	[cond="[]",
		lineno=None];
	"23:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f960b76e990>",
		fillcolor=linen,
		label="23:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"23:CS" -> "24:CA"	[cond="['cur_state']",
		label=cur_state,
		lineno=23];
	"26:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f960b283050>",
		fillcolor=lightcyan,
		label="26:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"23:CS" -> "26:CA"	[cond="['cur_state']",
		label=cur_state,
		lineno=23];
	"30:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f960b283a50>",
		fillcolor=lightcyan,
		label="30:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"23:CS" -> "30:CA"	[cond="['cur_state']",
		label=cur_state,
		lineno=23];
	"28:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f960b283550>",
		fillcolor=lightcyan,
		label="28:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"23:CS" -> "28:CA"	[cond="['cur_state']",
		label=cur_state,
		lineno=23];
	"26:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f960b2830d0>",
		fillcolor=springgreen,
		label="26:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"26:CA" -> "26:IF"	[cond="[]",
		lineno=None];
	"30:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f960b283a90>",
		fillcolor=cadetblue,
		label="30:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f960b283a90>]",
		style=filled,
		typ=BlockingSubstitution];
	"30:CA" -> "30:BS"	[cond="[]",
		lineno=None];
	"27:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f960b283110>",
		fillcolor=springgreen,
		label="27:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"27:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f960b283150>",
		fillcolor=cadetblue,
		label="27:BS
next_state = SB;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f960b283150>]",
		style=filled,
		typ=BlockingSubstitution];
	"27:IF" -> "27:BS"	[cond="['a', 'b']",
		label="(a | b)",
		lineno=27];
	"29:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f960b283610>",
		fillcolor=springgreen,
		label="29:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"29:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f960b283650>",
		fillcolor=cadetblue,
		label="29:BS
next_state = SB;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f960b283650>]",
		style=filled,
		typ=BlockingSubstitution];
	"29:IF" -> "29:BS"	[cond="['a', 'b']",
		label="(a | b)",
		lineno=29];
	"28:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f960b2835d0>",
		fillcolor=springgreen,
		label="28:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"28:IF" -> "29:IF"	[cond="['a', 'b']",
		label="!((a & b))",
		lineno=28];
	"28:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f960b283850>",
		fillcolor=cadetblue,
		label="28:BS
next_state = SAB;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f960b283850>]",
		style=filled,
		typ=BlockingSubstitution];
	"28:IF" -> "28:BS"	[cond="['a', 'b']",
		label="(a & b)",
		lineno=28];
	"22:BL" -> "23:CS"	[cond="[]",
		lineno=None];
	"Leaf_22:AL"	[def_var="['next_state']",
		label="Leaf_22:AL"];
	"28:BS" -> "Leaf_22:AL"	[cond="[]",
		lineno=None];
	"27:BS" -> "Leaf_22:AL"	[cond="[]",
		lineno=None];
	"25:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f960b76ebd0>",
		fillcolor=cadetblue,
		label="25:BS
next_state = SB;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f960b76ebd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"25:BS" -> "Leaf_22:AL"	[cond="[]",
		lineno=None];
	"28:CA" -> "28:IF"	[cond="[]",
		lineno=None];
	"26:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f960b283350>",
		fillcolor=cadetblue,
		label="26:BS
next_state = SAB;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f960b283350>]",
		style=filled,
		typ=BlockingSubstitution];
	"26:BS" -> "Leaf_22:AL"	[cond="[]",
		lineno=None];
	"25:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f960b76eb50>",
		fillcolor=springgreen,
		label="25:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"25:IF" -> "25:BS"	[cond="['a', 'b']",
		label="(a | b)",
		lineno=25];
	"24:IF" -> "25:IF"	[cond="['a', 'b']",
		label="!((a & b))",
		lineno=24];
	"24:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f960b76ee10>",
		fillcolor=cadetblue,
		label="24:BS
next_state = SA;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f960b76ee10>]",
		style=filled,
		typ=BlockingSubstitution];
	"24:IF" -> "24:BS"	[cond="['a', 'b']",
		label="(a & b)",
		lineno=24];
	"30:BS" -> "Leaf_22:AL"	[cond="[]",
		lineno=None];
	"26:IF" -> "27:IF"	[cond="['a', 'b']",
		label="!((a & b))",
		lineno=26];
	"26:IF" -> "26:BS"	[cond="['a', 'b']",
		label="(a & b)",
		lineno=26];
	"24:BS" -> "Leaf_22:AL"	[cond="[]",
		lineno=None];
	"29:BS" -> "Leaf_22:AL"	[cond="[]",
		lineno=None];
}
