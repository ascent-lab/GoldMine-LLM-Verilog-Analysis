strict digraph "compose( ,  )" {
	node [label="\N"];
	"17:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7fabd05e7650>",
		clk_sens=True,
		fillcolor=gold,
		label="17:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['r_next']"];
	"17:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fabd05f2650>",
		fillcolor=turquoise,
		label="17:BL
r_reg <= r_next;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fabd05e7950>]",
		style=filled,
		typ=Block];
	"17:AL" -> "17:BL"	[cond="[]",
		lineno=None];
	"Leaf_17:AL"	[def_var="['r_reg']",
		label="Leaf_17:AL"];
	"17:BL" -> "Leaf_17:AL"	[cond="[]",
		lineno=None];
	"15:AS"	[ast="<pyverilog.vparser.ast.Assign object at 0x7fabd05e4210>",
		def_var="['r_next']",
		fillcolor=deepskyblue,
		label="15:AS
r_next = (reset)? { r_reg[0], r_reg[4:1] } : feedback_value ^ { r_reg[0], r_reg[4:1] } ^ r_reg[4:2];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['reset', 'r_reg', 'r_reg', 'feedback_value', 'r_reg', 'r_reg', 'r_reg']"];
	"15:AS" -> "17:AL";
	"20:AS"	[ast="<pyverilog.vparser.ast.Assign object at 0x7fabd05e7090>",
		def_var="['q']",
		fillcolor=deepskyblue,
		label="20:AS
q = r_reg;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['r_reg']"];
	"Leaf_17:AL" -> "15:AS";
	"Leaf_17:AL" -> "20:AS";
}
