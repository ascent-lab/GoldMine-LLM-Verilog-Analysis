strict digraph "compose( ,  )" {
	node [label="\N"];
	"17:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f570c1f1450>",
		clk_sens=True,
		fillcolor=gold,
		label="17:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'r_next']"];
	"18:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f570c1f1390>",
		fillcolor=turquoise,
		label="18:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"17:AL" -> "18:BL"	[cond="[]",
		lineno=None];
	"20:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f570c1f1250>",
		fillcolor=turquoise,
		label="20:BL
r_reg <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f570c1fdc50>]",
		style=filled,
		typ=Block];
	"Leaf_17:AL"	[def_var="['r_reg']",
		label="Leaf_17:AL"];
	"20:BL" -> "Leaf_17:AL"	[cond="[]",
		lineno=None];
	"16:AS"	[ast="<pyverilog.vparser.ast.Assign object at 0x7f570c1e3d10>",
		def_var="['r_next']",
		fillcolor=deepskyblue,
		label="16:AS
r_next = (reset)? 1 : 
(feedback_value)? { r_reg[4:0], q[4] } : r_reg;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['reset', 'feedback_value', 'r_reg', 'q', 'r_reg']"];
	"16:AS" -> "17:AL";
	"24:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f570c1e6950>",
		fillcolor=turquoise,
		label="24:BL
r_reg <= r_next;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f570c1e6ad0>]",
		style=filled,
		typ=Block];
	"24:BL" -> "Leaf_17:AL"	[cond="[]",
		lineno=None];
	"19:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f570c1e6650>",
		fillcolor=springgreen,
		label="19:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"19:IF" -> "20:BL"	[cond="['reset']",
		label=reset,
		lineno=19];
	"19:IF" -> "24:BL"	[cond="['reset']",
		label="!(reset)",
		lineno=19];
	"18:BL" -> "19:IF"	[cond="[]",
		lineno=None];
	"Leaf_17:AL" -> "16:AS";
}
