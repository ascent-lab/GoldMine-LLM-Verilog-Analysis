strict digraph "compose( ,  )" {
	node [label="\N"];
	"16:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f97d3963210>",
		fillcolor=springgreen,
		label="16:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"19:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f97d390ebd0>",
		fillcolor=firebrick,
		label="19:NS
r_reg <= r_next;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f97d390ebd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"16:IF" -> "19:NS"	[cond="['reset']",
		label="!(reset)",
		lineno=16];
	"17:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f97d3963890>",
		fillcolor=firebrick,
		label="17:NS
r_reg <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f97d3963890>]",
		style=filled,
		typ=NonblockingSubstitution];
	"16:IF" -> "17:NS"	[cond="['reset']",
		label=reset,
		lineno=16];
	"15:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f97d3963d10>",
		clk_sens=True,
		fillcolor=gold,
		label="15:AL",
		sens="['clk', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'r_next']"];
	"15:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f97d39633d0>",
		fillcolor=turquoise,
		label="15:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"15:AL" -> "15:BL"	[cond="[]",
		lineno=None];
	"15:BL" -> "16:IF"	[cond="[]",
		lineno=None];
	"Leaf_15:AL"	[def_var="['r_reg']",
		label="Leaf_15:AL"];
	"21:AS"	[ast="<pyverilog.vparser.ast.Assign object at 0x7f97d3971550>",
		def_var="['q']",
		fillcolor=deepskyblue,
		label="21:AS
q = r_reg;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['r_reg']"];
	"Leaf_15:AL" -> "21:AS";
	"22:AS"	[ast="<pyverilog.vparser.ast.Assign object at 0x7f97d397d4d0>",
		def_var="['r_next']",
		fillcolor=deepskyblue,
		label="22:AS
r_next = { r_reg[3:0], feedback_value };",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['r_reg', 'feedback_value']"];
	"Leaf_15:AL" -> "22:AS";
	"19:NS" -> "Leaf_15:AL"	[cond="[]",
		lineno=None];
	"17:NS" -> "Leaf_15:AL"	[cond="[]",
		lineno=None];
	"22:AS" -> "15:AL";
}
