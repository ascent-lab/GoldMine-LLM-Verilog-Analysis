strict digraph "compose( ,  )" {
	node [label="\N"];
	"14:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f5a766e3210>",
		fillcolor=turquoise,
		label="14:BL
out <= 8'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5a7668e550>]",
		style=filled,
		typ=Block];
	"Leaf_11:AL"	[def_var="['out']",
		label="Leaf_11:AL"];
	"14:BL" -> "Leaf_11:AL"	[cond="[]",
		lineno=None];
	"20:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f5a766fd6d0>",
		fillcolor=turquoise,
		label="20:BL
out <= data;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5a766fd610>]",
		style=filled,
		typ=Block];
	"20:BL" -> "Leaf_11:AL"	[cond="[]",
		lineno=None];
	"11:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f5a766fdd10>",
		clk_sens=True,
		fillcolor=gold,
		label="11:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'load', 'amount', 'data', 'out']"];
	"Leaf_11:AL" -> "11:AL";
	"30:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f5a766e6550>",
		fillcolor=turquoise,
		label="30:BL
out <= { out[6:0], out[7] };",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5a76760890>]",
		style=filled,
		typ=Block];
	"30:BL" -> "Leaf_11:AL"	[cond="[]",
		lineno=None];
	"24:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f5a766e6650>",
		fillcolor=turquoise,
		label="24:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"25:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5a766e6290>",
		fillcolor=springgreen,
		label="25:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"24:BL" -> "25:IF"	[cond="[]",
		lineno=None];
	"19:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5a766fd4d0>",
		fillcolor=springgreen,
		label="19:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"19:IF" -> "20:BL"	[cond="['load']",
		label=load,
		lineno=19];
	"19:IF" -> "24:BL"	[cond="['load']",
		label="!(load)",
		lineno=19];
	"18:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f5a7668ebd0>",
		fillcolor=turquoise,
		label="18:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"18:BL" -> "19:IF"	[cond="[]",
		lineno=None];
	"12:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f5a766e3e10>",
		fillcolor=turquoise,
		label="12:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"13:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f5a7668e290>",
		fillcolor=springgreen,
		label="13:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"12:BL" -> "13:IF"	[cond="[]",
		lineno=None];
	"25:IF" -> "30:BL"	[cond="['amount']",
		label="!((amount == 0))",
		lineno=25];
	"26:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f5a766e6090>",
		fillcolor=turquoise,
		label="26:BL
out <= out;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f5a766e6f50>]",
		style=filled,
		typ=Block];
	"25:IF" -> "26:BL"	[cond="['amount']",
		label="(amount == 0)",
		lineno=25];
	"13:IF" -> "14:BL"	[cond="['reset']",
		label=reset,
		lineno=13];
	"13:IF" -> "18:BL"	[cond="['reset']",
		label="!(reset)",
		lineno=13];
	"26:BL" -> "Leaf_11:AL"	[cond="[]",
		lineno=None];
	"11:AL" -> "12:BL"	[cond="[]",
		lineno=None];
}
