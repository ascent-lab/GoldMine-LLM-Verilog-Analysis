strict digraph "" {
	node [label="\N"];
	"37:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fa5c1cf3790>",
		fillcolor=cadetblue,
		label="37:BS
next_state = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fa5c1cf3790>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_28:AL"	[def_var="['next_state']",
		label="Leaf_28:AL"];
	"37:BS" -> "Leaf_28:AL"	[cond="[]",
		lineno=None];
	"30:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fa5c1cf3950>",
		fillcolor=lightcyan,
		label="30:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"30:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7fa5c1cf39d0>",
		fillcolor=springgreen,
		label="30:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"30:CA" -> "30:IF"	[cond="[]",
		lineno=None];
	"29:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7fa5c1cf3f90>",
		fillcolor=linen,
		label="29:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"29:CS" -> "30:CA"	[cond="['present_state']",
		label=present_state,
		lineno=29];
	"34:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fa5c1cf3f10>",
		fillcolor=lightcyan,
		label="34:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"29:CS" -> "34:CA"	[cond="['present_state']",
		label=present_state,
		lineno=29];
	"31:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fa5c1cf3bd0>",
		fillcolor=cadetblue,
		label="31:BS
next_state = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fa5c1cf3bd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"30:IF" -> "31:BS"	[cond="['in']",
		label=in,
		lineno=30];
	"33:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fa5c1cf3a50>",
		fillcolor=cadetblue,
		label="33:BS
next_state = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fa5c1cf3a50>]",
		style=filled,
		typ=BlockingSubstitution];
	"30:IF" -> "33:BS"	[cond="['in']",
		label="!(in)",
		lineno=30];
	"34:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7fa5c1cf3d50>",
		fillcolor=springgreen,
		label="34:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"34:CA" -> "34:IF"	[cond="[]",
		lineno=None];
	"34:IF" -> "37:BS"	[cond="['in']",
		label="!(in)",
		lineno=34];
	"35:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fa5c1cf3d90>",
		fillcolor=cadetblue,
		label="35:BS
next_state = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fa5c1cf3d90>]",
		style=filled,
		typ=BlockingSubstitution];
	"34:IF" -> "35:BS"	[cond="['in']",
		label=in,
		lineno=34];
	"31:BS" -> "Leaf_28:AL"	[cond="[]",
		lineno=None];
	"33:BS" -> "Leaf_28:AL"	[cond="[]",
		lineno=None];
	"28:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7fa5c1cf7110>",
		clk_sens=False,
		fillcolor=gold,
		label="28:AL",
		sens="[]",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['present_state', 'in']"];
	"28:AL" -> "29:CS"	[cond="[]",
		lineno=None];
	"35:BS" -> "Leaf_28:AL"	[cond="[]",
		lineno=None];
}
