strict digraph "compose( ,  )" {
	node [label="\N"];
	"14:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fa7812cecd0>",
		fillcolor=turquoise,
		label="14:BL
present_state <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fa781331550>]",
		style=filled,
		typ=Block];
	"Leaf_13:AL"	[def_var="['present_state']",
		label="Leaf_13:AL"];
	"14:BL" -> "Leaf_13:AL"	[cond="[]",
		lineno=None];
	"Leaf_21:AL"	[def_var="['next_state']",
		label="Leaf_21:AL"];
	"13:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7fa781323210>",
		clk_sens=True,
		fillcolor=gold,
		label="13:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'next_state']"];
	"Leaf_21:AL" -> "13:AL";
	"12:AS"	[ast="<pyverilog.vparser.ast.Assign object at 0x7fa781323790>",
		def_var="['out']",
		fillcolor=deepskyblue,
		label="12:AS
out = (present_state == 0)? 1'b1 : 1'b0;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['present_state']"];
	"17:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fa78133d610>",
		fillcolor=turquoise,
		label="17:BL
present_state <= next_state;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fa78133d4d0>]",
		style=filled,
		typ=Block];
	"17:BL" -> "Leaf_13:AL"	[cond="[]",
		lineno=None];
	"21:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7fa781346550>",
		clk_sens=False,
		fillcolor=gold,
		label="21:AL",
		sens="['present_state', 'in']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['present_state', 'in']"];
	"21:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fa781326350>",
		fillcolor=turquoise,
		label="21:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"21:AL" -> "21:BL"	[cond="[]",
		lineno=None];
	"13:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fa7812cee90>",
		fillcolor=turquoise,
		label="13:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"14:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7fa781331390>",
		fillcolor=springgreen,
		label="14:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"13:BL" -> "14:IF"	[cond="[]",
		lineno=None];
	"Leaf_13:AL" -> "12:AS";
	"Leaf_13:AL" -> "21:AL";
	"22:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7fa7813aad90>",
		fillcolor=linen,
		label="22:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"26:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fa7813aa110>",
		fillcolor=lightcyan,
		label="26:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"22:CS" -> "26:CA"	[cond="['present_state']",
		label=present_state,
		lineno=22];
	"23:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fa781326150>",
		fillcolor=lightcyan,
		label="23:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"22:CS" -> "23:CA"	[cond="['present_state']",
		label=present_state,
		lineno=22];
	"21:BL" -> "22:CS"	[cond="[]",
		lineno=None];
	"26:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fa781346150>",
		fillcolor=turquoise,
		label="26:BL
next_state = in;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fa781346510>]",
		style=filled,
		typ=Block];
	"26:CA" -> "26:BL"	[cond="[]",
		lineno=None];
	"13:AL" -> "13:BL"	[cond="[]",
		lineno=None];
	"26:BL" -> "Leaf_21:AL"	[cond="[]",
		lineno=None];
	"14:IF" -> "14:BL"	[cond="['reset']",
		label=reset,
		lineno=14];
	"14:IF" -> "17:BL"	[cond="['reset']",
		label="!(reset)",
		lineno=14];
	"23:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fa782bbf450>",
		fillcolor=turquoise,
		label="23:BL
next_state = in;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fa78169ee50>]",
		style=filled,
		typ=Block];
	"23:CA" -> "23:BL"	[cond="[]",
		lineno=None];
	"23:BL" -> "Leaf_21:AL"	[cond="[]",
		lineno=None];
}
