strict digraph "compose( ,  )" {
	node [label="\N"];
	"21:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fd28627d610>",
		fillcolor=turquoise,
		label="21:BL
present_state <= next_state;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd28627d4d0>]",
		style=filled,
		typ=Block];
	"Leaf_14:AL"	[def_var="['present_state']",
		label="Leaf_14:AL"];
	"21:BL" -> "Leaf_14:AL"	[cond="[]",
		lineno=None];
	"15:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fd285fcee90>",
		fillcolor=turquoise,
		label="15:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"16:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd286271150>",
		fillcolor=springgreen,
		label="16:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"15:BL" -> "16:IF"	[cond="[]",
		lineno=None];
	"42:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd285ed8d50>",
		fillcolor=springgreen,
		label="42:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"47:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fd285ed8910>",
		fillcolor=turquoise,
		label="47:BL
next_state <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd285ed89d0>]",
		style=filled,
		typ=Block];
	"42:IF" -> "47:BL"	[cond="['in']",
		label="!((in == 1))",
		lineno=42];
	"43:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fd285ed8d90>",
		fillcolor=turquoise,
		label="43:BL
next_state <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd285ed8890>]",
		style=filled,
		typ=Block];
	"42:IF" -> "43:BL"	[cond="['in']",
		label="(in == 1)",
		lineno=42];
	"17:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fd285fcecd0>",
		fillcolor=turquoise,
		label="17:BL
present_state <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd286271550>]",
		style=filled,
		typ=Block];
	"17:BL" -> "Leaf_14:AL"	[cond="[]",
		lineno=None];
	"30:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fd286266150>",
		fillcolor=turquoise,
		label="30:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"31:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd2862e0890>",
		fillcolor=springgreen,
		label="31:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"30:BL" -> "31:IF"	[cond="[]",
		lineno=None];
	"14:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7fd286263890>",
		clk_sens=True,
		fillcolor=gold,
		label="14:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'next_state']"];
	"14:AL" -> "15:BL"	[cond="[]",
		lineno=None];
	"Leaf_26:AL"	[def_var="['next_state']",
		label="Leaf_26:AL"];
	"47:BL" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"27:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fd286266350>",
		fillcolor=turquoise,
		label="27:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"28:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7fd285ed8cd0>",
		fillcolor=linen,
		label="28:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"27:BL" -> "28:CS"	[cond="[]",
		lineno=None];
	"41:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fd285ed83d0>",
		fillcolor=turquoise,
		label="41:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"41:BL" -> "42:IF"	[cond="[]",
		lineno=None];
	"40:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fd285ed8d10>",
		fillcolor=lightcyan,
		label="40:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"28:CS" -> "40:CA"	[cond="['present_state']",
		label=present_state,
		lineno=28];
	"29:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fd286266550>",
		fillcolor=lightcyan,
		label="29:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"28:CS" -> "29:CA"	[cond="['present_state']",
		label=present_state,
		lineno=28];
	"16:IF" -> "21:BL"	[cond="['reset']",
		label="!(reset)",
		lineno=16];
	"16:IF" -> "17:BL"	[cond="['reset']",
		label=reset,
		lineno=16];
	"26:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7fd286266d10>",
		clk_sens=False,
		fillcolor=gold,
		label="26:AL",
		sens="['present_state', 'in']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['present_state', 'in']"];
	"26:AL" -> "27:BL"	[cond="[]",
		lineno=None];
	"Leaf_26:AL" -> "14:AL";
	"36:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fd285ed8b10>",
		fillcolor=turquoise,
		label="36:BL
next_state <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd285ed8a10>]",
		style=filled,
		typ=Block];
	"36:BL" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"31:IF" -> "36:BL"	[cond="['in']",
		label="!((in == 1))",
		lineno=31];
	"32:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fd2862e0650>",
		fillcolor=turquoise,
		label="32:BL
next_state <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd2862e0a50>]",
		style=filled,
		typ=Block];
	"31:IF" -> "32:BL"	[cond="['in']",
		label="(in == 1)",
		lineno=31];
	"40:CA" -> "41:BL"	[cond="[]",
		lineno=None];
	"12:AS"	[ast="<pyverilog.vparser.ast.Assign object at 0x7fd286263790>",
		def_var="['out']",
		fillcolor=deepskyblue,
		label="12:AS
out = (present_state == 1)? 1 : 0;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['present_state']"];
	"32:BL" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"29:CA" -> "30:BL"	[cond="[]",
		lineno=None];
	"Leaf_14:AL" -> "26:AL";
	"Leaf_14:AL" -> "12:AS";
	"43:BL" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
}
