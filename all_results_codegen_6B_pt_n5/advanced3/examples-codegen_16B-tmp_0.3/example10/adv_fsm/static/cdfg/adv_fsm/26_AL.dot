strict digraph "" {
	node [label="\N"];
	"42:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fef48aac250>",
		fillcolor=cadetblue,
		label="42:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fef48aac250>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_26:AL"	[def_var="['next_state']",
		label="Leaf_26:AL"];
	"42:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"37:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fef4836d1d0>",
		fillcolor=lightcyan,
		label="37:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"37:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7fef4836d250>",
		fillcolor=springgreen,
		label="37:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"37:CA" -> "37:IF"	[cond="[]",
		lineno=None];
	"36:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fef48aac6d0>",
		fillcolor=cadetblue,
		label="36:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fef48aac6d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"36:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"26:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7fef48aac850>",
		clk_sens=False,
		fillcolor=gold,
		label="26:AL",
		sens="['x', 'present_state']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['x', 'present_state']"];
	"27:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fef48aaca10>",
		fillcolor=turquoise,
		label="27:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"26:AL" -> "27:BL"	[cond="[]",
		lineno=None];
	"29:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7fef48aacb90>",
		fillcolor=springgreen,
		label="29:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"30:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fef48aacd90>",
		fillcolor=cadetblue,
		label="30:BS
next_state = S1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fef48aacd90>]",
		style=filled,
		typ=BlockingSubstitution];
	"29:IF" -> "30:BS"	[cond="['x']",
		label=x,
		lineno=29];
	"32:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fef48aacc10>",
		fillcolor=cadetblue,
		label="32:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fef48aacc10>]",
		style=filled,
		typ=BlockingSubstitution];
	"29:IF" -> "32:BS"	[cond="['x']",
		label="!(x)",
		lineno=29];
	"38:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fef4836d3d0>",
		fillcolor=cadetblue,
		label="38:BS
next_state = S101;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fef4836d3d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"37:IF" -> "38:BS"	[cond="['x']",
		label=x,
		lineno=37];
	"40:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fef4836d290>",
		fillcolor=cadetblue,
		label="40:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fef4836d290>]",
		style=filled,
		typ=BlockingSubstitution];
	"37:IF" -> "40:BS"	[cond="['x']",
		label="!(x)",
		lineno=37];
	"33:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fef48aacf10>",
		fillcolor=lightcyan,
		label="33:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"33:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7fef48aacf90>",
		fillcolor=springgreen,
		label="33:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"33:CA" -> "33:IF"	[cond="[]",
		lineno=None];
	"33:IF" -> "36:BS"	[cond="['x']",
		label="!((~x))",
		lineno=33];
	"34:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fef48aacfd0>",
		fillcolor=cadetblue,
		label="34:BS
next_state = S10;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fef48aacfd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"33:IF" -> "34:BS"	[cond="['x']",
		label="(~x)",
		lineno=33];
	"38:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"28:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7fef48aaca50>",
		fillcolor=linen,
		label="28:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"28:CS" -> "37:CA"	[cond="['present_state']",
		label=present_state,
		lineno=28];
	"28:CS" -> "33:CA"	[cond="['present_state']",
		label=present_state,
		lineno=28];
	"29:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fef48aacb10>",
		fillcolor=lightcyan,
		label="29:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"28:CS" -> "29:CA"	[cond="['present_state']",
		label=present_state,
		lineno=28];
	"41:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fef4836d550>",
		fillcolor=lightcyan,
		label="41:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"28:CS" -> "41:CA"	[cond="['present_state']",
		label=present_state,
		lineno=28];
	"42:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fef4836d710>",
		fillcolor=lightcyan,
		label="42:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"28:CS" -> "42:CA"	[cond="['present_state']",
		label=present_state,
		lineno=28];
	"27:BL" -> "28:CS"	[cond="[]",
		lineno=None];
	"40:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"30:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"29:CA" -> "29:IF"	[cond="[]",
		lineno=None];
	"34:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"41:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fef4836d5d0>",
		fillcolor=cadetblue,
		label="41:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fef4836d5d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"41:CA" -> "41:BS"	[cond="[]",
		lineno=None];
	"32:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"42:CA" -> "42:BS"	[cond="[]",
		lineno=None];
	"41:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
}
