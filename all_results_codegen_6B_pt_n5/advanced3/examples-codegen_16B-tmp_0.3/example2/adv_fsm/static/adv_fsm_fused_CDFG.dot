strict digraph "compose( ,  )" {
	node [label="\N"];
	"23:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe5e45b2650>",
		fillcolor=firebrick,
		label="23:NS
present_state <= next_state;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe5e45b2650>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_18:AL"	[def_var="['present_state']",
		label="Leaf_18:AL"];
	"23:NS" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"60:AS"	[ast="<pyverilog.vparser.ast.Assign object at 0x7fe5e4458850>",
		def_var="['z']",
		fillcolor=deepskyblue,
		label="60:AS
z = present_state == S101;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['present_state']"];
	"Leaf_18:AL" -> "60:AS";
	"25:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7fe5e45a7650>",
		clk_sens=False,
		fillcolor=gold,
		label="25:AL",
		sens="['present_state', 'x']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['x', 'present_state']"];
	"Leaf_18:AL" -> "25:AL";
	"42:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fe5e4458cd0>",
		fillcolor=lightcyan,
		label="42:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"43:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fe5e4458310>",
		fillcolor=turquoise,
		label="43:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"42:CA" -> "43:BL"	[cond="[]",
		lineno=None];
	"38:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe5e60e8ad0>",
		fillcolor=cadetblue,
		label="38:BS
next_state = S10;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe5e60e8ad0>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_25:AL"	[def_var="['next_state']",
		label="Leaf_25:AL"];
	"38:BS" -> "Leaf_25:AL"	[cond="[]",
		lineno=None];
	"27:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7fe5e4458550>",
		fillcolor=linen,
		label="27:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"27:CS" -> "42:CA"	[cond="['present_state']",
		label=present_state,
		lineno=27];
	"53:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fe5e4458450>",
		fillcolor=lightcyan,
		label="53:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"27:CS" -> "53:CA"	[cond="['present_state']",
		label=present_state,
		lineno=27];
	"35:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fe5e486ad90>",
		fillcolor=lightcyan,
		label="35:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"27:CS" -> "35:CA"	[cond="['present_state']",
		label=present_state,
		lineno=27];
	"49:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fe5e4458fd0>",
		fillcolor=lightcyan,
		label="49:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"27:CS" -> "49:CA"	[cond="['present_state']",
		label=present_state,
		lineno=27];
	"28:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fe5e45a7ad0>",
		fillcolor=lightcyan,
		label="28:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"27:CS" -> "28:CA"	[cond="['present_state']",
		label=present_state,
		lineno=27];
	"54:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fe5e4458710>",
		fillcolor=turquoise,
		label="54:BL
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe5e4458490>]",
		style=filled,
		typ=Block];
	"54:BL" -> "Leaf_25:AL"	[cond="[]",
		lineno=None];
	"45:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe5e4458990>",
		fillcolor=cadetblue,
		label="45:BS
next_state = S101;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe5e4458990>]",
		style=filled,
		typ=BlockingSubstitution];
	"45:BS" -> "Leaf_25:AL"	[cond="[]",
		lineno=None];
	"31:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe5e49c1610>",
		fillcolor=cadetblue,
		label="31:BS
next_state = S1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe5e49c1610>]",
		style=filled,
		typ=BlockingSubstitution];
	"31:BS" -> "Leaf_25:AL"	[cond="[]",
		lineno=None];
	"53:CA" -> "54:BL"	[cond="[]",
		lineno=None];
	"30:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe5e45a7550>",
		fillcolor=springgreen,
		label="30:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"30:IF" -> "31:BS"	[cond="['x']",
		label=x,
		lineno=30];
	"33:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe5e486a390>",
		fillcolor=cadetblue,
		label="33:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe5e486a390>]",
		style=filled,
		typ=BlockingSubstitution];
	"30:IF" -> "33:BS"	[cond="['x']",
		label="!(x)",
		lineno=30];
	"19:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fe5e45a4210>",
		fillcolor=turquoise,
		label="19:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"20:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe5e45b2150>",
		fillcolor=springgreen,
		label="20:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"19:BL" -> "20:IF"	[cond="[]",
		lineno=None];
	"26:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fe5e45a7e90>",
		fillcolor=turquoise,
		label="26:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"26:BL" -> "27:CS"	[cond="[]",
		lineno=None];
	"44:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe5e44584d0>",
		fillcolor=springgreen,
		label="44:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"44:IF" -> "45:BS"	[cond="['x']",
		label=x,
		lineno=44];
	"47:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe5e4458950>",
		fillcolor=cadetblue,
		label="47:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe5e4458950>]",
		style=filled,
		typ=BlockingSubstitution];
	"44:IF" -> "47:BS"	[cond="['x']",
		label="!(x)",
		lineno=44];
	"36:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fe5e486a250>",
		fillcolor=turquoise,
		label="36:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"35:CA" -> "36:BL"	[cond="[]",
		lineno=None];
	"20:IF" -> "23:NS"	[cond="['reset']",
		label="!(reset)",
		lineno=20];
	"21:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe5e454ecd0>",
		fillcolor=firebrick,
		label="21:NS
present_state <= IDLE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fe5e454ecd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"20:IF" -> "21:NS"	[cond="['reset']",
		label=reset,
		lineno=20];
	"37:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7fe5e45c6550>",
		fillcolor=springgreen,
		label="37:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"36:BL" -> "37:IF"	[cond="[]",
		lineno=None];
	"33:BS" -> "Leaf_25:AL"	[cond="[]",
		lineno=None];
	"40:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe5e4458d10>",
		fillcolor=cadetblue,
		label="40:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe5e4458d10>]",
		style=filled,
		typ=BlockingSubstitution];
	"40:BS" -> "Leaf_25:AL"	[cond="[]",
		lineno=None];
	"37:IF" -> "38:BS"	[cond="['x']",
		label="(~x)",
		lineno=37];
	"37:IF" -> "40:BS"	[cond="['x']",
		label="!((~x))",
		lineno=37];
	"47:BS" -> "Leaf_25:AL"	[cond="[]",
		lineno=None];
	"18:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7fe5e45a4e10>",
		clk_sens=True,
		fillcolor=gold,
		label="18:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'next_state']"];
	"18:AL" -> "19:BL"	[cond="[]",
		lineno=None];
	"25:AL" -> "26:BL"	[cond="[]",
		lineno=None];
	"Leaf_25:AL" -> "18:AL";
	"29:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fe5e45a7150>",
		fillcolor=turquoise,
		label="29:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"29:BL" -> "30:IF"	[cond="[]",
		lineno=None];
	"43:BL" -> "44:IF"	[cond="[]",
		lineno=None];
	"50:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fe5e4458a90>",
		fillcolor=turquoise,
		label="50:BL
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fe5e4458ad0>]",
		style=filled,
		typ=Block];
	"49:CA" -> "50:BL"	[cond="[]",
		lineno=None];
	"50:BL" -> "Leaf_25:AL"	[cond="[]",
		lineno=None];
	"28:CA" -> "29:BL"	[cond="[]",
		lineno=None];
	"21:NS" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
}
