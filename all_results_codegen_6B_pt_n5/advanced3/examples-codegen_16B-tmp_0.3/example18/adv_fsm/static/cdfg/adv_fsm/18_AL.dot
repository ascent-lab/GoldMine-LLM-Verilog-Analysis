strict digraph "" {
	node [label="\N"];
	"23:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1b9edb16d0>",
		fillcolor=springgreen,
		label="23:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"24:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f1b9edb1810>",
		fillcolor=turquoise,
		label="24:BL
next_state = S10;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1b9edb1850>]",
		style=filled,
		typ=Block];
	"23:IF" -> "24:BL"	[cond="['x']",
		label="!((~x))",
		lineno=23];
	"23:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f1b9edb1a10>",
		fillcolor=turquoise,
		label="23:BL
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1b9edb1a50>]",
		style=filled,
		typ=Block];
	"23:IF" -> "23:BL"	[cond="['x']",
		label="(~x)",
		lineno=23];
	"19:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f1b9edb1c10>",
		fillcolor=turquoise,
		label="19:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"20:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f1b9edb1c50>",
		fillcolor=linen,
		label="20:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"19:BL" -> "20:CS"	[cond="[]",
		lineno=None];
	"21:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f1b9e89c050>",
		fillcolor=turquoise,
		label="21:BL
next_state = S1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1b9e89c090>]",
		style=filled,
		typ=Block];
	"Leaf_18:AL"	[def_var="['next_state']",
		label="Leaf_18:AL"];
	"21:BL" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"27:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1b9e89c850>",
		fillcolor=springgreen,
		label="27:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"27:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f1b9e89ca90>",
		fillcolor=turquoise,
		label="27:BL
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1b9e89cad0>]",
		style=filled,
		typ=Block];
	"27:IF" -> "27:BL"	[cond="['x']",
		label="(~x)",
		lineno=27];
	"28:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f1b9e89c890>",
		fillcolor=turquoise,
		label="28:BL
next_state = S1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1b9e89c8d0>]",
		style=filled,
		typ=Block];
	"27:IF" -> "28:BL"	[cond="['x']",
		label="!((~x))",
		lineno=27];
	"25:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f1b9e89c310>",
		fillcolor=lightcyan,
		label="25:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"20:CS" -> "25:CA"	[cond="['present_state']",
		label=present_state,
		lineno=20];
	"21:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f1b9edb1d50>",
		fillcolor=lightcyan,
		label="21:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"20:CS" -> "21:CA"	[cond="['present_state']",
		label=present_state,
		lineno=20];
	"23:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f1b9e89c250>",
		fillcolor=lightcyan,
		label="23:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"20:CS" -> "23:CA"	[cond="['present_state']",
		label=present_state,
		lineno=20];
	"27:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f1b9e89c7d0>",
		fillcolor=lightcyan,
		label="27:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"20:CS" -> "27:CA"	[cond="['present_state']",
		label=present_state,
		lineno=20];
	"22:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f1b9edb1e10>",
		fillcolor=turquoise,
		label="22:BL
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1b9edb1e50>]",
		style=filled,
		typ=Block];
	"22:BL" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"25:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1b9e89c390>",
		fillcolor=springgreen,
		label="25:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"25:CA" -> "25:IF"	[cond="[]",
		lineno=None];
	"24:BL" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"26:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f1b9e89c3d0>",
		fillcolor=turquoise,
		label="26:BL
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1b9e89c410>]",
		style=filled,
		typ=Block];
	"26:BL" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"21:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f1b9edb1dd0>",
		fillcolor=springgreen,
		label="21:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"21:CA" -> "21:IF"	[cond="[]",
		lineno=None];
	"21:IF" -> "21:BL"	[cond="['x']",
		label=x,
		lineno=21];
	"21:IF" -> "22:BL"	[cond="['x']",
		label="!(x)",
		lineno=21];
	"23:CA" -> "23:IF"	[cond="[]",
		lineno=None];
	"27:BL" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"25:IF" -> "26:BL"	[cond="['x']",
		label="!(x)",
		lineno=25];
	"25:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f1b9e89c5d0>",
		fillcolor=turquoise,
		label="25:BL
next_state = S101;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f1b9e89c610>]",
		style=filled,
		typ=Block];
	"25:IF" -> "25:BL"	[cond="['x']",
		label=x,
		lineno=25];
	"25:BL" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"18:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f1b9e89cd50>",
		clk_sens=False,
		fillcolor=gold,
		label="18:AL",
		sens="['present_state', 'x']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['x', 'present_state']"];
	"18:AL" -> "19:BL"	[cond="[]",
		lineno=None];
	"27:CA" -> "27:IF"	[cond="[]",
		lineno=None];
	"23:BL" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"28:BL" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
}
