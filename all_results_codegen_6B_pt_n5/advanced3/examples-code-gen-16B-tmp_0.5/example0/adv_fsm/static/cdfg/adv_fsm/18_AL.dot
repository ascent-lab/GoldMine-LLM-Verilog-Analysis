strict digraph "" {
	node [label="\N"];
	"28:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7a31bac190>",
		fillcolor=cadetblue,
		label="28:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7a31bac190>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_18:AL"	[def_var="['next_state']",
		label="Leaf_18:AL"];
	"28:BS" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"24:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f7a31bac450>",
		fillcolor=lightcyan,
		label="24:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"24:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7a31bac4d0>",
		fillcolor=springgreen,
		label="24:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"24:CA" -> "24:IF"	[cond="[]",
		lineno=None];
	"19:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f7a31bac890>",
		fillcolor=turquoise,
		label="19:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"20:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f7a31bac8d0>",
		fillcolor=linen,
		label="20:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"19:BL" -> "20:CS"	[cond="[]",
		lineno=None];
	"30:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f7a31bacfd0>",
		fillcolor=lightcyan,
		label="30:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"30:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7a316e5090>",
		fillcolor=springgreen,
		label="30:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"30:CA" -> "30:IF"	[cond="[]",
		lineno=None];
	"27:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7a31bacdd0>",
		fillcolor=springgreen,
		label="27:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"27:IF" -> "28:BS"	[cond="['x']",
		label="!(x)",
		lineno=27];
	"27:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7a31bace10>",
		fillcolor=cadetblue,
		label="27:BS
next_state = S101;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7a31bace10>]",
		style=filled,
		typ=BlockingSubstitution];
	"27:IF" -> "27:BS"	[cond="['x']",
		label=x,
		lineno=27];
	"20:CS" -> "24:CA"	[cond="['present_state']",
		label=present_state,
		lineno=20];
	"20:CS" -> "30:CA"	[cond="['present_state']",
		label=present_state,
		lineno=20];
	"21:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f7a31bac9d0>",
		fillcolor=lightcyan,
		label="21:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"20:CS" -> "21:CA"	[cond="['present_state']",
		label=present_state,
		lineno=20];
	"27:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f7a31bacd50>",
		fillcolor=lightcyan,
		label="27:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"20:CS" -> "27:CA"	[cond="['present_state']",
		label=present_state,
		lineno=20];
	"27:BS" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"25:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7a31bac550>",
		fillcolor=cadetblue,
		label="25:BS
next_state = S10;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7a31bac550>]",
		style=filled,
		typ=BlockingSubstitution];
	"25:BS" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"21:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f7a31baca50>",
		fillcolor=springgreen,
		label="21:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"22:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7a31baca90>",
		fillcolor=cadetblue,
		label="22:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7a31baca90>]",
		style=filled,
		typ=BlockingSubstitution];
	"21:IF" -> "22:BS"	[cond="['x']",
		label="!(x)",
		lineno=21];
	"21:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7a31bacbd0>",
		fillcolor=cadetblue,
		label="21:BS
next_state = S1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7a31bacbd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"21:IF" -> "21:BS"	[cond="['x']",
		label=x,
		lineno=21];
	"24:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7a31bac6d0>",
		fillcolor=cadetblue,
		label="24:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7a31bac6d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"24:BS" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"21:CA" -> "21:IF"	[cond="[]",
		lineno=None];
	"22:BS" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"18:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f7a316e5490>",
		clk_sens=False,
		fillcolor=gold,
		label="18:AL",
		sens="['present_state', 'x']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['x', 'present_state']"];
	"18:AL" -> "19:BL"	[cond="[]",
		lineno=None];
	"24:IF" -> "25:BS"	[cond="['x']",
		label="!((~x))",
		lineno=24];
	"24:IF" -> "24:BS"	[cond="['x']",
		label="(~x)",
		lineno=24];
	"31:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7a316e50d0>",
		fillcolor=cadetblue,
		label="31:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7a316e50d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"31:BS" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"21:BS" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"27:CA" -> "27:IF"	[cond="[]",
		lineno=None];
	"30:IF" -> "31:BS"	[cond="['x']",
		label="!((~x))",
		lineno=30];
	"30:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7a316e5250>",
		fillcolor=cadetblue,
		label="30:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f7a316e5250>]",
		style=filled,
		typ=BlockingSubstitution];
	"30:IF" -> "30:BS"	[cond="['x']",
		label="(~x)",
		lineno=30];
	"30:BS" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
}
