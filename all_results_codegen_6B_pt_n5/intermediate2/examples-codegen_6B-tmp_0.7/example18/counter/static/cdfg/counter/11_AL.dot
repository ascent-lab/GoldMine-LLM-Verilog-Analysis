strict digraph "" {
	node [label="\N"];
	"15:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f32046a69d0>",
		fillcolor=springgreen,
		label="15:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"15:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f32046a6a50>",
		fillcolor=turquoise,
		label="15:BL
q <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f32046a6a90>]",
		style=filled,
		typ=Block];
	"15:IF" -> "15:BL"	[cond="['q']",
		label="(q == 12)",
		lineno=15];
	"18:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f32046a6910>",
		fillcolor=turquoise,
		label="18:BL
q <= q + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f32046a6690>]",
		style=filled,
		typ=Block];
	"15:IF" -> "18:BL"	[cond="['q']",
		label="!((q == 12))",
		lineno=15];
	"12:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f32046a6950>",
		fillcolor=springgreen,
		label="12:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"12:IF" -> "15:IF"	[cond="['reset']",
		label="!((reset == 1))",
		lineno=12];
	"12:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f32046a6c90>",
		fillcolor=turquoise,
		label="12:BL
q <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f32046a6cd0>]",
		style=filled,
		typ=Block];
	"12:IF" -> "12:BL"	[cond="['reset']",
		label="(reset == 1)",
		lineno=12];
	"Leaf_11:AL"	[def_var="['q']",
		label="Leaf_11:AL"];
	"15:BL" -> "Leaf_11:AL"	[cond="[]",
		lineno=None];
	"11:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f32046a6f10>",
		fillcolor=turquoise,
		label="11:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"11:BL" -> "12:IF"	[cond="[]",
		lineno=None];
	"18:BL" -> "Leaf_11:AL"	[cond="[]",
		lineno=None];
	"12:BL" -> "Leaf_11:AL"	[cond="[]",
		lineno=None];
	"11:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f32046a6f90>",
		clk_sens=True,
		fillcolor=gold,
		label="11:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'q']"];
	"11:AL" -> "11:BL"	[cond="[]",
		lineno=None];
}
