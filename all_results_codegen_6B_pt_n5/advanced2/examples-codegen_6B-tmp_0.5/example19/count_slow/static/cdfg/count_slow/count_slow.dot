strict digraph "compose( ,  )" {
	node [label="\N"];
	"18:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8b2d864ed0>",
		fillcolor=springgreen,
		label="18:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"18:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f8b2d5cee90>",
		fillcolor=turquoise,
		label="18:BL
q <= q + 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8b2d872550>]",
		style=filled,
		typ=Block];
	"18:IF" -> "18:BL"	[cond="['q']",
		label="(q < 9)",
		lineno=18];
	"14:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f8b2d8f5e10>",
		fillcolor=turquoise,
		label="14:BL
q <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8b2d5d6810>]",
		style=filled,
		typ=Block];
	"Leaf_12:AL"	[def_var="['q']",
		label="Leaf_12:AL"];
	"14:BL" -> "Leaf_12:AL"	[cond="[]",
		lineno=None];
	"29:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8b2d867e90>",
		fillcolor=springgreen,
		label="29:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"32:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8b2d867ad0>",
		fillcolor=springgreen,
		label="32:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"29:IF" -> "32:IF"	[cond="['reset']",
		label="!(reset)",
		lineno=29];
	"29:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f8b2d87dc50>",
		fillcolor=turquoise,
		label="29:BL
q <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8b2d87dd10>]",
		style=filled,
		typ=Block];
	"29:IF" -> "29:BL"	[cond="['reset']",
		label=reset,
		lineno=29];
	"17:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f8b2d8644d0>",
		fillcolor=turquoise,
		label="17:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"17:BL" -> "18:IF"	[cond="[]",
		lineno=None];
	"27:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f8b2d872150>",
		clk_sens=True,
		fillcolor=gold,
		label="27:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'q', 'slowena']"];
	"28:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f8b2d872650>",
		fillcolor=turquoise,
		label="28:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"27:AL" -> "28:BL"	[cond="[]",
		lineno=None];
	"33:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8b2d867290>",
		fillcolor=springgreen,
		label="33:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"33:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f8b2d8ead90>",
		fillcolor=turquoise,
		label="33:BL
q <= q - 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8b2d8ea390>]",
		style=filled,
		typ=Block];
	"33:IF" -> "33:BL"	[cond="['q']",
		label="(q > 0)",
		lineno=33];
	"18:BL" -> "Leaf_12:AL"	[cond="[]",
		lineno=None];
	"12:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f8b2d8f5390>",
		clk_sens=True,
		fillcolor=gold,
		label="12:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'q', 'slowena']"];
	"13:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f8b2d8f50d0>",
		fillcolor=turquoise,
		label="13:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"12:AL" -> "13:BL"	[cond="[]",
		lineno=None];
	"Leaf_12:AL" -> "27:AL";
	"Leaf_12:AL" -> "12:AL";
	"32:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f8b2d867150>",
		fillcolor=turquoise,
		label="32:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"32:BL" -> "33:IF"	[cond="[]",
		lineno=None];
	"17:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8b2d864790>",
		fillcolor=springgreen,
		label="17:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"17:IF" -> "17:BL"	[cond="['slowena']",
		label=slowena,
		lineno=17];
	"Leaf_27:AL"	[def_var="['q']",
		label="Leaf_27:AL"];
	"33:BL" -> "Leaf_27:AL"	[cond="[]",
		lineno=None];
	"32:IF" -> "32:BL"	[cond="['slowena']",
		label=slowena,
		lineno=32];
	"14:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8b2d5d6bd0>",
		fillcolor=springgreen,
		label="14:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"13:BL" -> "14:IF"	[cond="[]",
		lineno=None];
	"14:IF" -> "14:BL"	[cond="['reset']",
		label=reset,
		lineno=14];
	"14:IF" -> "17:IF"	[cond="['reset']",
		label="!(reset)",
		lineno=14];
	"Leaf_27:AL" -> "27:AL";
	"Leaf_27:AL" -> "12:AL";
	"29:BL" -> "Leaf_27:AL"	[cond="[]",
		lineno=None];
	"28:BL" -> "29:IF"	[cond="[]",
		lineno=None];
}
