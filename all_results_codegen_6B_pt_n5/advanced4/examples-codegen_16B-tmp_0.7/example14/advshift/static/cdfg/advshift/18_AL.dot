strict digraph "" {
	node [label="\N"];
	"23:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f9255199cd0>",
		fillcolor=springgreen,
		label="23:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"23:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f9255199e50>",
		fillcolor=turquoise,
		label="23:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"23:IF" -> "23:BL"	[cond="['ena']",
		label="(ena == 1)",
		lineno=23];
	"19:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f925518cc50>",
		fillcolor=turquoise,
		label="19:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"20:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f925518cc90>",
		fillcolor=springgreen,
		label="20:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"19:BL" -> "20:IF"	[cond="[]",
		lineno=None];
	"29:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f925518c250>",
		fillcolor=lightcyan,
		label="29:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"30:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f925518c2d0>",
		fillcolor=turquoise,
		label="30:BL
q <= q << 8;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f925518c310>]",
		style=filled,
		typ=Block];
	"29:CA" -> "30:BL"	[cond="[]",
		lineno=None];
	"20:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f925518ccd0>",
		fillcolor=turquoise,
		label="20:BL
q[63:0] <= data[63:0];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f925518cd10>]",
		style=filled,
		typ=Block];
	"Leaf_18:AL"	[def_var="['q']",
		label="Leaf_18:AL"];
	"20:BL" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"33:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f925518c550>",
		fillcolor=lightcyan,
		label="33:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"34:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f925518c5d0>",
		fillcolor=turquoise,
		label="34:BL
q <= q >> 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f925518c610>]",
		style=filled,
		typ=Block];
	"33:CA" -> "34:BL"	[cond="[]",
		lineno=None];
	"30:BL" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"26:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f9255199fd0>",
		fillcolor=turquoise,
		label="26:BL
q <= q << 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f925518c050>]",
		style=filled,
		typ=Block];
	"26:BL" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"37:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f925518c850>",
		fillcolor=lightcyan,
		label="37:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"38:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f925518c8d0>",
		fillcolor=turquoise,
		label="38:BL
q <= q >> 8;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f925518c910>]",
		style=filled,
		typ=Block];
	"37:CA" -> "38:BL"	[cond="[]",
		lineno=None];
	"20:IF" -> "23:IF"	[cond="['load']",
		label="!((load == 1))",
		lineno=20];
	"20:IF" -> "20:BL"	[cond="['load']",
		label="(load == 1)",
		lineno=20];
	"38:BL" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"24:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f9255199e90>",
		fillcolor=linen,
		label="24:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"24:CS" -> "29:CA"	[cond="['amount']",
		label=amount,
		lineno=24];
	"24:CS" -> "33:CA"	[cond="['amount']",
		label=amount,
		lineno=24];
	"24:CS" -> "37:CA"	[cond="['amount']",
		label=amount,
		lineno=24];
	"25:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f9255199f50>",
		fillcolor=lightcyan,
		label="25:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"24:CS" -> "25:CA"	[cond="['amount']",
		label=amount,
		lineno=24];
	"34:BL" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"18:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f9255180190>",
		clk_sens=True,
		fillcolor=gold,
		label="18:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['load', 'ena', 'amount', 'data', 'q']"];
	"18:AL" -> "19:BL"	[cond="[]",
		lineno=None];
	"25:CA" -> "26:BL"	[cond="[]",
		lineno=None];
	"23:BL" -> "24:CS"	[cond="[]",
		lineno=None];
}
