strict digraph "compose( ,  )" {
	node [label="\N"];
	"17:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f3165df7090>",
		clk_sens=True,
		fillcolor=gold,
		label="17:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['load', 'ena', 'amount', 'data']"];
	"17:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f31660b50d0>",
		fillcolor=turquoise,
		label="17:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"17:AL" -> "17:BL"	[cond="[]",
		lineno=None];
	"18:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f3165de3e10>",
		fillcolor=turquoise,
		label="18:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"25:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f3169f45d10>",
		fillcolor=springgreen,
		label="25:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"18:BL" -> "25:IF"	[cond="[]",
		lineno=None];
	"19:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f3165de6650>",
		fillcolor=linen,
		label="19:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"18:BL" -> "19:CS"	[cond="[]",
		lineno=None];
	"22:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f3165de6e90>",
		fillcolor=cadetblue,
		label="22:BS
q = data >> 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f3165de6e90>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_17:AL"	[def_var="['q']",
		label="Leaf_17:AL"];
	"22:BS" -> "Leaf_17:AL"	[cond="[]",
		lineno=None];
	"20:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f3165d8ecd0>",
		fillcolor=cadetblue,
		label="20:BS
q = data;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f3165d8ecd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"20:BS" -> "Leaf_17:AL"	[cond="[]",
		lineno=None];
	"21:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f3165df1650>",
		fillcolor=cadetblue,
		label="21:BS
q = data;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f3165df1650>]",
		style=filled,
		typ=BlockingSubstitution];
	"21:BS" -> "Leaf_17:AL"	[cond="[]",
		lineno=None];
	"23:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f3165de6090>",
		fillcolor=cadetblue,
		label="23:BS
q = data >> 8;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f3165de6090>]",
		style=filled,
		typ=BlockingSubstitution];
	"23:BS" -> "Leaf_17:AL"	[cond="[]",
		lineno=None];
	"25:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f31660aae90>",
		fillcolor=cadetblue,
		label="25:BS
q = data;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f31660aae90>]",
		style=filled,
		typ=BlockingSubstitution];
	"25:BS" -> "Leaf_17:AL"	[cond="[]",
		lineno=None];
	"22:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f3165dfd6d0>",
		fillcolor=lightcyan,
		label="22:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"22:CA" -> "22:BS"	[cond="[]",
		lineno=None];
	"18:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f3165df71d0>",
		fillcolor=springgreen,
		label="18:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"17:BL" -> "18:IF"	[cond="[]",
		lineno=None];
	"21:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f3165df1150>",
		fillcolor=lightcyan,
		label="21:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"21:CA" -> "21:BS"	[cond="[]",
		lineno=None];
	"25:IF" -> "25:BS"	[cond="['load', 'ena']",
		label="(load | ena)",
		lineno=25];
	"20:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f3165de3ed0>",
		fillcolor=lightcyan,
		label="20:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"20:CA" -> "20:BS"	[cond="[]",
		lineno=None];
	"18:IF" -> "18:BL"	[cond="['ena']",
		label=ena,
		lineno=18];
	"23:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f3165de6950>",
		fillcolor=lightcyan,
		label="23:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"23:CA" -> "23:BS"	[cond="[]",
		lineno=None];
	"19:CS" -> "22:CA"	[cond="['amount']",
		label=amount,
		lineno=19];
	"19:CS" -> "21:CA"	[cond="['amount']",
		label=amount,
		lineno=19];
	"19:CS" -> "20:CA"	[cond="['amount']",
		label=amount,
		lineno=19];
	"19:CS" -> "23:CA"	[cond="['amount']",
		label=amount,
		lineno=19];
}
