strict digraph "" {
	node [label="\N"];
	"26:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f866feb02d0>",
		fillcolor=firebrick,
		label="26:NS
q <= 4'b1001;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f866feb02d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_24:AL"	[def_var="['q']",
		label="Leaf_24:AL"];
	"26:NS" -> "Leaf_24:AL"	[cond="[]",
		lineno=None];
	"28:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f866fe8eed0>",
		fillcolor=springgreen,
		label="28:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"29:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f866fe8ef50>",
		fillcolor=firebrick,
		label="29:NS
q <= q - 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f866fe8ef50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"28:IF" -> "29:NS"	[cond="['slowena', 'q']",
		label="(slowena && (q > 4'b0))",
		lineno=28];
	"24:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f866fe8edd0>",
		fillcolor=turquoise,
		label="24:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"25:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f866fe8ee10>",
		fillcolor=springgreen,
		label="25:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"24:BL" -> "25:IF"	[cond="[]",
		lineno=None];
	"27:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f866fe8ee90>",
		fillcolor=turquoise,
		label="27:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"27:BL" -> "28:IF"	[cond="[]",
		lineno=None];
	"25:IF" -> "26:NS"	[cond="['reset']",
		label=reset,
		lineno=25];
	"25:IF" -> "27:BL"	[cond="['reset']",
		label="!(reset)",
		lineno=25];
	"24:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f866fe8e5d0>",
		clk_sens=True,
		fillcolor=gold,
		label="24:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'q', 'slowena']"];
	"24:AL" -> "24:BL"	[cond="[]",
		lineno=None];
	"29:NS" -> "Leaf_24:AL"	[cond="[]",
		lineno=None];
}
