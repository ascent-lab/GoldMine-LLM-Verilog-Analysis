strict digraph "compose( ,  )" {
	node [label="\N"];
	"30:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7ff2e2266ad0>",
		fillcolor=lightcyan,
		label="30:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"30:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff2e22ea1d0>",
		fillcolor=springgreen,
		label="30:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"30:CA" -> "30:IF"	[cond="[]",
		lineno=None];
	"23:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff2e2271050>",
		fillcolor=firebrick,
		label="23:NS
present_state <= next_state;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff2e2271050>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_18:AL"	[def_var="['present_state']",
		label="Leaf_18:AL"];
	"23:NS" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"28:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7ff2e2266450>",
		clk_sens=False,
		fillcolor=gold,
		label="28:AL",
		sens="[]",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['x', 'present_state']"];
	"Leaf_18:AL" -> "28:AL";
	"26:AS"	[ast="<pyverilog.vparser.ast.Assign object at 0x7ff2e2266e90>",
		def_var="['z']",
		fillcolor=deepskyblue,
		label="26:AS
z = (present_state == S101) & x;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['present_state', 'x']"];
	"Leaf_18:AL" -> "26:AS";
	"34:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff2e1ed8d90>",
		fillcolor=cadetblue,
		label="34:BS
next_state = S101;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff2e1ed8d90>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_28:AL"	[def_var="['next_state']",
		label="Leaf_28:AL"];
	"34:BS" -> "Leaf_28:AL"	[cond="[]",
		lineno=None];
	"32:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff2e1ed83d0>",
		fillcolor=cadetblue,
		label="32:BS
next_state = S10;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff2e1ed83d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"32:BS" -> "Leaf_28:AL"	[cond="[]",
		lineno=None];
	"31:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff2e22ea310>",
		fillcolor=cadetblue,
		label="31:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff2e22ea310>]",
		style=filled,
		typ=BlockingSubstitution];
	"31:BS" -> "Leaf_28:AL"	[cond="[]",
		lineno=None];
	"30:IF" -> "31:BS"	[cond="['x']",
		label="!(x)",
		lineno=30];
	"30:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff2e22ea250>",
		fillcolor=cadetblue,
		label="30:BS
next_state = S1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff2e22ea250>]",
		style=filled,
		typ=BlockingSubstitution];
	"30:IF" -> "30:BS"	[cond="['x']",
		label=x,
		lineno=30];
	"19:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7ff2e2263ed0>",
		fillcolor=turquoise,
		label="19:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"20:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff2e2271450>",
		fillcolor=springgreen,
		label="20:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"19:BL" -> "20:IF"	[cond="[]",
		lineno=None];
	"20:IF" -> "23:NS"	[cond="['reset']",
		label="!(reset)",
		lineno=20];
	"21:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff2e1fce4d0>",
		fillcolor=firebrick,
		label="21:NS
present_state <= IDLE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7ff2e1fce4d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"20:IF" -> "21:NS"	[cond="['reset']",
		label=reset,
		lineno=20];
	"36:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7ff2e1ed8d50>",
		fillcolor=lightcyan,
		label="36:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"36:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff2e1ed8450>",
		fillcolor=springgreen,
		label="36:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"36:CA" -> "36:IF"	[cond="[]",
		lineno=None];
	"33:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff2e1ed8c10>",
		fillcolor=cadetblue,
		label="33:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff2e1ed8c10>]",
		style=filled,
		typ=BlockingSubstitution];
	"33:BS" -> "Leaf_28:AL"	[cond="[]",
		lineno=None];
	"37:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff2e1ed8490>",
		fillcolor=cadetblue,
		label="37:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff2e1ed8490>]",
		style=filled,
		typ=BlockingSubstitution];
	"36:IF" -> "37:BS"	[cond="['x']",
		label="!(x)",
		lineno=36];
	"36:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff2e1ed8550>",
		fillcolor=cadetblue,
		label="36:BS
next_state = S1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff2e1ed8550>]",
		style=filled,
		typ=BlockingSubstitution];
	"36:IF" -> "36:BS"	[cond="['x']",
		label=x,
		lineno=36];
	"18:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7ff2e2263890>",
		clk_sens=True,
		fillcolor=gold,
		label="18:AL",
		sens="['clk', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'next_state']"];
	"Leaf_28:AL" -> "18:AL";
	"32:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7ff2e22ea150>",
		fillcolor=lightcyan,
		label="32:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"32:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff2e1ed8c90>",
		fillcolor=springgreen,
		label="32:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"32:CA" -> "32:IF"	[cond="[]",
		lineno=None];
	"30:BS" -> "Leaf_28:AL"	[cond="[]",
		lineno=None];
	"34:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7ff2e1ed8610>",
		fillcolor=lightcyan,
		label="34:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"34:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff2e1ed8890>",
		fillcolor=springgreen,
		label="34:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"34:CA" -> "34:IF"	[cond="[]",
		lineno=None];
	"18:AL" -> "19:BL"	[cond="[]",
		lineno=None];
	"37:BS" -> "Leaf_28:AL"	[cond="[]",
		lineno=None];
	"36:BS" -> "Leaf_28:AL"	[cond="[]",
		lineno=None];
	"29:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7ff2e1ed8cd0>",
		fillcolor=linen,
		label="29:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"29:CS" -> "30:CA"	[cond="['present_state']",
		label=present_state,
		lineno=29];
	"29:CS" -> "36:CA"	[cond="['present_state']",
		label=present_state,
		lineno=29];
	"29:CS" -> "32:CA"	[cond="['present_state']",
		label=present_state,
		lineno=29];
	"29:CS" -> "34:CA"	[cond="['present_state']",
		label=present_state,
		lineno=29];
	"32:IF" -> "32:BS"	[cond="['x']",
		label=x,
		lineno=32];
	"32:IF" -> "33:BS"	[cond="['x']",
		label="!(x)",
		lineno=32];
	"34:IF" -> "34:BS"	[cond="['x']",
		label=x,
		lineno=34];
	"35:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff2e1ed8fd0>",
		fillcolor=cadetblue,
		label="35:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff2e1ed8fd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"34:IF" -> "35:BS"	[cond="['x']",
		label="!(x)",
		lineno=34];
	"28:AL" -> "29:CS"	[cond="[]",
		lineno=None];
	"35:BS" -> "Leaf_28:AL"	[cond="[]",
		lineno=None];
	"21:NS" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
}
