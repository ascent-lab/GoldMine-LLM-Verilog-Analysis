strict digraph "" {
	node [label="\N"];
	"29:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b2cbef3d0>",
		fillcolor=springgreen,
		label="29:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"29:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2b2cbef850>",
		fillcolor=cadetblue,
		label="29:BS
next_state = S1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2b2cbef850>]",
		style=filled,
		typ=BlockingSubstitution];
	"29:IF" -> "29:BS"	[cond="['x']",
		label=x,
		lineno=29];
	"30:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2b2cbef690>",
		fillcolor=cadetblue,
		label="30:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2b2cbef690>]",
		style=filled,
		typ=BlockingSubstitution];
	"29:IF" -> "30:BS"	[cond="['x']",
		label="!(x)",
		lineno=29];
	"38:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2b2cbef9d0>",
		fillcolor=cadetblue,
		label="38:BS
next_state = S1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2b2cbef9d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_26:AL"	[def_var="['next_state']",
		label="Leaf_26:AL"];
	"38:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"32:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2b2cbefb50>",
		fillcolor=cadetblue,
		label="32:BS
next_state = S10;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2b2cbefb50>]",
		style=filled,
		typ=BlockingSubstitution];
	"32:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"35:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b2cbefc90>",
		fillcolor=springgreen,
		label="35:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"36:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2b2cbefcd0>",
		fillcolor=cadetblue,
		label="36:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2b2cbefcd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"35:IF" -> "36:BS"	[cond="['x']",
		label="!(x)",
		lineno=35];
	"35:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2b2cbefe10>",
		fillcolor=cadetblue,
		label="35:BS
next_state = S101;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2b2cbefe10>]",
		style=filled,
		typ=BlockingSubstitution];
	"35:IF" -> "35:BS"	[cond="['x']",
		label=x,
		lineno=35];
	"40:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f2b2c6ea650>",
		fillcolor=lightcyan,
		label="40:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"40:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2b2c6ea690>",
		fillcolor=cadetblue,
		label="40:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2b2c6ea690>]",
		style=filled,
		typ=BlockingSubstitution];
	"40:CA" -> "40:BS"	[cond="[]",
		lineno=None];
	"29:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"35:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f2b2c6ea390>",
		fillcolor=lightcyan,
		label="35:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"35:CA" -> "35:IF"	[cond="[]",
		lineno=None];
	"33:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2b2c6ea210>",
		fillcolor=cadetblue,
		label="33:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2b2c6ea210>]",
		style=filled,
		typ=BlockingSubstitution];
	"33:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"40:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"38:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b2c6ea490>",
		fillcolor=springgreen,
		label="38:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"38:IF" -> "38:BS"	[cond="['x']",
		label=x,
		lineno=38];
	"39:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2b2c6ea4d0>",
		fillcolor=cadetblue,
		label="39:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2b2c6ea4d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"38:IF" -> "39:BS"	[cond="['x']",
		label="!(x)",
		lineno=38];
	"32:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f2b2c6ea150>",
		fillcolor=lightcyan,
		label="32:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"32:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b2c6ea1d0>",
		fillcolor=springgreen,
		label="32:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"32:CA" -> "32:IF"	[cond="[]",
		lineno=None];
	"30:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"38:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f2b2c6ea410>",
		fillcolor=lightcyan,
		label="38:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"38:CA" -> "38:IF"	[cond="[]",
		lineno=None];
	"36:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"26:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f2b2c6ea810>",
		clk_sens=False,
		fillcolor=gold,
		label="26:AL",
		sens="['x', 'present_state']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['x', 'present_state']"];
	"27:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f2b2c6ea9d0>",
		fillcolor=turquoise,
		label="27:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"26:AL" -> "27:BL"	[cond="[]",
		lineno=None];
	"32:IF" -> "32:BS"	[cond="['x']",
		label=x,
		lineno=32];
	"32:IF" -> "33:BS"	[cond="['x']",
		label="!(x)",
		lineno=32];
	"28:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f2b2cbeff90>",
		fillcolor=linen,
		label="28:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"27:BL" -> "28:CS"	[cond="[]",
		lineno=None];
	"28:CS" -> "40:CA"	[cond="['present_state']",
		label=present_state,
		lineno=28];
	"28:CS" -> "35:CA"	[cond="['present_state']",
		label=present_state,
		lineno=28];
	"28:CS" -> "32:CA"	[cond="['present_state']",
		label=present_state,
		lineno=28];
	"28:CS" -> "38:CA"	[cond="['present_state']",
		label=present_state,
		lineno=28];
	"29:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f2b2c6ea0d0>",
		fillcolor=lightcyan,
		label="29:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"28:CS" -> "29:CA"	[cond="['present_state']",
		label=present_state,
		lineno=28];
	"39:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"29:CA" -> "29:IF"	[cond="[]",
		lineno=None];
	"35:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
}
