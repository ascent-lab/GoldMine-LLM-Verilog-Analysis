strict digraph "compose( ,  )" {
	node [label="\N"];
	"44:AS"	[ast="<pyverilog.vparser.ast.Assign object at 0x7f2b2cbd82d0>",
		def_var="['z']",
		fillcolor=deepskyblue,
		label="44:AS
z = present_state == S101;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['present_state']"];
	"23:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b2cf71050>",
		fillcolor=firebrick,
		label="23:NS
present_state <= next_state;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b2cf71050>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_18:AL"	[def_var="['present_state']",
		label="Leaf_18:AL"];
	"23:NS" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"29:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b310c5d10>",
		fillcolor=springgreen,
		label="29:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"29:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2b303e5190>",
		fillcolor=cadetblue,
		label="29:BS
next_state = S1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2b303e5190>]",
		style=filled,
		typ=BlockingSubstitution];
	"29:IF" -> "29:BS"	[cond="['x']",
		label=x,
		lineno=29];
	"30:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2b2cfea1d0>",
		fillcolor=cadetblue,
		label="30:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2b2cfea1d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"29:IF" -> "30:BS"	[cond="['x']",
		label="!(x)",
		lineno=29];
	"38:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2b2cbd89d0>",
		fillcolor=cadetblue,
		label="38:BS
next_state = S1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2b2cbd89d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_26:AL"	[def_var="['next_state']",
		label="Leaf_26:AL"];
	"38:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"32:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2b2cf86510>",
		fillcolor=cadetblue,
		label="32:BS
next_state = S10;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2b2cf86510>]",
		style=filled,
		typ=BlockingSubstitution];
	"32:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"35:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b2cbd8bd0>",
		fillcolor=springgreen,
		label="35:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"36:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2b2cbd8890>",
		fillcolor=cadetblue,
		label="36:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2b2cbd8890>]",
		style=filled,
		typ=BlockingSubstitution];
	"35:IF" -> "36:BS"	[cond="['x']",
		label="!(x)",
		lineno=35];
	"35:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2b2cbd8810>",
		fillcolor=cadetblue,
		label="35:BS
next_state = S101;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2b2cbd8810>]",
		style=filled,
		typ=BlockingSubstitution];
	"35:IF" -> "35:BS"	[cond="['x']",
		label=x,
		lineno=35];
	"28:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f2b2cbd8790>",
		fillcolor=linen,
		label="28:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"35:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f2b2e7e8ad0>",
		fillcolor=lightcyan,
		label="35:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"28:CS" -> "35:CA"	[cond="['present_state']",
		label=present_state,
		lineno=28];
	"32:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f2b2e77f450>",
		fillcolor=lightcyan,
		label="32:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"28:CS" -> "32:CA"	[cond="['present_state']",
		label=present_state,
		lineno=28];
	"38:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f2b2cbd8d10>",
		fillcolor=lightcyan,
		label="38:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"28:CS" -> "38:CA"	[cond="['present_state']",
		label=present_state,
		lineno=28];
	"40:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f2b2cbd8a90>",
		fillcolor=lightcyan,
		label="40:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"28:CS" -> "40:CA"	[cond="['present_state']",
		label=present_state,
		lineno=28];
	"29:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f2b2cf66650>",
		fillcolor=lightcyan,
		label="29:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"28:CS" -> "29:CA"	[cond="['present_state']",
		label=present_state,
		lineno=28];
	"29:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"Leaf_18:AL" -> "44:AS";
	"26:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f2b2cf66750>",
		clk_sens=False,
		fillcolor=gold,
		label="26:AL",
		sens="['x', 'present_state']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['x', 'present_state']"];
	"Leaf_18:AL" -> "26:AL";
	"35:CA" -> "35:IF"	[cond="[]",
		lineno=None];
	"20:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b2cf71450>",
		fillcolor=springgreen,
		label="20:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"20:IF" -> "23:NS"	[cond="['reset']",
		label="!(reset)",
		lineno=20];
	"21:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b2cf0e4d0>",
		fillcolor=firebrick,
		label="21:NS
present_state <= IDLE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2b2cf0e4d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"20:IF" -> "21:NS"	[cond="['reset']",
		label=reset,
		lineno=20];
	"33:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2b2cbd8c90>",
		fillcolor=cadetblue,
		label="33:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2b2cbd8c90>]",
		style=filled,
		typ=BlockingSubstitution];
	"33:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"40:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2b2cbd8750>",
		fillcolor=cadetblue,
		label="40:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2b2cbd8750>]",
		style=filled,
		typ=BlockingSubstitution];
	"40:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"38:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b2cbd8390>",
		fillcolor=springgreen,
		label="38:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"38:IF" -> "38:BS"	[cond="['x']",
		label=x,
		lineno=38];
	"39:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2b2cbd8550>",
		fillcolor=cadetblue,
		label="39:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2b2cbd8550>]",
		style=filled,
		typ=BlockingSubstitution];
	"38:IF" -> "39:BS"	[cond="['x']",
		label="!(x)",
		lineno=38];
	"32:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2b2cf86550>",
		fillcolor=springgreen,
		label="32:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"32:CA" -> "32:IF"	[cond="[]",
		lineno=None];
	"19:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f2b2cf63ed0>",
		fillcolor=turquoise,
		label="19:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"19:BL" -> "20:IF"	[cond="[]",
		lineno=None];
	"30:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"18:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f2b2cf63890>",
		clk_sens=True,
		fillcolor=gold,
		label="18:AL",
		sens="['clk', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'next_state']"];
	"18:AL" -> "19:BL"	[cond="[]",
		lineno=None];
	"38:CA" -> "38:IF"	[cond="[]",
		lineno=None];
	"36:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"27:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f2b2cf66e90>",
		fillcolor=turquoise,
		label="27:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"26:AL" -> "27:BL"	[cond="[]",
		lineno=None];
	"Leaf_26:AL" -> "18:AL";
	"32:IF" -> "32:BS"	[cond="['x']",
		label=x,
		lineno=32];
	"32:IF" -> "33:BS"	[cond="['x']",
		label="!(x)",
		lineno=32];
	"27:BL" -> "28:CS"	[cond="[]",
		lineno=None];
	"40:CA" -> "40:BS"	[cond="[]",
		lineno=None];
	"39:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"29:CA" -> "29:IF"	[cond="[]",
		lineno=None];
	"35:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"21:NS" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
}
