strict digraph "compose( ,  )" {
	node [label="\N"];
	"30:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fc69f518c10>",
		fillcolor=lightcyan,
		label="30:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"30:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fc69f518890>",
		fillcolor=cadetblue,
		label="30:BS
next_state = (x)? S101 : IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fc69f518890>]",
		style=filled,
		typ=BlockingSubstitution];
	"30:CA" -> "30:BS"	[cond="[]",
		lineno=None];
	"Leaf_18:AL"	[def_var="['present_state']",
		label="Leaf_18:AL"];
	"17:AS"	[ast="<pyverilog.vparser.ast.Assign object at 0x7fc69f8a3ed0>",
		def_var="['z']",
		fillcolor=deepskyblue,
		label="17:AS
z = (present_state == S101)? 1 : 0;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['present_state']"];
	"Leaf_18:AL" -> "17:AS";
	"25:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7fc69f8a6ad0>",
		clk_sens=False,
		fillcolor=gold,
		label="25:AL",
		sens="['x', 'IDLE', 'S10']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['x', 'IDLE', 'S10', 'present_state']"];
	"Leaf_18:AL" -> "25:AL";
	"31:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fc69f518290>",
		fillcolor=lightcyan,
		label="31:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"31:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fc69f518910>",
		fillcolor=cadetblue,
		label="31:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fc69f518910>]",
		style=filled,
		typ=BlockingSubstitution];
	"31:CA" -> "31:BS"	[cond="[]",
		lineno=None];
	"19:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7fc69f8bd6d0>",
		fillcolor=springgreen,
		label="19:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"20:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fc69f8bd610>",
		fillcolor=firebrick,
		label="20:NS
present_state <= IDLE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fc69f8bd610>]",
		style=filled,
		typ=NonblockingSubstitution];
	"19:IF" -> "20:NS"	[cond="['reset']",
		label=reset,
		lineno=19];
	"21:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fc69f8a6650>",
		fillcolor=turquoise,
		label="21:BL
present_state <= next_state;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fc69f8a6950>]",
		style=filled,
		typ=Block];
	"19:IF" -> "21:BL"	[cond="['reset']",
		label="!(reset)",
		lineno=19];
	"27:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7fc69f518b50>",
		fillcolor=linen,
		label="27:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"27:CS" -> "30:CA"	[cond="['present_state']",
		label=present_state,
		lineno=27];
	"27:CS" -> "31:CA"	[cond="['present_state']",
		label=present_state,
		lineno=27];
	"29:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fc6a11a8ad0>",
		fillcolor=lightcyan,
		label="29:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"27:CS" -> "29:CA"	[cond="['present_state']",
		label=present_state,
		lineno=27];
	"28:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fc69f92ae90>",
		fillcolor=lightcyan,
		label="28:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"27:CS" -> "28:CA"	[cond="['present_state']",
		label=present_state,
		lineno=27];
	"18:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fc69f8b1450>",
		fillcolor=turquoise,
		label="18:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"18:BL" -> "19:IF"	[cond="[]",
		lineno=None];
	"Leaf_25:AL"	[def_var="['next_state']",
		label="Leaf_25:AL"];
	"18:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7fc69f84e4d0>",
		clk_sens=True,
		fillcolor=gold,
		label="18:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'next_state']"];
	"Leaf_25:AL" -> "18:AL";
	"20:NS" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"30:BS" -> "Leaf_25:AL"	[cond="[]",
		lineno=None];
	"18:AL" -> "18:BL"	[cond="[]",
		lineno=None];
	"31:BS" -> "Leaf_25:AL"	[cond="[]",
		lineno=None];
	"28:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fc69f92ad90>",
		fillcolor=cadetblue,
		label="28:BS
next_state = (x)? S1 : IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fc69f92ad90>]",
		style=filled,
		typ=BlockingSubstitution];
	"28:BS" -> "Leaf_25:AL"	[cond="[]",
		lineno=None];
	"25:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fc69f8a6290>",
		fillcolor=turquoise,
		label="25:BL
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fc69f8a6090>]",
		style=filled,
		typ=Block];
	"25:AL" -> "25:BL"	[cond="[]",
		lineno=None];
	"21:BL" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"29:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fc69f518310>",
		fillcolor=cadetblue,
		label="29:BS
next_state = (x)? S1 : S10;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fc69f518310>]",
		style=filled,
		typ=BlockingSubstitution];
	"29:BS" -> "Leaf_25:AL"	[cond="[]",
		lineno=None];
	"29:CA" -> "29:BS"	[cond="[]",
		lineno=None];
	"25:BL" -> "27:CS"	[cond="[]",
		lineno=None];
	"28:CA" -> "28:BS"	[cond="[]",
		lineno=None];
}
