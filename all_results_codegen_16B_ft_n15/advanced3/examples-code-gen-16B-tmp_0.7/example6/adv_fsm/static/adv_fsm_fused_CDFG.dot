strict digraph "compose( ,  )" {
	node [label="\N"];
	"30:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f2eb6f6a110>",
		fillcolor=lightcyan,
		label="30:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"30:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f2eb6b58b10>",
		fillcolor=turquoise,
		label="30:BL
next_state = (x == 0)? S10 : IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2eb6b583d0>]",
		style=filled,
		typ=Block];
	"30:CA" -> "30:BL"	[cond="[]",
		lineno=None];
	"36:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f2eb6b58290>",
		fillcolor=lightcyan,
		label="36:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"36:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f2eb6b589d0>",
		fillcolor=turquoise,
		label="36:BL
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2eb6b58390>]",
		style=filled,
		typ=Block];
	"36:CA" -> "36:BL"	[cond="[]",
		lineno=None];
	"18:AS"	[ast="<pyverilog.vparser.ast.Assign object at 0x7f2eb6ee3210>",
		def_var="['z']",
		fillcolor=deepskyblue,
		label="18:AS
z = present_state == S101;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['present_state']"];
	"20:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f2eb6e8e4d0>",
		fillcolor=turquoise,
		label="20:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"21:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2eb6efd610>",
		fillcolor=springgreen,
		label="21:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"20:BL" -> "21:IF"	[cond="[]",
		lineno=None];
	"Leaf_24:AL"	[def_var="['next_state']",
		label="Leaf_24:AL"];
	"30:BL" -> "Leaf_24:AL"	[cond="[]",
		lineno=None];
	"19:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f2eb6e8ecd0>",
		clk_sens=True,
		fillcolor=gold,
		label="19:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'next_state']"];
	"Leaf_24:AL" -> "19:AL";
	"27:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f2eb6ee6350>",
		fillcolor=turquoise,
		label="27:BL
next_state = (x == 1)? S1 : IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2eb6f6a190>]",
		style=filled,
		typ=Block];
	"27:BL" -> "Leaf_24:AL"	[cond="[]",
		lineno=None];
	"27:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f2eb6ee6d10>",
		fillcolor=lightcyan,
		label="27:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"27:CA" -> "27:BL"	[cond="[]",
		lineno=None];
	"33:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f2eb6b58810>",
		fillcolor=turquoise,
		label="33:BL
next_state = (x == 1)? S101 : IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2eb6b58d90>]",
		style=filled,
		typ=Block];
	"33:BL" -> "Leaf_24:AL"	[cond="[]",
		lineno=None];
	"33:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f2eb6b58c90>",
		fillcolor=lightcyan,
		label="33:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"33:CA" -> "33:BL"	[cond="[]",
		lineno=None];
	"19:AL" -> "20:BL"	[cond="[]",
		lineno=None];
	"22:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2eb6ee6650>",
		fillcolor=firebrick,
		label="22:NS
present_state <= next_state;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2eb6ee6650>]",
		style=filled,
		typ=NonblockingSubstitution];
	"21:IF" -> "22:NS"	[cond="['reset']",
		label="!(reset)",
		lineno=21];
	"21:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2eb6ef1250>",
		fillcolor=firebrick,
		label="21:NS
present_state <= IDLE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2eb6ef1250>]",
		style=filled,
		typ=NonblockingSubstitution];
	"21:IF" -> "21:NS"	[cond="['reset']",
		label=reset,
		lineno=21];
	"26:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f2eb6b58d50>",
		fillcolor=linen,
		label="26:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"26:CS" -> "30:CA"	[cond="['present_state']",
		label=present_state,
		lineno=26];
	"26:CS" -> "36:CA"	[cond="['present_state']",
		label=present_state,
		lineno=26];
	"26:CS" -> "27:CA"	[cond="['present_state']",
		label=present_state,
		lineno=26];
	"26:CS" -> "33:CA"	[cond="['present_state']",
		label=present_state,
		lineno=26];
	"Leaf_19:AL"	[def_var="['present_state']",
		label="Leaf_19:AL"];
	"22:NS" -> "Leaf_19:AL"	[cond="[]",
		lineno=None];
	"Leaf_19:AL" -> "18:AS";
	"24:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f2eb6ee6750>",
		clk_sens=False,
		fillcolor=gold,
		label="24:AL",
		sens="['x', 'IDLE']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['x', 'IDLE', 'present_state']"];
	"Leaf_19:AL" -> "24:AL";
	"25:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f2eb6ee6850>",
		fillcolor=turquoise,
		label="25:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"24:AL" -> "25:BL"	[cond="[]",
		lineno=None];
	"25:BL" -> "26:CS"	[cond="[]",
		lineno=None];
	"36:BL" -> "Leaf_24:AL"	[cond="[]",
		lineno=None];
	"21:NS" -> "Leaf_19:AL"	[cond="[]",
		lineno=None];
}
