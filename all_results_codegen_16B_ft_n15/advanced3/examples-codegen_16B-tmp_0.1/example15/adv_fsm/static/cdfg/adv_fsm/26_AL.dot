strict digraph "" {
	node [label="\N"];
	"34:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff6402e1410>",
		fillcolor=cadetblue,
		label="34:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff6402e1410>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_26:AL"	[def_var="['next_state']",
		label="Leaf_26:AL"];
	"34:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"32:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff6402e1810>",
		fillcolor=cadetblue,
		label="32:BS
next_state = S1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff6402e1810>]",
		style=filled,
		typ=BlockingSubstitution];
	"32:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"48:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff6402e1950>",
		fillcolor=cadetblue,
		label="48:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff6402e1950>]",
		style=filled,
		typ=BlockingSubstitution];
	"48:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"38:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff6402e1a90>",
		fillcolor=springgreen,
		label="38:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"41:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff6402e1b10>",
		fillcolor=cadetblue,
		label="41:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff6402e1b10>]",
		style=filled,
		typ=BlockingSubstitution];
	"38:IF" -> "41:BS"	[cond="['x']",
		label="!((~x))",
		lineno=38];
	"39:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff6402e1c90>",
		fillcolor=cadetblue,
		label="39:BS
next_state = S10;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff6402e1c90>]",
		style=filled,
		typ=BlockingSubstitution];
	"38:IF" -> "39:BS"	[cond="['x']",
		label="(~x)",
		lineno=38];
	"50:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7ff63fb86110>",
		fillcolor=lightcyan,
		label="50:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"51:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7ff63fb86190>",
		fillcolor=turquoise,
		label="51:BL
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff63fb861d0>]",
		style=filled,
		typ=Block];
	"50:CA" -> "51:BL"	[cond="[]",
		lineno=None];
	"55:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff63fb86310>",
		fillcolor=cadetblue,
		label="55:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff63fb86310>]",
		style=filled,
		typ=BlockingSubstitution];
	"55:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"44:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7ff6402e1ed0>",
		fillcolor=turquoise,
		label="44:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"45:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff6402e1f10>",
		fillcolor=springgreen,
		label="45:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"44:BL" -> "45:IF"	[cond="[]",
		lineno=None];
	"41:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"30:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7ff63fb86450>",
		fillcolor=turquoise,
		label="30:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"31:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7ff63fb86490>",
		fillcolor=springgreen,
		label="31:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"30:BL" -> "31:IF"	[cond="[]",
		lineno=None];
	"27:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7ff63fb86790>",
		fillcolor=turquoise,
		label="27:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"28:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7ff63fb867d0>",
		fillcolor=linen,
		label="28:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"27:BL" -> "28:CS"	[cond="[]",
		lineno=None];
	"29:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7ff63fb86890>",
		fillcolor=lightcyan,
		label="29:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"29:CA" -> "30:BL"	[cond="[]",
		lineno=None];
	"45:IF" -> "48:BS"	[cond="['x']",
		label="!(x)",
		lineno=45];
	"46:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff6402e1f50>",
		fillcolor=cadetblue,
		label="46:BS
next_state = S101;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7ff6402e1f50>]",
		style=filled,
		typ=BlockingSubstitution];
	"45:IF" -> "46:BS"	[cond="['x']",
		label=x,
		lineno=45];
	"26:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7ff63fb865d0>",
		clk_sens=False,
		fillcolor=gold,
		label="26:AL",
		sens="['present_state', 'x']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['x', 'present_state']"];
	"26:AL" -> "27:BL"	[cond="[]",
		lineno=None];
	"36:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7ff63fb86950>",
		fillcolor=lightcyan,
		label="36:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"37:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7ff63fb869d0>",
		fillcolor=turquoise,
		label="37:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"36:CA" -> "37:BL"	[cond="[]",
		lineno=None];
	"54:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7ff63fb86550>",
		fillcolor=lightcyan,
		label="54:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"54:CA" -> "55:BS"	[cond="[]",
		lineno=None];
	"31:IF" -> "34:BS"	[cond="['x']",
		label="!(x)",
		lineno=31];
	"31:IF" -> "32:BS"	[cond="['x']",
		label=x,
		lineno=31];
	"28:CS" -> "50:CA"	[cond="['present_state']",
		label=present_state,
		lineno=28];
	"28:CS" -> "29:CA"	[cond="['present_state']",
		label=present_state,
		lineno=28];
	"28:CS" -> "36:CA"	[cond="['present_state']",
		label=present_state,
		lineno=28];
	"28:CS" -> "54:CA"	[cond="['present_state']",
		label=present_state,
		lineno=28];
	"43:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7ff6402e1e50>",
		fillcolor=lightcyan,
		label="43:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"28:CS" -> "43:CA"	[cond="['present_state']",
		label=present_state,
		lineno=28];
	"39:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"43:CA" -> "44:BL"	[cond="[]",
		lineno=None];
	"37:BL" -> "38:IF"	[cond="[]",
		lineno=None];
	"46:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"51:BL" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
}
