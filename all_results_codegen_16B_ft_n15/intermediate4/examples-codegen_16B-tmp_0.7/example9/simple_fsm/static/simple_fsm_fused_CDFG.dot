strict digraph "compose( ,  )" {
	node [label="\N"];
	"20:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f67f7b31050>",
		fillcolor=turquoise,
		label="20:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"21:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f67f7b26e90>",
		fillcolor=linen,
		label="21:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"20:BL" -> "21:CS"	[cond="[]",
		lineno=None];
	"34:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f67f96a8ad0>",
		fillcolor=cadetblue,
		label="34:BS
next_state = 1'd0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f67f96a8ad0>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_19:AL"	[def_var="['next_state']",
		label="Leaf_19:AL"];
	"34:BS" -> "Leaf_19:AL"	[cond="[]",
		lineno=None];
	"32:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f67f7ba0a50>",
		fillcolor=cadetblue,
		label="32:BS
next_state = 1'd1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f67f7ba0a50>]",
		style=filled,
		typ=BlockingSubstitution];
	"32:BS" -> "Leaf_19:AL"	[cond="[]",
		lineno=None];
	"24:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f67f7b26150>",
		fillcolor=springgreen,
		label="24:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"25:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f67f7b26450>",
		fillcolor=cadetblue,
		label="25:BS
next_state = 1'd0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f67f7b26450>]",
		style=filled,
		typ=BlockingSubstitution];
	"24:IF" -> "25:BS"	[cond="['in']",
		label=in,
		lineno=24];
	"27:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f67f7b26550>",
		fillcolor=cadetblue,
		label="27:BS
next_state = 1'd1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f67f7b26550>]",
		style=filled,
		typ=BlockingSubstitution];
	"24:IF" -> "27:BS"	[cond="['in']",
		label="!(in)",
		lineno=24];
	"19:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f67f7b46550>",
		clk_sens=False,
		fillcolor=gold,
		label="19:AL",
		sens="['in', 'present_state']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['present_state', 'in']"];
	"19:AL" -> "20:BL"	[cond="[]",
		lineno=None];
	"25:BS" -> "Leaf_19:AL"	[cond="[]",
		lineno=None];
	"12:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f67f7ad6810>",
		clk_sens=True,
		fillcolor=gold,
		label="12:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'next_state']"];
	"Leaf_19:AL" -> "12:AL";
	"23:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f67f7b3d6d0>",
		fillcolor=turquoise,
		label="23:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"23:BL" -> "24:IF"	[cond="[]",
		lineno=None];
	"22:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f67f7b3dc50>",
		fillcolor=lightcyan,
		label="22:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"22:CA" -> "23:BL"	[cond="[]",
		lineno=None];
	"38:AS"	[ast="<pyverilog.vparser.ast.Assign object at 0x7f67f7798c90>",
		def_var="['out']",
		fillcolor=deepskyblue,
		label="38:AS
out = present_state == 1'd0;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['present_state']"];
	"30:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f67f7f41610>",
		fillcolor=turquoise,
		label="30:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"31:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f67f7ba0650>",
		fillcolor=springgreen,
		label="31:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"30:BL" -> "31:IF"	[cond="[]",
		lineno=None];
	"27:BS" -> "Leaf_19:AL"	[cond="[]",
		lineno=None];
	"15:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f67f7b23e10>",
		fillcolor=firebrick,
		label="15:NS
present_state <= 1'd0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f67f7b23e10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_12:AL"	[def_var="['present_state']",
		label="Leaf_12:AL"];
	"15:NS" -> "Leaf_12:AL"	[cond="[]",
		lineno=None];
	"13:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f67f7ad6bd0>",
		fillcolor=turquoise,
		label="13:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"12:AL" -> "13:BL"	[cond="[]",
		lineno=None];
	"21:CS" -> "22:CA"	[cond="['present_state']",
		label=present_state,
		lineno=21];
	"29:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f67f93bf450>",
		fillcolor=lightcyan,
		label="29:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"21:CS" -> "29:CA"	[cond="['present_state']",
		label=present_state,
		lineno=21];
	"Leaf_12:AL" -> "19:AL";
	"Leaf_12:AL" -> "38:AS";
	"14:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f67f7b23890>",
		fillcolor=springgreen,
		label="14:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"13:BL" -> "14:IF"	[cond="[]",
		lineno=None];
	"31:IF" -> "34:BS"	[cond="['in']",
		label="!(in)",
		lineno=31];
	"31:IF" -> "32:BS"	[cond="['in']",
		label=in,
		lineno=31];
	"14:IF" -> "15:NS"	[cond="['reset']",
		label=reset,
		lineno=14];
	"17:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f67f7ace550>",
		fillcolor=firebrick,
		label="17:NS
present_state <= next_state;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f67f7ace550>]",
		style=filled,
		typ=NonblockingSubstitution];
	"14:IF" -> "17:NS"	[cond="['reset']",
		label="!(reset)",
		lineno=14];
	"17:NS" -> "Leaf_12:AL"	[cond="[]",
		lineno=None];
	"29:CA" -> "30:BL"	[cond="[]",
		lineno=None];
}
