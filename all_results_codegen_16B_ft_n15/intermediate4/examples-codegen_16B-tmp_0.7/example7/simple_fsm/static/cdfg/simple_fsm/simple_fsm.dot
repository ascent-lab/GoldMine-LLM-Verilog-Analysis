strict digraph "compose( ,  )" {
	node [label="\N"];
	"14:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f8b337a4610>",
		fillcolor=turquoise,
		label="14:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"15:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f8b337b2150>",
		fillcolor=springgreen,
		label="15:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"14:BL" -> "15:IF"	[cond="[]",
		lineno=None];
	"20:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f8b337b2250>",
		fillcolor=turquoise,
		label="20:BL
present_state <= next_state;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8b337b2050>]",
		style=filled,
		typ=Block];
	"Leaf_13:AL"	[def_var="['present_state']",
		label="Leaf_13:AL"];
	"20:BL" -> "Leaf_13:AL"	[cond="[]",
		lineno=None];
	"12:AS"	[ast="<pyverilog.vparser.ast.Assign object at 0x7f8b33756bd0>",
		def_var="['out']",
		fillcolor=deepskyblue,
		label="12:AS
out = present_state & in;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['present_state', 'in']"];
	"31:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f8b33a6a1d0>",
		fillcolor=lightcyan,
		label="31:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"32:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f8b33a6a310>",
		fillcolor=turquoise,
		label="32:BL
next_state <= ~in;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8b33a6ad90>]",
		style=filled,
		typ=Block];
	"31:CA" -> "32:BL"	[cond="[]",
		lineno=None];
	"Leaf_24:AL"	[def_var="['next_state']",
		label="Leaf_24:AL"];
	"32:BL" -> "Leaf_24:AL"	[cond="[]",
		lineno=None];
	"Leaf_13:AL" -> "12:AS";
	"24:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f8b337a7ad0>",
		clk_sens=False,
		fillcolor=gold,
		label="24:AL",
		sens="['in', 'present_state']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['present_state', 'in']"];
	"Leaf_13:AL" -> "24:AL";
	"27:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f8b337a7090>",
		fillcolor=lightcyan,
		label="27:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"28:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f8b33bc1610>",
		fillcolor=turquoise,
		label="28:BL
next_state <= in;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8b36e64190>]",
		style=filled,
		typ=Block];
	"27:CA" -> "28:BL"	[cond="[]",
		lineno=None];
	"13:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f8b337a4e10>",
		clk_sens=True,
		fillcolor=gold,
		label="13:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'next_state']"];
	"Leaf_24:AL" -> "13:AL";
	"13:AL" -> "14:BL"	[cond="[]",
		lineno=None];
	"15:IF" -> "20:BL"	[cond="['reset']",
		label="!(reset)",
		lineno=15];
	"16:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f8b3374ee90>",
		fillcolor=turquoise,
		label="16:BL
present_state <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f8b3374ebd0>]",
		style=filled,
		typ=Block];
	"15:IF" -> "16:BL"	[cond="['reset']",
		label=reset,
		lineno=15];
	"26:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f8b37905d10>",
		fillcolor=linen,
		label="26:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"26:CS" -> "31:CA"	[cond="['present_state']",
		label=present_state,
		lineno=26];
	"26:CS" -> "27:CA"	[cond="['present_state']",
		label=present_state,
		lineno=26];
	"25:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f8b337a7150>",
		fillcolor=turquoise,
		label="25:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"24:AL" -> "25:BL"	[cond="[]",
		lineno=None];
	"25:BL" -> "26:CS"	[cond="[]",
		lineno=None];
	"16:BL" -> "Leaf_13:AL"	[cond="[]",
		lineno=None];
	"28:BL" -> "Leaf_24:AL"	[cond="[]",
		lineno=None];
}
