strict digraph "compose( ,  )" {
	node [label="\N"];
	"Leaf_23:AL"	[def_var="['next_state']",
		label="Leaf_23:AL"];
	"13:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f6106b16bd0>",
		clk_sens=True,
		fillcolor=gold,
		label="13:AL",
		sens="['clk', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'next_state']"];
	"Leaf_23:AL" -> "13:AL";
	"15:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f6106b633d0>",
		fillcolor=turquoise,
		label="15:BL
present_state <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f6106b63210>]",
		style=filled,
		typ=Block];
	"Leaf_13:AL"	[def_var="['present_state']",
		label="Leaf_13:AL"];
	"15:BL" -> "Leaf_13:AL"	[cond="[]",
		lineno=None];
	"23:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f6106b71250>",
		clk_sens=False,
		fillcolor=gold,
		label="23:AL",
		sens="['present_state']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['present_state', 'in']"];
	"Leaf_13:AL" -> "23:AL";
	"29:AS"	[ast="<pyverilog.vparser.ast.Assign object at 0x7f6106be0890>",
		def_var="['out']",
		fillcolor=deepskyblue,
		label="29:AS
out = (present_state == 1'b1)? 1'b1 : 1'b0;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['present_state']"];
	"Leaf_13:AL" -> "29:AS";
	"24:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f6106b66450>",
		fillcolor=linen,
		label="24:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"26:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f6106b66f50>",
		fillcolor=lightcyan,
		label="26:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"24:CS" -> "26:CA"	[cond="['present_state']",
		label=present_state,
		lineno=24];
	"25:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f6106b7dd10>",
		fillcolor=lightcyan,
		label="25:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"24:CS" -> "25:CA"	[cond="['present_state']",
		label=present_state,
		lineno=24];
	"19:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f6106b0e290>",
		fillcolor=turquoise,
		label="19:BL
present_state <= next_state;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f6106b0e4d0>]",
		style=filled,
		typ=Block];
	"19:BL" -> "Leaf_13:AL"	[cond="[]",
		lineno=None];
	"26:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f610837f450>",
		fillcolor=cadetblue,
		label="26:BS
next_state = (in)? 1 : 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f610837f450>]",
		style=filled,
		typ=BlockingSubstitution];
	"26:CA" -> "26:BS"	[cond="[]",
		lineno=None];
	"14:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f6106b63610>",
		fillcolor=springgreen,
		label="14:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"13:AL" -> "14:IF"	[cond="[]",
		lineno=None];
	"25:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f6106b66950>",
		fillcolor=cadetblue,
		label="25:BS
next_state = (in)? 0 : 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f6106b66950>]",
		style=filled,
		typ=BlockingSubstitution];
	"25:BS" -> "Leaf_23:AL"	[cond="[]",
		lineno=None];
	"25:CA" -> "25:BS"	[cond="[]",
		lineno=None];
	"14:IF" -> "15:BL"	[cond="['reset']",
		label=reset,
		lineno=14];
	"14:IF" -> "19:BL"	[cond="['reset']",
		label="!(reset)",
		lineno=14];
	"26:BS" -> "Leaf_23:AL"	[cond="[]",
		lineno=None];
	"23:AL" -> "24:CS"	[cond="[]",
		lineno=None];
}
