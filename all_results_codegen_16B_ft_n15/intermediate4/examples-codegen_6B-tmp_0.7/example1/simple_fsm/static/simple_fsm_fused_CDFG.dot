strict digraph "compose( ,  )" {
	node [label="\N"];
	"22:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f29105e6850>",
		clk_sens=False,
		fillcolor=gold,
		label="22:AL",
		sens="['present_state', 'in']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['present_state', 'in']"];
	"23:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f29105e6950>",
		fillcolor=turquoise,
		label="23:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"22:AL" -> "23:BL"	[cond="[]",
		lineno=None];
	"27:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2910498a10>",
		fillcolor=springgreen,
		label="27:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"28:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2910498350>",
		fillcolor=firebrick,
		label="28:NS
next_state <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2910498350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"27:IF" -> "28:NS"	[cond="['in']",
		label="!(in)",
		lineno=27];
	"27:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2910498b10>",
		fillcolor=firebrick,
		label="27:NS
next_state <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2910498b10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"27:IF" -> "27:NS"	[cond="['in']",
		label=in,
		lineno=27];
	"15:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f29105e3ed0>",
		fillcolor=turquoise,
		label="15:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"16:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f29105f1450>",
		fillcolor=springgreen,
		label="16:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"15:BL" -> "16:IF"	[cond="[]",
		lineno=None];
	"12:AS"	[ast="<pyverilog.vparser.ast.Assign object at 0x7f29105e3110>",
		def_var="['out']",
		fillcolor=deepskyblue,
		label="12:AS
out = (present_state == 1'b1) ^ in;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['present_state', 'in']"];
	"Leaf_22:AL"	[def_var="['next_state']",
		label="Leaf_22:AL"];
	"28:NS" -> "Leaf_22:AL"	[cond="[]",
		lineno=None];
	"14:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f29105e3210>",
		clk_sens=True,
		fillcolor=gold,
		label="14:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'next_state']"];
	"14:AL" -> "15:BL"	[cond="[]",
		lineno=None];
	"19:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f29105f1050>",
		fillcolor=firebrick,
		label="19:NS
present_state <= next_state;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f29105f1050>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_14:AL"	[def_var="['present_state']",
		label="Leaf_14:AL"];
	"19:NS" -> "Leaf_14:AL"	[cond="[]",
		lineno=None];
	"25:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2911dff450>",
		fillcolor=springgreen,
		label="25:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"26:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f29108aa150>",
		fillcolor=firebrick,
		label="26:NS
next_state <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f29108aa150>]",
		style=filled,
		typ=NonblockingSubstitution];
	"25:IF" -> "26:NS"	[cond="['in']",
		label="!(in)",
		lineno=25];
	"25:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2914745d10>",
		fillcolor=firebrick,
		label="25:NS
next_state <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2914745d10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"25:IF" -> "25:NS"	[cond="['in']",
		label=in,
		lineno=25];
	"26:NS" -> "Leaf_22:AL"	[cond="[]",
		lineno=None];
	"24:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f29105e6090>",
		fillcolor=linen,
		label="24:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"27:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f29108aa1d0>",
		fillcolor=lightcyan,
		label="27:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"24:CS" -> "27:CA"	[cond="['present_state']",
		label=present_state,
		lineno=24];
	"25:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f29105e6e90>",
		fillcolor=lightcyan,
		label="25:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"24:CS" -> "25:CA"	[cond="['present_state']",
		label=present_state,
		lineno=24];
	"27:NS" -> "Leaf_22:AL"	[cond="[]",
		lineno=None];
	"27:CA" -> "27:IF"	[cond="[]",
		lineno=None];
	"16:IF" -> "19:NS"	[cond="['reset']",
		label="!(reset)",
		lineno=16];
	"17:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f291058e4d0>",
		fillcolor=firebrick,
		label="17:NS
present_state <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f291058e4d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"16:IF" -> "17:NS"	[cond="['reset']",
		label=reset,
		lineno=16];
	"25:CA" -> "25:IF"	[cond="[]",
		lineno=None];
	"17:NS" -> "Leaf_14:AL"	[cond="[]",
		lineno=None];
	"25:NS" -> "Leaf_22:AL"	[cond="[]",
		lineno=None];
	"Leaf_22:AL" -> "14:AL";
	"Leaf_14:AL" -> "22:AL";
	"Leaf_14:AL" -> "12:AS";
	"23:BL" -> "24:CS"	[cond="[]",
		lineno=None];
}
