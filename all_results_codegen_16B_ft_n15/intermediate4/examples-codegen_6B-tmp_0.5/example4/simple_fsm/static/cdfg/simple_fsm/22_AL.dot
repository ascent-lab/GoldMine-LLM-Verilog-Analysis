strict digraph "" {
	node [label="\N"];
	"22:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7fafb76cc3d0>",
		clk_sens=False,
		fillcolor=gold,
		label="22:AL",
		sens="['present_state', 'in']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['present_state', 'in']"];
	"23:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fafb76cc590>",
		fillcolor=turquoise,
		label="23:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"22:AL" -> "23:BL"	[cond="[]",
		lineno=None];
	"28:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fafb76cc790>",
		fillcolor=cadetblue,
		label="28:BS
next_state = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fafb76cc790>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_22:AL"	[def_var="['next_state']",
		label="Leaf_22:AL"];
	"28:BS" -> "Leaf_22:AL"	[cond="[]",
		lineno=None];
	"29:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7fafb76ccb50>",
		fillcolor=springgreen,
		label="29:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"32:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fafb76ccb90>",
		fillcolor=cadetblue,
		label="32:BS
next_state = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fafb76ccb90>]",
		style=filled,
		typ=BlockingSubstitution];
	"29:IF" -> "32:BS"	[cond="['in']",
		label="!(in)",
		lineno=29];
	"30:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fafb76cccd0>",
		fillcolor=cadetblue,
		label="30:BS
next_state = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fafb76cccd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"29:IF" -> "30:BS"	[cond="['in']",
		label=in,
		lineno=29];
	"25:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fafb76cc690>",
		fillcolor=lightcyan,
		label="25:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"25:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7fafb76cc710>",
		fillcolor=springgreen,
		label="25:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"25:CA" -> "25:IF"	[cond="[]",
		lineno=None];
	"32:BS" -> "Leaf_22:AL"	[cond="[]",
		lineno=None];
	"26:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fafb76cc950>",
		fillcolor=cadetblue,
		label="26:BS
next_state = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fafb76cc950>]",
		style=filled,
		typ=BlockingSubstitution];
	"26:BS" -> "Leaf_22:AL"	[cond="[]",
		lineno=None];
	"25:IF" -> "28:BS"	[cond="['in']",
		label="!(in)",
		lineno=25];
	"25:IF" -> "26:BS"	[cond="['in']",
		label=in,
		lineno=25];
	"30:BS" -> "Leaf_22:AL"	[cond="[]",
		lineno=None];
	"29:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fafb76ccad0>",
		fillcolor=lightcyan,
		label="29:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"29:CA" -> "29:IF"	[cond="[]",
		lineno=None];
	"24:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7fafb76cc5d0>",
		fillcolor=linen,
		label="24:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"24:CS" -> "25:CA"	[cond="['present_state']",
		label=present_state,
		lineno=24];
	"24:CS" -> "29:CA"	[cond="['present_state']",
		label=present_state,
		lineno=24];
	"23:BL" -> "24:CS"	[cond="[]",
		lineno=None];
}
