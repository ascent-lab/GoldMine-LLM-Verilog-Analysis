strict digraph "" {
	node [label="\N"];
	"40:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f159b568dd0>",
		fillcolor=turquoise,
		label="40:BL
next_state <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f159b5688d0>]",
		style=filled,
		typ=Block];
	"Leaf_13:AL"	[def_var="['present_state', 'next_state']",
		label="Leaf_13:AL"];
	"40:BL" -> "Leaf_13:AL"	[cond="[]",
		lineno=None];
	"14:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f159b568e10>",
		fillcolor=turquoise,
		label="14:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"15:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f159b568e50>",
		fillcolor=springgreen,
		label="15:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"14:BL" -> "15:IF"	[cond="[]",
		lineno=None];
	"22:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f159b566050>",
		fillcolor=lightcyan,
		label="22:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"23:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f159b5660d0>",
		fillcolor=turquoise,
		label="23:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"22:CA" -> "23:BL"	[cond="[]",
		lineno=None];
	"33:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f159b5664d0>",
		fillcolor=lightcyan,
		label="33:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"34:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f159b566550>",
		fillcolor=turquoise,
		label="34:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"33:CA" -> "34:BL"	[cond="[]",
		lineno=None];
	"20:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f159b568ed0>",
		fillcolor=turquoise,
		label="20:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"21:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f159b568f10>",
		fillcolor=linen,
		label="21:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"20:BL" -> "21:CS"	[cond="[]",
		lineno=None];
	"21:CS" -> "22:CA"	[cond="['present_state']",
		label=present_state,
		lineno=21];
	"21:CS" -> "33:CA"	[cond="['present_state']",
		label=present_state,
		lineno=21];
	"15:IF" -> "20:BL"	[cond="['reset']",
		label="!(reset)",
		lineno=15];
	"16:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f159b566790>",
		fillcolor=turquoise,
		label="16:BL
present_state <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f159b5667d0>]",
		style=filled,
		typ=Block];
	"15:IF" -> "16:BL"	[cond="['reset']",
		label=reset,
		lineno=15];
	"24:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f159b566110>",
		fillcolor=springgreen,
		label="24:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"25:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f159b566310>",
		fillcolor=turquoise,
		label="25:BL
next_state <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f159b566350>]",
		style=filled,
		typ=Block];
	"24:IF" -> "25:BL"	[cond="['in']",
		label=in,
		lineno=24];
	"29:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f159b566150>",
		fillcolor=turquoise,
		label="29:BL
next_state <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f159b566190>]",
		style=filled,
		typ=Block];
	"24:IF" -> "29:BL"	[cond="['in']",
		label="!(in)",
		lineno=24];
	"36:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f159b5665d0>",
		fillcolor=turquoise,
		label="36:BL
next_state <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f159b566610>]",
		style=filled,
		typ=Block];
	"36:BL" -> "Leaf_13:AL"	[cond="[]",
		lineno=None];
	"35:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f159b566590>",
		fillcolor=springgreen,
		label="35:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"34:BL" -> "35:IF"	[cond="[]",
		lineno=None];
	"25:BL" -> "Leaf_13:AL"	[cond="[]",
		lineno=None];
	"13:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f159b566a10>",
		clk_sens=True,
		fillcolor=gold,
		label="13:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'present_state', 'in']"];
	"13:AL" -> "14:BL"	[cond="[]",
		lineno=None];
	"35:IF" -> "40:BL"	[cond="['in']",
		label="!(in)",
		lineno=35];
	"35:IF" -> "36:BL"	[cond="['in']",
		label=in,
		lineno=35];
	"29:BL" -> "Leaf_13:AL"	[cond="[]",
		lineno=None];
	"23:BL" -> "24:IF"	[cond="[]",
		lineno=None];
	"16:BL" -> "Leaf_13:AL"	[cond="[]",
		lineno=None];
}
