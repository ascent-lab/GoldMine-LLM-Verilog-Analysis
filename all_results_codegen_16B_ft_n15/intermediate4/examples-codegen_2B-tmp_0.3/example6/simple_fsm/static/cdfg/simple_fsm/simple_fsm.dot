strict digraph "compose( ,  )" {
	node [label="\N"];
	"16:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f555bc4ecd0>",
		fillcolor=firebrick,
		label="16:NS
present_state <= next_state;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f555bc4ecd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_12:AL"	[def_var="['present_state']",
		label="Leaf_12:AL"];
	"16:NS" -> "Leaf_12:AL"	[cond="[]",
		lineno=None];
	"Leaf_18:AL"	[def_var="['next_state']",
		label="Leaf_18:AL"];
	"12:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f555bc56bd0>",
		clk_sens=True,
		fillcolor=gold,
		label="12:AL",
		sens="['clk', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'next_state']"];
	"Leaf_18:AL" -> "12:AL";
	"25:AS"	[ast="<pyverilog.vparser.ast.Assign object at 0x7f555bd2af90>",
		def_var="['out']",
		fillcolor=deepskyblue,
		label="25:AS
out = (present_state == 1) && (next_state == 0);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['present_state', 'next_state']"];
	"Leaf_18:AL" -> "25:AS";
	"21:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f555bca6d10>",
		fillcolor=lightcyan,
		label="21:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"21:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f555bca6550>",
		fillcolor=firebrick,
		label="21:NS
next_state <= (in)? 1 : 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f555bca6550>]",
		style=filled,
		typ=NonblockingSubstitution];
	"21:CA" -> "21:NS"	[cond="[]",
		lineno=None];
	"20:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f555bca6750>",
		fillcolor=firebrick,
		label="20:NS
next_state <= (in)? 0 : 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f555bca6750>]",
		style=filled,
		typ=NonblockingSubstitution];
	"20:NS" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"20:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f555bcbd4d0>",
		fillcolor=lightcyan,
		label="20:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"20:CA" -> "20:NS"	[cond="[]",
		lineno=None];
	"13:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f555bca3ed0>",
		fillcolor=springgreen,
		label="13:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"13:IF" -> "16:NS"	[cond="['reset']",
		label="!(reset)",
		lineno=13];
	"14:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f555bca3610>",
		fillcolor=firebrick,
		label="14:NS
present_state <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f555bca3610>]",
		style=filled,
		typ=NonblockingSubstitution];
	"13:IF" -> "14:NS"	[cond="['reset']",
		label=reset,
		lineno=13];
	"12:AL" -> "13:IF"	[cond="[]",
		lineno=None];
	"18:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f555bcb1250>",
		clk_sens=False,
		fillcolor=gold,
		label="18:AL",
		sens="['present_state', 'in']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['present_state', 'in']"];
	"19:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f555d53f450>",
		fillcolor=linen,
		label="19:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"18:AL" -> "19:CS"	[cond="[]",
		lineno=None];
	"Leaf_12:AL" -> "18:AL";
	"Leaf_12:AL" -> "25:AS";
	"22:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f555bddee50>",
		fillcolor=lightcyan,
		label="22:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"22:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f555bd2a150>",
		fillcolor=firebrick,
		label="22:NS
next_state <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f555bd2a150>]",
		style=filled,
		typ=NonblockingSubstitution];
	"22:CA" -> "22:NS"	[cond="[]",
		lineno=None];
	"22:NS" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"21:NS" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"19:CS" -> "21:CA"	[cond="['present_state']",
		label=present_state,
		lineno=19];
	"19:CS" -> "20:CA"	[cond="['present_state']",
		label=present_state,
		lineno=19];
	"19:CS" -> "22:CA"	[cond="['present_state']",
		label=present_state,
		lineno=19];
	"14:NS" -> "Leaf_12:AL"	[cond="[]",
		lineno=None];
}
