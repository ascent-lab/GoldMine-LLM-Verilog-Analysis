strict digraph "compose( ,  )" {
	node [label="\N"];
	"15:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7fd012b4e4d0>",
		clk_sens=True,
		fillcolor=gold,
		label="15:AL",
		sens="['clk', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'next_state']"];
	"16:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fd012b4ebd0>",
		fillcolor=turquoise,
		label="16:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"15:AL" -> "16:BL"	[cond="[]",
		lineno=None];
	"30:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fd012a58b10>",
		fillcolor=lightcyan,
		label="30:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"30:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd012a58cd0>",
		fillcolor=cadetblue,
		label="30:BS
next_state = 0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd012a58cd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"30:CA" -> "30:BS"	[cond="[]",
		lineno=None];
	"31:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fd012a58310>",
		fillcolor=lightcyan,
		label="31:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"31:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd012a58810>",
		fillcolor=cadetblue,
		label="31:BS
next_state = 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd012a58810>]",
		style=filled,
		typ=BlockingSubstitution];
	"31:CA" -> "31:BS"	[cond="[]",
		lineno=None];
	"19:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fd012bbdc50>",
		fillcolor=turquoise,
		label="19:BL
present_state <= next_state;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd012ba6750>]",
		style=filled,
		typ=Block];
	"Leaf_15:AL"	[def_var="['present_state']",
		label="Leaf_15:AL"];
	"19:BL" -> "Leaf_15:AL"	[cond="[]",
		lineno=None];
	"Leaf_26:AL"	[def_var="['next_state']",
		label="Leaf_26:AL"];
	"30:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"31:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"17:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7fd012bb1250>",
		fillcolor=springgreen,
		label="17:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"17:IF" -> "19:BL"	[cond="['reset']",
		label="!(reset)",
		lineno=17];
	"18:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd012bb1050>",
		fillcolor=firebrick,
		label="18:NS
present_state <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fd012bb1050>]",
		style=filled,
		typ=NonblockingSubstitution];
	"17:IF" -> "18:NS"	[cond="['reset']",
		label=reset,
		lineno=17];
	"29:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd012bc6150>",
		fillcolor=cadetblue,
		label="29:BS
next_state = present_state;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd012bc6150>]",
		style=filled,
		typ=BlockingSubstitution];
	"29:BS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"26:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7fd012ba6e90>",
		clk_sens=False,
		fillcolor=gold,
		label="26:AL",
		sens="['present_state']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['present_state', 'in']"];
	"26:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fd012ba6290>",
		fillcolor=turquoise,
		label="26:BL
next_state = present_state;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7fd012ba6090>]",
		style=filled,
		typ=Block];
	"26:AL" -> "26:BL"	[cond="[]",
		lineno=None];
	"Leaf_26:AL" -> "15:AL";
	"Leaf_15:AL" -> "26:AL";
	"13:AS"	[ast="<pyverilog.vparser.ast.Assign object at 0x7fd012ba3610>",
		def_var="['out']",
		fillcolor=deepskyblue,
		label="13:AS
out = ~present_state & in | present_state & ~in;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['present_state', 'in', 'present_state', 'in']"];
	"Leaf_15:AL" -> "13:AS";
	"18:NS" -> "Leaf_15:AL"	[cond="[]",
		lineno=None];
	"28:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7fd012a58c90>",
		fillcolor=linen,
		label="28:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"26:BL" -> "28:CS"	[cond="[]",
		lineno=None];
	"28:CS" -> "30:CA"	[cond="['in', 'present_state']",
		label="{ in, present_state }",
		lineno=28];
	"28:CS" -> "31:CA"	[cond="['in', 'present_state']",
		label="{ in, present_state }",
		lineno=28];
	"29:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fd012e6ae90>",
		fillcolor=lightcyan,
		label="29:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"28:CS" -> "29:CA"	[cond="['in', 'present_state']",
		label="{ in, present_state }",
		lineno=28];
	"29:CA" -> "29:BS"	[cond="[]",
		lineno=None];
	"16:BL" -> "17:IF"	[cond="[]",
		lineno=None];
}
