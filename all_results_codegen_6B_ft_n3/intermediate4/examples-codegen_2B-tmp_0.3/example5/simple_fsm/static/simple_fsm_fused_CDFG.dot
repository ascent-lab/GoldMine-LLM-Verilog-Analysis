strict digraph "compose( ,  )" {
	node [label="\N"];
	"21:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f6f31fb1050>",
		fillcolor=turquoise,
		label="21:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"22:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f6f31fa6e90>",
		fillcolor=linen,
		label="22:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"21:BL" -> "22:CS"	[cond="[]",
		lineno=None];
	"31:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f6f3226a090>",
		fillcolor=firebrick,
		label="31:NS
next_state <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f6f3226a090>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_20:AL"	[def_var="['next_state']",
		label="Leaf_20:AL"];
	"31:NS" -> "Leaf_20:AL"	[cond="[]",
		lineno=None];
	"33:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f6f33ae8ad0>",
		fillcolor=firebrick,
		label="33:NS
next_state <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f6f33ae8ad0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"33:NS" -> "Leaf_20:AL"	[cond="[]",
		lineno=None];
	"24:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f6f31fa6150>",
		fillcolor=springgreen,
		label="24:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"25:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f6f31fa6450>",
		fillcolor=firebrick,
		label="25:NS
next_state <= 1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f6f31fa6450>]",
		style=filled,
		typ=NonblockingSubstitution];
	"24:IF" -> "25:NS"	[cond="['in']",
		label=in,
		lineno=24];
	"27:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f6f31fa6550>",
		fillcolor=firebrick,
		label="27:NS
next_state <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f6f31fa6550>]",
		style=filled,
		typ=NonblockingSubstitution];
	"24:IF" -> "27:NS"	[cond="['in']",
		label="!(in)",
		lineno=24];
	"30:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f6f3226ad10>",
		fillcolor=springgreen,
		label="30:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"30:IF" -> "31:NS"	[cond="['in']",
		label=in,
		lineno=30];
	"30:IF" -> "33:NS"	[cond="['in']",
		label="!(in)",
		lineno=30];
	"25:NS" -> "Leaf_20:AL"	[cond="[]",
		lineno=None];
	"29:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f6f36105d10>",
		fillcolor=turquoise,
		label="29:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"29:BL" -> "30:IF"	[cond="[]",
		lineno=None];
	"23:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f6f31fbdc50>",
		fillcolor=turquoise,
		label="23:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"23:BL" -> "24:IF"	[cond="[]",
		lineno=None];
	"20:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f6f31fb1250>",
		clk_sens=False,
		fillcolor=gold,
		label="20:AL",
		sens="['present_state', 'in']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['present_state', 'in']"];
	"20:AL" -> "21:BL"	[cond="[]",
		lineno=None];
	"38:AS"	[ast="<pyverilog.vparser.ast.Assign object at 0x7f6f31e58b10>",
		def_var="['out']",
		fillcolor=deepskyblue,
		label="38:AS
out = (present_state == 1) && (present_state == 0);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['present_state', 'present_state']"];
	"15:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f6f31fa3e10>",
		fillcolor=firebrick,
		label="15:NS
present_state <= 0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f6f31fa3e10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_12:AL"	[def_var="['present_state']",
		label="Leaf_12:AL"];
	"15:NS" -> "Leaf_12:AL"	[cond="[]",
		lineno=None];
	"23:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f6f31fbd6d0>",
		fillcolor=lightcyan,
		label="23:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"22:CS" -> "23:CA"	[cond="['present_state']",
		label=present_state,
		lineno=22];
	"29:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f6f323c1610>",
		fillcolor=lightcyan,
		label="29:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"22:CS" -> "29:CA"	[cond="['present_state']",
		label=present_state,
		lineno=22];
	"12:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f6f31f56810>",
		clk_sens=True,
		fillcolor=gold,
		label="12:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'next_state']"];
	"13:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7f6f31fa3d10>",
		fillcolor=turquoise,
		label="13:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"12:AL" -> "13:BL"	[cond="[]",
		lineno=None];
	"27:NS" -> "Leaf_20:AL"	[cond="[]",
		lineno=None];
	"Leaf_12:AL" -> "20:AL";
	"Leaf_12:AL" -> "38:AS";
	"14:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7f6f31fa3890>",
		fillcolor=springgreen,
		label="14:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"13:BL" -> "14:IF"	[cond="[]",
		lineno=None];
	"14:IF" -> "15:NS"	[cond="['reset']",
		label=reset,
		lineno=14];
	"17:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f6f31f4e550>",
		fillcolor=firebrick,
		label="17:NS
present_state <= next_state;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f6f31f4e550>]",
		style=filled,
		typ=NonblockingSubstitution];
	"14:IF" -> "17:NS"	[cond="['reset']",
		label="!(reset)",
		lineno=14];
	"23:CA" -> "23:BL"	[cond="[]",
		lineno=None];
	"17:NS" -> "Leaf_12:AL"	[cond="[]",
		lineno=None];
	"Leaf_20:AL" -> "12:AL";
	"29:CA" -> "29:BL"	[cond="[]",
		lineno=None];
}
