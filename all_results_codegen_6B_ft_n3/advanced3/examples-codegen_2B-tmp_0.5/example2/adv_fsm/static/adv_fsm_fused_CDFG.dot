strict digraph "compose( ,  )" {
	node [label="\N"];
	"30:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fa4a6bbf450>",
		fillcolor=lightcyan,
		label="30:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"30:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fa4a53aa250>",
		fillcolor=firebrick,
		label="30:NS
next_state <= (x)? S10 : IDLE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fa4a53aa250>]",
		style=filled,
		typ=NonblockingSubstitution];
	"30:CA" -> "30:NS"	[cond="[]",
		lineno=None];
	"23:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fa4a5331050>",
		fillcolor=firebrick,
		label="23:NS
present_state <= next_state;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fa4a5331050>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_18:AL"	[def_var="['present_state']",
		label="Leaf_18:AL"];
	"23:NS" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
	"36:AS"	[ast="<pyverilog.vparser.ast.Assign object at 0x7fa4a4f98b50>",
		def_var="['z']",
		fillcolor=deepskyblue,
		label="36:AS
z = present_state == S101;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['present_state']"];
	"Leaf_18:AL" -> "36:AS";
	"26:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7fa4a5326750>",
		clk_sens=False,
		fillcolor=gold,
		label="26:AL",
		sens="['present_state', 'x']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['x', 'IDLE', 'S1', 'present_state']"];
	"Leaf_18:AL" -> "26:AL";
	"31:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fa4a4f98b10>",
		fillcolor=firebrick,
		label="31:NS
next_state <= (x)? S101 : IDLE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fa4a4f98b10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_26:AL"	[def_var="['next_state']",
		label="Leaf_26:AL"];
	"31:NS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"19:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fa4a5323ed0>",
		fillcolor=turquoise,
		label="19:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"20:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x7fa4a5331450>",
		fillcolor=springgreen,
		label="20:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"19:BL" -> "20:IF"	[cond="[]",
		lineno=None];
	"32:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fa4a4f98610>",
		fillcolor=firebrick,
		label="32:NS
next_state <= (x)? IDLE : S1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fa4a4f98610>]",
		style=filled,
		typ=NonblockingSubstitution];
	"32:NS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"20:IF" -> "23:NS"	[cond="['reset']",
		label="!(reset)",
		lineno=20];
	"21:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fa4a52ce4d0>",
		fillcolor=firebrick,
		label="21:NS
present_state <= IDLE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fa4a52ce4d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"20:IF" -> "21:NS"	[cond="['reset']",
		label=reset,
		lineno=20];
	"31:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fa4a53aad90>",
		fillcolor=lightcyan,
		label="31:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"31:CA" -> "31:NS"	[cond="[]",
		lineno=None];
	"32:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fa4a4f98d10>",
		fillcolor=lightcyan,
		label="32:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"32:CA" -> "32:NS"	[cond="[]",
		lineno=None];
	"29:NS"	[ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fa4a5326290>",
		fillcolor=firebrick,
		label="29:NS
next_state <= (x)? S1 : IDLE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fa4a5326290>]",
		style=filled,
		typ=NonblockingSubstitution];
	"29:NS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"18:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7fa4a5323890>",
		clk_sens=True,
		fillcolor=gold,
		label="18:AL",
		sens="['clk', 'reset']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['reset', 'next_state']"];
	"18:AL" -> "19:BL"	[cond="[]",
		lineno=None];
	"27:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x7fa4a5326e90>",
		fillcolor=turquoise,
		label="27:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"26:AL" -> "27:BL"	[cond="[]",
		lineno=None];
	"Leaf_26:AL" -> "18:AL";
	"28:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x7fa4a4f983d0>",
		fillcolor=linen,
		label="28:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"27:BL" -> "28:CS"	[cond="[]",
		lineno=None];
	"28:CS" -> "30:CA"	[cond="['present_state']",
		label=present_state,
		lineno=28];
	"28:CS" -> "31:CA"	[cond="['present_state']",
		label=present_state,
		lineno=28];
	"28:CS" -> "32:CA"	[cond="['present_state']",
		label=present_state,
		lineno=28];
	"29:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7fa4a5326450>",
		fillcolor=lightcyan,
		label="29:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"28:CS" -> "29:CA"	[cond="['present_state']",
		label=present_state,
		lineno=28];
	"30:NS" -> "Leaf_26:AL"	[cond="[]",
		lineno=None];
	"29:CA" -> "29:NS"	[cond="[]",
		lineno=None];
	"21:NS" -> "Leaf_18:AL"	[cond="[]",
		lineno=None];
}
