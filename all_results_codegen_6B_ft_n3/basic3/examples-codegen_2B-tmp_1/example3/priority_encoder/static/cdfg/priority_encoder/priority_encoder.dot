strict digraph "compose( ,  )" {
	node [label="\N"];
	"7:CX"	[ast="<pyverilog.vparser.ast.CasexStatement object at 0x7f85bb586190>",
		fillcolor=lightgray,
		label="7:CX",
		statements="[]",
		style=filled,
		typ=CasexStatement];
	"17:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f85bb1d8310>",
		fillcolor=lightcyan,
		label="17:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"7:CX" -> "17:CA"	[cond="['in']",
		label=in,
		lineno=7];
	"14:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f85bb566390>",
		fillcolor=lightcyan,
		label="14:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"7:CX" -> "14:CA"	[cond="['in']",
		label=in,
		lineno=7];
	"9:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f85bb516c10>",
		fillcolor=lightcyan,
		label="9:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"7:CX" -> "9:CA"	[cond="['in']",
		label=in,
		lineno=7];
	"13:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f85bb566ed0>",
		fillcolor=lightcyan,
		label="13:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"7:CX" -> "13:CA"	[cond="['in']",
		label=in,
		lineno=7];
	"10:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f85bb563650>",
		fillcolor=lightcyan,
		label="10:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"7:CX" -> "10:CA"	[cond="['in']",
		label=in,
		lineno=7];
	"16:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f85bb5e0a90>",
		fillcolor=lightcyan,
		label="16:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"7:CX" -> "16:CA"	[cond="['in']",
		label=in,
		lineno=7];
	"11:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f85bb50ed10>",
		fillcolor=lightcyan,
		label="11:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"7:CX" -> "11:CA"	[cond="['in']",
		label=in,
		lineno=7];
	"8:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f85bb503690>",
		fillcolor=lightcyan,
		label="8:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"7:CX" -> "8:CA"	[cond="['in']",
		label=in,
		lineno=7];
	"12:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f85bb571290>",
		fillcolor=lightcyan,
		label="12:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"7:CX" -> "12:CA"	[cond="['in']",
		label=in,
		lineno=7];
	"15:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x7f85bb8dee10>",
		fillcolor=lightcyan,
		label="15:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"7:CX" -> "15:CA"	[cond="['in']",
		label=in,
		lineno=7];
	"17:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85bb1d8690>",
		fillcolor=cadetblue,
		label="17:BS
pos = 2'bxx;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85bb1d8690>]",
		style=filled,
		typ=BlockingSubstitution];
	"17:CA" -> "17:BS"	[cond="[]",
		lineno=None];
	"8:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85bb516950>",
		fillcolor=cadetblue,
		label="8:BS
pos = 2'bxx;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85bb516950>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_6:AL"	[def_var="['pos']",
		label="Leaf_6:AL"];
	"8:BS" -> "Leaf_6:AL"	[cond="[]",
		lineno=None];
	"12:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85bb57d510>",
		fillcolor=cadetblue,
		label="12:BS
pos = 2'b11;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85bb57d510>]",
		style=filled,
		typ=BlockingSubstitution];
	"12:BS" -> "Leaf_6:AL"	[cond="[]",
		lineno=None];
	"14:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85bb566590>",
		fillcolor=cadetblue,
		label="14:BS
pos = 2'b11;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85bb566590>]",
		style=filled,
		typ=BlockingSubstitution];
	"14:CA" -> "14:BS"	[cond="[]",
		lineno=None];
	"6:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x7f85bb56a090>",
		clk_sens=False,
		fillcolor=gold,
		label="6:AL",
		sens="[]",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['in']"];
	"6:AL" -> "7:CX"	[cond="[]",
		lineno=None];
	"11:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85bb571590>",
		fillcolor=cadetblue,
		label="11:BS
pos = 2'b10;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85bb571590>]",
		style=filled,
		typ=BlockingSubstitution];
	"11:BS" -> "Leaf_6:AL"	[cond="[]",
		lineno=None];
	"9:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85bb563410>",
		fillcolor=cadetblue,
		label="9:BS
pos = 2'bxx;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85bb563410>]",
		style=filled,
		typ=BlockingSubstitution];
	"9:CA" -> "9:BS"	[cond="[]",
		lineno=None];
	"13:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85bb566b10>",
		fillcolor=cadetblue,
		label="13:BS
pos = 2'b10;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85bb566b10>]",
		style=filled,
		typ=BlockingSubstitution];
	"13:CA" -> "13:BS"	[cond="[]",
		lineno=None];
	"10:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85bb50eed0>",
		fillcolor=cadetblue,
		label="10:BS
pos = 2'b01;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85bb50eed0>]",
		style=filled,
		typ=BlockingSubstitution];
	"10:CA" -> "10:BS"	[cond="[]",
		lineno=None];
	"16:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85bb586550>",
		fillcolor=cadetblue,
		label="16:BS
pos = 2'b11;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85bb586550>]",
		style=filled,
		typ=BlockingSubstitution];
	"16:CA" -> "16:BS"	[cond="[]",
		lineno=None];
	"11:CA" -> "11:BS"	[cond="[]",
		lineno=None];
	"9:BS" -> "Leaf_6:AL"	[cond="[]",
		lineno=None];
	"17:BS" -> "Leaf_6:AL"	[cond="[]",
		lineno=None];
	"15:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85bb5e0210>",
		fillcolor=cadetblue,
		label="15:BS
pos = 2'bxx;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f85bb5e0210>]",
		style=filled,
		typ=BlockingSubstitution];
	"15:BS" -> "Leaf_6:AL"	[cond="[]",
		lineno=None];
	"8:CA" -> "8:BS"	[cond="[]",
		lineno=None];
	"14:BS" -> "Leaf_6:AL"	[cond="[]",
		lineno=None];
	"12:CA" -> "12:BS"	[cond="[]",
		lineno=None];
	"16:BS" -> "Leaf_6:AL"	[cond="[]",
		lineno=None];
	"10:BS" -> "Leaf_6:AL"	[cond="[]",
		lineno=None];
	"13:BS" -> "Leaf_6:AL"	[cond="[]",
		lineno=None];
	"15:CA" -> "15:BS"	[cond="[]",
		lineno=None];
}
